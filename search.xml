<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/4a17b156.html"/>
      <url>/posts/4a17b156.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>使用 CardLink 生成卡片式链接</title>
      <link href="/posts/6c4158f9.html"/>
      <url>/posts/6c4158f9.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->逛知乎的时候，常看到卡片式的链接。卡片式链接不仅直观显示出网址、标题、网站的头像等等信息。<p>这个方案是看到<a href="https://blog.chrison.cn/work/133.html">目的地</a> 的文章，我这里也测试了一下。</p><h3 id="引入JS"><a href="#引入JS" class="headerlink" title="引入JS"></a>引入JS</h3><p>GitHub：<a href="https://github.com/Lete114/CardLink">Lete114&#x2F;CardLink</a></p><p>给网站引入JS，放置在**<code>head标签</code><strong>、</strong><code>body标签</code>**之前</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=&quot;https://cdn.jsdelivr.net/npm/cardlink&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><p>链接格式为<code>&lt;a href=&quot;网址&quot; target=&quot;_blank&quot;&gt;&lt;/a&gt;</code></p><ol><li>使用方法1</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  // 为&lt;article&gt;&lt;/article&gt;(文章)标签下所有打开新标签窗口的a标签生成卡片链接</span><br><span class="line">  cardLink(document.querySelectorAll(&#x27;article a[target=_blank]&#x27;))</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>使用方法2</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  // 为指定的a标签设置cardlink属性，最后调用cardLink()</span><br><span class="line">  document.querySelectorAll(&#x27;article a[target=_blank]&#x27;).forEach((el) =&gt; &#123;</span><br><span class="line">    el.setAttribute(&#x27;cardlink&#x27;, &#x27;&#x27;)</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  // 或</span><br><span class="line">  document.querySelector(&#x27;a#example&#x27;).setAttribute(&#x27;cardlink&#x27;, &#x27;&#x27;)</span><br><span class="line"></span><br><span class="line">  // 默认会对页面上所有a[cardlink]生成卡片链接</span><br><span class="line">  cardLink()</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><ol start="3"><li>使用方法3</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">// 使用div的ID来标注超链接</span><br><span class="line"></span><br><span class="line">cardLink(document.querySelectorAll(&#x27;#contents&gt;.article-content a[target=_blank]&#x27;))</span><br><span class="line"></span><br><span class="line">或</span><br><span class="line">? document.querySelectorAll(&#x27;#contents&gt;.article-content a[target=_blank]&#x27;).forEach((el) =&gt; &#123;</span><br><span class="line">? ? el.setAttribute(&#x27;cardlink&#x27;, &#x27;&#x27;)</span><br><span class="line">? &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="跨域请求"><a href="#跨域请求" class="headerlink" title="跨域请求"></a>跨域请求</h3><p>由于这是前端发送请求获取 HTML，可能部分网站会存在跨域 (CORS) 问题，所以?<code>cardLink</code>?允许你使用代理服务器去请求目标网站的 HTML</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  // 注意: 只有发生跨域请求时，cardLink 才会将请求发送到代理服务器(以此可以减轻代理服务器的压力)</span><br><span class="line">  // 在执行 cardLink 之前预设代理服务器</span><br><span class="line">  cardLink.server = &#x27;https://api.allorigins.win/raw?url=&#x27;</span><br><span class="line">  // cardLink.server = &#x27;https://cardlink-server.deta.dev/?url=&#x27;</span><br><span class="line"></span><br><span class="line">  // 为&lt;article&gt;&lt;/article&gt;(文章)标签下所有打开新标签窗口的a标签生成卡片链接</span><br><span class="line">  cardLink(document.querySelectorAll(&#x27;article a[target=_blank]&#x27;))</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>作者也提供自建的代理服务器方案，将目标的链接传递给代理服务器，让代理服务器去请求目标链接然后返回html文本.</p><p>GitHub: <a href="https://github.com/Lete114/CardLink/tree/server">Lete114&#x2F;CardLink at server</a></p><p>或者使用第三方的免费的跨域代理服务</p><h3 id="成果演示"><a href="#成果演示" class="headerlink" title="成果演示"></a>成果演示</h3><p><img src="https://img.jinjun.top/images/2023/03/04/ee5f0778202d4b78ec7c5362a5728dab.png" alt="CardLink"></p><p>但是经过测试发现,这个js会在控制台留下一堆bebug,一堆请求信息,都是跨域请求的信息.</p>]]></content>
      
      
      <categories>
          
          <category> 建站知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typecho </tag>
            
            <tag> Javascript </tag>
            
            <tag> HTML </tag>
            
            <tag> CardLink </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>测试单图模式</title>
      <link href="/posts/55c355ab.html"/>
      <url>/posts/55c355ab.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->测试单图模式，博客实现4种显示模式，无图，多图，单图，默认模式<p><img src="https://img.jinjun.top/images/2023/02/19/ab177b2af3fca5a190f8c9d80477a346.png" alt="请输入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> 钧言钧语 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>测试多图文章</title>
      <link href="/posts/6f8724d0.html"/>
      <url>/posts/6f8724d0.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试<p><img src="https://www.jinjun.top/usr/themes/DUX/img/th.jpg" alt="请输入图片描述"><br><img src="https://www.jinjun.top/usr/themes/DUX/img/th.jpg" alt="请输入图片描述"><br><img src="https://www.jinjun.top/usr/themes/DUX/img/th.jpg" alt="请输入图片描述"><br><img src="https://www.jinjun.top/usr/themes/DUX/img/th.jpg" alt="请输入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> 钧言钧语 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Zerotier 私有化部署根服务器(Planet)</title>
      <link href="/posts/f0531d7a.html"/>
      <url>/posts/f0531d7a.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->Zerotier 这个软件稳定使用半年以上了，但是存在一点小问题，晚上延迟会高点。在网上也搜索到不少的解决方案，搭建moom服务来中续，效果好一点。偶然在搜索的时候，发现可以自建一个planet核心节点，就尝试一下安装。<h3 id="服务概念"><a href="#服务概念" class="headerlink" title="服务概念"></a>服务概念</h3><ul><li>Planet：就类似官方的行星服务器，用来管理zerotier客户端的地址信息，帮助建立客户端之间的链接，以及无法建立直接的链接的时候，可以作为中续服务器来转发客户端之间的流量。</li><li>moom：作为中续服务器存在，官方节点的都在海外，建立国内节点做为中续，可以使转发的效率更高，延迟也低。</li></ul><h3 id="服务器选择"><a href="#服务器选择" class="headerlink" title="服务器选择"></a>服务器选择</h3><p>这里我选择了一个吃灰的服务器，腾讯的4H4G8M活动机。国内主流的云服务提供商：腾讯云、华为云、阿里云等等，当然配置不要太高，转发速度主要看带宽，单核、128m、5G硬盘、1M带宽，我测试可以运行，满足这个基本配置以上都可以跑起来了。这里我选择Debian 11.1的系统。</p><h3 id="安装Planet"><a href="#安装Planet" class="headerlink" title="安装Planet"></a>安装Planet</h3><h4 id="升级系统软件包"><a href="#升级系统软件包" class="headerlink" title="升级系统软件包"></a>升级系统软件包</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-get upgrade</span><br><span class="line">apt-get dist-upgrade</span><br></pre></td></tr></table></figure><h4 id="安装Zerotier和Ztncui"><a href="#安装Zerotier和Ztncui" class="headerlink" title="安装Zerotier和Ztncui"></a>安装Zerotier和Ztncui</h4><p>作者文档：<a href="https://blog.csdn.net/opopop880/article/details/122880479">一键搭建zerotier planet服务器脚本_独步-的博客</a><br>一键脚本仓库地址：<a href="https://gitee.com/opopop880/zerotier_planet">opopop880&#x2F;zerotier_planet</a></p><ul><li>适合于Debian和Ubuntu安装</li></ul><p>需要root权限执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://gitee.com/opopop880/zerotier_planet/raw/master/zerotier_planet_debain.sh &amp;&amp; chmod +x zerotier_planet_debain.sh &amp;&amp; ./zerotier_planet_debain.sh</span><br></pre></td></tr></table></figure><ul><li>适用redhat centos安装</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://gitee.com/opopop880/zerotier_planet/raw/master/zertotier_planet.sh?&amp;&amp; chmod +x zertotier_planet.sh &amp;&amp; ./zertotier_planet.sh?</span><br></pre></td></tr></table></figure><p>Debian和Ubuntu、如果zerotier编译过程中提示<code>nlohmann/json.hpp</code>找不到的问题，需要安装nlohmann-json-dev软件包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://kr.archive.ubuntu.com/ubuntu/pool/universe/n/nlohmann-json/nlohmann-json-dev_2.1.1-1.1_all.deb &amp;&amp; dpkg -i nlohmann-json-dev_2.1.1-1.1_all.deb</span><br></pre></td></tr></table></figure><h5 id="查看监听端口"><a href="#查看监听端口" class="headerlink" title="查看监听端口"></a>查看监听端口</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -tunlp</span><br></pre></td></tr></table></figure><p><img src="https://img.jinjun.top/images/2023/01/26/bc75b3c79e3fadc75b2e0a03af8e35ff.png" alt="netstat"></p><p>出现zerotier-one和ztncui相对应的进程和端口</p><h5 id="查看管理页面"><a href="#查看管理页面" class="headerlink" title="查看管理页面"></a>查看管理页面</h5><p>执行完成后，打开ip:3000或者<a href="https://ip:3443，用户名`admin`">https://ip:3443，用户名`admin`</a> 密码<code>password</code></p><p><img src="https://img.jinjun.top/images/2023/01/26/174bcb62197231942c4fa03adfece762.png" alt="ztncui"></p><p>能打开页面表示服务器安装成功，安装完成会在执行目录，生成<code>planet</code>文件，找到这个文件并下载下来。</p><h3 id="云服务器放行规则"><a href="#云服务器放行规则" class="headerlink" title="云服务器放行规则"></a>云服务器放行规则</h3><ul><li><p>TCP：3000、3443、9993</p></li><li><p>UDP：9993</p></li><li><p>3000端口是控制台的http</p></li><li><p>3443端口是控制台的https</p></li><li><p>9993端口是planet的根服务器之间通讯</p></li></ul><h3 id="创建网络"><a href="#创建网络" class="headerlink" title="创建网络"></a>创建网络</h3><p><img src="https://img.jinjun.top/images/2023/01/26/022327d718b83f223b49c4ac03ba18e5.png" alt="zerotier"></p><h3 id="配置网络"><a href="#配置网络" class="headerlink" title="配置网络"></a>配置网络</h3><p>控制台找到- 网络 - 简易安装 - 生成网络地址 -提交保存</p><p><img src="https://img.jinjun.top/images/2023/01/26/73f891ba5300b929f7330d63ada05ce8.png" alt="zerotier"></p><h3 id="配置ipv4和ipv6分配模式"><a href="#配置ipv4和ipv6分配模式" class="headerlink" title="配置ipv4和ipv6分配模式"></a>配置ipv4和ipv6分配模式</h3><p><img src="https://img.jinjun.top/images/2023/01/26/a903258019b8e68ad17486cd5026f2a1.png" alt="ipv4"></p><p><img src="https://img.jinjun.top/images/2023/01/26/506e67dfe9a83ba92e4ec2b74244c8cf.png" alt="ipv6"></p><h3 id="配置zerotier客户端"><a href="#配置zerotier客户端" class="headerlink" title="配置zerotier客户端"></a>配置zerotier客户端</h3><h4 id="Linux端"><a href="#Linux端" class="headerlink" title="Linux端"></a>Linux端</h4><p>官方安装方式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -s https://install.zerotier.com | sudo bash</span><br></pre></td></tr></table></figure><p>在<code>/var/lib/zerotier-one/</code> 找到刚刚下载的planet，上传替换</p><p><img src="https://img.jinjun.top/images/2023/01/26/340859f85c53525f087aed2465545984.png" alt="linux"></p><p>重启zerotier</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart zerotier-one.service</span><br></pre></td></tr></table></figure><p>加入网络，在控制台找到 <code>网络ID</code> 复制下来</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zerotier-cli join &lt;NETWORK ID&gt;</span><br></pre></td></tr></table></figure><p>加入网络后，需要在控制台点授权和分配IP才能正常使用</p><p><img src="https://img.jinjun.top/images/2023/01/26/ab8c8bc3844314c003e4647607a74433.png" alt="授权"></p><p>运行<code>zerotier-cli listpeers</code> 检查是否加入根服务器</p><p><img src="https://img.jinjun.top/images/2023/01/26/66d32b700699766b3f2480bd4e26b412.png" alt="planet"></p><p>这里的IP都是自己的设备，已经完成组网的设备，如果出现海外IP，可能是文件替换了没有重启、要排除海外IP组网。</p><h4 id="Winows端"><a href="#Winows端" class="headerlink" title="Winows端"></a>Winows端</h4><p>下载地址：<a href="https://www.zerotier.com/download/">Download – ZeroTier</a></p><p>点自动安装后，默认会在任务栏启动，需要在右下角找到zerotierUI点击 Quit 退出</p><ul><li>停止Zerotier任务</li></ul><p><img src="https://img.jinjun.top/images/2023/01/26/c5081eba803b112e00300c2aea68c6aa.png" alt="任务管理器"></p><ul><li>替换planet文件</li></ul><p>打开<code>C:\ProgramData\ZeroTier\One</code>，用刚刚下载的planet替换掉本地的planet</p><p><img src="https://img.jinjun.top/images/2023/01/26/b147bd186f818eca6c003aa2dc32d18e.png" alt="文件管理器"></p><ul><li>重启Zerotier服务</li></ul><p>在任务管理器点击重新启动Zerotier服务，等已停止变成正在运行</p><ul><li>连接私有网络</li></ul><p>在控制台找到你想加入网络的 <code>网络ID</code>，复制下来</p><p><img src="https://img.jinjun.top/images/2023/01/26/83a264a8359272be4bb685545820cf47.png" alt="网络ID"></p><p>打开ZerotierUI，在任务栏找到 右键 - join New Network</p><p><img src="https://img.jinjun.top/images/2023/01/26/61a3b3d23f421d1b6428a3ce3659dfc3.png" alt="网络ID"></p><p>在服务端界面，给本地客户端授权</p><p><img src="https://img.jinjun.top/images/2023/01/26/2c55cb5c2e64f1cae8d2e2c2f1519f70.png" alt="网络授权"></p><p>在客户端查看状态OK表示连接成功。</p><h4 id="安卓端"><a href="#安卓端" class="headerlink" title="安卓端"></a>安卓端</h4><p>安卓端的开源地址：<a href="https://github.com/kaaass/ZerotierFix">https://github.com/kaaass/ZerotierFix</a></p><p>找到刚才下载的planet的文件，然后通过软件加载下载的planet文件即可。</p><p>然后添加网络ID，然后去控制台授权当前设备就可以愉快玩耍了。</p><p><img src="https://img.jinjun.top/images/2023/01/26/370e1a2650b3f8387ac2209ca9b8840e.jpg" alt="安卓端"></p><h4 id="Linux图形化桌面端"><a href="#Linux图形化桌面端" class="headerlink" title="Linux图形化桌面端"></a>Linux图形化桌面端</h4><p>Linux端的开源地址：<a href="https://github.com/tralph3/ZeroTier-GUI">https://github.com/tralph3/ZeroTier-GUI</a></p><p>下载源码后进行解压，然后执行编译安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./make_deb.sh</span><br></pre></td></tr></table></figure><h3 id="测试网络"><a href="#测试网络" class="headerlink" title="测试网络"></a>测试网络</h3><h4 id="延迟测试"><a href="#延迟测试" class="headerlink" title="延迟测试"></a>延迟测试</h4><ul><li><p>使用ping测试</p></li><li><p>客户端距离(客户端位于深圳到广西)，延迟还是很低的</p></li></ul><p><img src="https://img.jinjun.top/images/2023/01/26/6d9f861807fad84a057473217502d469.png" alt="ping"></p>]]></content>
      
      
      <categories>
          
          <category> 虚拟化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CentOS </tag>
            
            <tag> Linux </tag>
            
            <tag> Debian </tag>
            
            <tag> Ubuntu </tag>
            
            <tag> Docker </tag>
            
            <tag> ZeroTier </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用 GoAccess 实时可视化分析web网站访问日志</title>
      <link href="/posts/4cb1b0bf.html"/>
      <url>/posts/4cb1b0bf.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->一直在羡慕宝塔的来源统计，但是功能都收费。由于使用第三方的统计可能会产生隐私问题，并没有在网站部署什么网络统计这些。之前折腾过阿里云的日志分析，但是产生费用也是挺吓人，无奈抛弃。固然付费不行，那就转向免费的软件，这里在Github找到GoAccess，下面来分享一下使用心得。<p>GoAccess 是一款开源的且具有交互视图界面的实时 <code>Web</code> 日志分析工具，通过你的 Web 浏览器或者 <code>*nix</code> 系统下的终端程序(<code>terminal</code>)即可访问。C语言编写，几乎支持所有?<code>Web</code> 日志?格式?(<code>Apache</code>,<code>Nginx</code>,<code>Amazon S3</code>,CloudFront&#96;,等等)还可以生成HTML、JSON、CSV等等多种输出格式。</p><h2 id="安装方法"><a href="#安装方法" class="headerlink" title="安装方法"></a>安装方法</h2><p>安装方法大致分为两种，系统源安装和源码编译安装，还可以使用docker来管理。</p><h3 id="源安装"><a href="#源安装" class="headerlink" title="源安装"></a>源安装</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">apt install goaccess -y</span><br><span class="line"></span><br><span class="line">yum install goaccess -y</span><br><span class="line"></span><br><span class="line">pacman -S goaccess</span><br><span class="line"></span><br><span class="line">dnf install goaccess -y</span><br></pre></td></tr></table></figure><h3 id="源码编译"><a href="#源码编译" class="headerlink" title="源码编译"></a>源码编译</h3><p><a href="https://goaccess.io/download">访问 - 下载 (goaccess.io)</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ wget https://tar.goaccess.io/goaccess-1.7.tar.gz</span><br><span class="line">$ tar -xzvf goaccess-1.7.tar.gz</span><br><span class="line">$ cd goaccess-1.7/</span><br><span class="line">$ ./configure --prefix=/usr/local/goaccess --enable-utf8 --enable-geoip=mmdb</span><br><span class="line">$ make</span><br><span class="line"># make install</span><br></pre></td></tr></table></figure><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><h4 id="常见参数说明"><a href="#常见参数说明" class="headerlink" title="常见参数说明"></a>常见参数说明</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ goaccess -h</span><br><span class="line"></span><br><span class="line">-a --agent-list 启用由主机用户代理的列表。为了更快的解析，不启用该项。</span><br><span class="line">-d --with-output-resolver 在 HTML/JSON 输出中开启 IP 解析，会使用 GeoIP 来进行 IP 解析。</span><br><span class="line">-f --log-file 需要分析的日志文件路径。</span><br><span class="line">-p --config-file 配置文件路径。</span><br><span class="line">-o --output 输出格式，支持。html、json、csv。</span><br><span class="line">-m --with-mouse 控制面板支持鼠标点击。</span><br><span class="line">-q --no-query-string 忽略请求的参数部分。</span><br><span class="line">--real-time-html 实时生成 HTML 报告。</span><br><span class="line">--daemonize 守护进程模式，--real-time-html 时使用。</span><br></pre></td></tr></table></figure><h4 id="在ssh终端查看"><a href="#在ssh终端查看" class="headerlink" title="在ssh终端查看"></a>在ssh终端查看</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">goaccess assess.log</span><br></pre></td></tr></table></figure><p><img src="https://img.jinjun.top/images/2023/01/08/b8afc5e046288ecb86504176eb0b5e35.png" alt="GoAccess"></p><p><img src="https://img.jinjun.top/images/2023/01/07/d743e76a1a51358cac98988f116dee2e.png" alt="GoAccess"></p><h5 id="控制台操作方法按键"><a href="#控制台操作方法按键" class="headerlink" title="控制台操作方法按键"></a>控制台操作方法按键</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">F1 主帮助页面</span><br><span class="line">F5 重绘主窗口</span><br><span class="line">q 退出</span><br><span class="line">1-15 跳转到对应编号的模块位置</span><br><span class="line">o 打开当前模块的详细视图</span><br><span class="line">j 当前模块向下滚动</span><br><span class="line">k 当前模块向上滚动</span><br><span class="line">s 对模块排序</span><br><span class="line">/ 在所有模块中搜索匹配</span><br><span class="line">n 查找下一个出现的位置</span><br><span class="line">g 移动到第一个模块顶部</span><br><span class="line">G 移动到最后一个模块底部</span><br></pre></td></tr></table></figure><h4 id="输出HTML模式"><a href="#输出HTML模式" class="headerlink" title="输出HTML模式"></a>输出HTML模式</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">goaccess -d /home/logs/access.log -o /home/c/www/index.html --log-format=COMBINED</span><br></pre></td></tr></table></figure><p>这里就生成了HTML文件，直接定向到站点目录下，可以直接打开进行访问。</p><p><img src="https://img.jinjun.top/images/2023/01/07/2136514571e24ec03e285e21a61bc9e4.png" alt="GoAccess"></p><h4 id="实时分析更新HTML"><a href="#实时分析更新HTML" class="headerlink" title="实时分析更新HTML"></a>实时分析更新HTML</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">goaccess -d /home/logs/access.log -o /home/c/www/index.html --log-format=COMBINED --real-time-html</span><br></pre></td></tr></table></figure><h4 id="守护模式运行"><a href="#守护模式运行" class="headerlink" title="守护模式运行"></a>守护模式运行</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">goaccess -d /home/logs/access.log -o /home/c/www/index.html --log-format=COMBINED --real-time-html --daemonize</span><br></pre></td></tr></table></figure><h4 id="定时更新文件"><a href="#定时更新文件" class="headerlink" title="定时更新文件"></a>定时更新文件</h4><p>设置定时任务。每60分钟刷新一次，更新一次HTML报表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># crontab -e</span><br><span class="line"></span><br><span class="line">*/60 * * * * goaccess -a -d -f /home/logs/access.log -o /home/c/www/index.html --log-format=COMBINED</span><br></pre></td></tr></table></figure><h3 id="其他使用方法"><a href="#其他使用方法" class="headerlink" title="其他使用方法"></a>其他使用方法</h3><p>输出JOSN报告</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">goaccess access.log -o access.json --log-format=COMBINED</span><br></pre></td></tr></table></figure><p>输出CSV文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">goaccess access.log -o access.csv --log-format=COMBINED</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CentOS </tag>
            
            <tag> Linux </tag>
            
            <tag> Debian </tag>
            
            <tag> Ubuntu </tag>
            
            <tag> Docker </tag>
            
            <tag> GoAccess </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux SSH开启密钥登录 禁止Root用户登录</title>
      <link href="/posts/ec4e7dd2.html"/>
      <url>/posts/ec4e7dd2.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->ssh默认采用密码方案，不仅面临弱密码安全挑战，复杂的还不便于记录。我就是VPS渐渐多了起来，每个服务器都分配一个复杂密码，每一次登录都要翻开备忘录查找。这时候密匙登录就成了比较的解决方案，一把钥匙游走所有门锁。<p>目前我服务器环境已经从centos迁移到Debian，大部分实例都会基于Debian运行。</p><p>如果没有安装ssh，先安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install openssh-server</span><br><span class="line">apt install -y openssh-server</span><br></pre></td></tr></table></figure><p>以下 ssh-keygen 命令默认在用户目录 <code> ~/.ssh</code> 中生成 4096 位 <code>SSH RSA</code> 公钥和私钥文件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -b 4096</span><br></pre></td></tr></table></figure><p><img src="https://img.jinjun.top/images/2023/01/03/5426314f0baddd1873837ea426fb43a9.png" alt="ssh"></p><p>使用当前登录进入用户目录，输入 <code>cd ~/.ssh/</code> 会出现<code>id_rsa</code>、<code>id_rsa.pub</code>这两个文件，<code>id_rsa</code>是私钥，<code>id_rsa.pub</code>是公钥，将公钥写入<code>authorized_keys</code>中。将<code>id_rsa</code>私钥下载并保存好，这就是一把钥匙。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 创建文件</span><br><span class="line">touch authorized_keys</span><br><span class="line"></span><br><span class="line"># 写入公钥写入</span><br><span class="line">cat id_rsa.pub &gt;&gt; authorized_keys</span><br><span class="line"></span><br><span class="line"># 查看创建文件</span><br><span class="line">ls -al ~/.ssh</span><br></pre></td></tr></table></figure><p>这个时候就要给相关文件设置权限，不然可能无法工作。如果不设置权限，如果服务器是多用户就会存在跨用户查看公钥文件，查看无所谓，如果手贱给你修改了那就无法正常登录。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod 600 authorized_keys</span><br><span class="line">chmod 700 ~/.ssh</span><br></pre></td></tr></table></figure><p>现在锁(密钥)已经配置好，那就来测试钥匙是不是能正常打开门。打开 <code>/etc/ssh/sshd_config</code> 文件，修改其中的关键参数。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># yes表示允许密钥登陆</span><br><span class="line">PubkeyAuthentication yes</span><br><span class="line"></span><br><span class="line"># 指定密钥的文件位置</span><br><span class="line">AuthorizedKeysFile      .ssh/authorized_keys .ssh/authorized_keys2</span><br></pre></td></tr></table></figure><p>到此，SSH密钥就配置完成，重启ssh服务即可上锁测试<code>/etc/init.d/ssh restart</code></p><p><img src="https://img.jinjun.top/images/2023/01/03/8e6254352667e00604eb06d0d7f12e4a.png" alt="ssh"></p><p>测试连接正确后，进行ssh加固。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 删除私钥和公钥</span><br><span class="line">rm -rf ~/.ssh/id_rsa</span><br><span class="line">rm -rf ~/.ssh/id_rsa.pub</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">vim /etc/ssh/sshd_config</span><br><span class="line"># 不允许使用密码登录</span><br><span class="line">PasswordAuthentication no</span><br></pre></td></tr></table></figure><h4 id="禁止root用户登录"><a href="#禁止root用户登录" class="headerlink" title="禁止root用户登录"></a>禁止root用户登录</h4><p>禁用root登录时候，需要新建一名用户，并授予<code>sudo</code>权限，才好设置禁止root用户登录，不然禁止了就没有用户可以登录。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/ssh/sshd_config</span><br><span class="line"></span><br><span class="line"># 禁止root用户登录</span><br><span class="line">PermitRootLogin no</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CentOS </tag>
            
            <tag> Deepin </tag>
            
            <tag> Linux </tag>
            
            <tag> Debian </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>debian 开启 SSH服务</title>
      <link href="/posts/ad96644.html"/>
      <url>/posts/ad96644.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->最近要调试新的程序，买了一台服务器安装了pve，虚拟化了几台Debian系统。发现远程连接不了，检测发现ssh服务进程不存在，这就好办了，安装ssh服务再修改配置进行端口转发访问。<h2 id="更新系统和安装ssh服务"><a href="#更新系统和安装ssh服务" class="headerlink" title="更新系统和安装ssh服务"></a>更新系统和安装ssh服务</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 更新系统软件源</span><br><span class="line">apt-get update</span><br><span class="line"># 安装ssh服务</span><br><span class="line">apt-get install -y ssh</span><br><span class="line"># 安装vim编辑器</span><br><span class="line">apt-get install -y vim</span><br></pre></td></tr></table></figure><p>ssh安装完成后，检查运行状态，一般安装完成后都会自动启动。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 开启ssh服务</span><br><span class="line">/etc/init.d/ssh start</span><br><span class="line"></span><br><span class="line"># 关闭ssh服务</span><br><span class="line">/etc/init.d/ssh stop</span><br><span class="line"></span><br><span class="line"># 重启ssh服务</span><br><span class="line">/etc/init.d/ssh restart</span><br><span class="line"></span><br><span class="line"># 查看ssh运行状态</span><br><span class="line">/etc/init.d/ssh status</span><br></pre></td></tr></table></figure><p><img src="https://img.jinjun.top/images/2022/12/24/26c414bcb2cb38239f25c1ce7e0e93fa.png" alt="ssh"></p><h2 id="备份bak文件并进行修改配置文件"><a href="#备份bak文件并进行修改配置文件" class="headerlink" title="备份bak文件并进行修改配置文件"></a>备份bak文件并进行修改配置文件</h2><p>备份ssh配置文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp /etc/ssh/sshd_config&#123;,.bak&#125;</span><br></pre></td></tr></table></figure><p>利用vim编辑器进行对<code>/etc/ssh/sshd_congif</code>配置进行修改</p><p><img src="https://img.jinjun.top/images/2022/12/24/a56a9c957ae7007a84b6833fc5179286.png" alt="ssh"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">Include /etc/ssh/sshd_config.d/*.conf</span><br><span class="line"></span><br><span class="line"># 访问远程端口</span><br><span class="line">Port 22</span><br><span class="line"># 允许root登录</span><br><span class="line">PermitRootLogin yes</span><br><span class="line"># 使用密码认证</span><br><span class="line">PasswordAuthentication yes</span><br><span class="line"># 是否允许空密码登录</span><br><span class="line">PermitEmptyPasswords no</span><br><span class="line"># 密码认证</span><br><span class="line">ChallengeResponseAuthentication no</span><br><span class="line"># 身份认证模块</span><br><span class="line">UsePAM yes</span><br><span class="line"># x11连接重定向</span><br><span class="line">X11Forwarding yes</span><br><span class="line"># 显示上次登录的信息</span><br><span class="line">PrintMotd no</span><br><span class="line"># 允许客户端使用变量名</span><br><span class="line">AcceptEnv LANG LC_*</span><br><span class="line"># 使用sftp</span><br><span class="line">Subsystem       sftp    /usr/lib/openssh/sftp-server</span><br></pre></td></tr></table></figure><p>查看配置文件，一般都默认开启部分参数。只需要参照上面的参数进行修改就可以了，把<code>#</code>注释去掉就可以开启该功能。<code>yes</code>表示开启该功能，<code>no</code>表示不开启功能，<code>#</code>注释表示禁用该配置。</p><p>修改完成保存后，进行重启ssh服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/ssh restart</span><br></pre></td></tr></table></figure><p><img src="https://img.jinjun.top/images/2022/12/24/2ddab57191144db4260caac51794cae3.png" alt="ssh"></p>]]></content>
      
      
      <categories>
          
          <category> 建站知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Debian </tag>
            
            <tag> SSH </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网页自动适配操作系统/浏览器夜间模式</title>
      <link href="/posts/a53a8705.html"/>
      <url>/posts/a53a8705.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->最近在浏览一些博主的网站，发现一个很好玩的效果，当手机浏览器切换到暗色模式后，网页也跟着切换暗色效果，切换白天模式就会切换另外的一个效果，然后用`F12`深入了解一下，就发现一个`prefers-color-scheme`这个新的css类，以前没有了解过，赶紧上网查一下。<p>在<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/@media/prefers-color-scheme">developer.mozilla.org</a>中有提到，感兴趣可以了解一下。</p><p>简单了解一下，目前主流的浏览器都开始通过<code>prefers-color-scheme</code>这个css特征来检测操作系统的主题色设置亮色或者暗色。</p><p>使用这种方法可以在操作系统或者浏览器更改系统主题时切换到暗色或者亮色，样式实时切换无需刷新，也不同于使用JS代码的定时刷新变更切换，但是这个css特征对部分浏览器兼容不好。</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><p><code>no-preference</code><br>表示系统未得知用户在这方面的选项。在布尔值上下文中，其执行结果为?<code>false</code></p><p><code>light</code><br>表示用户已告知系统他们选择使用浅色主题的界面。</p><p><code>dark</code><br>表示用户已告知系统他们选择使用暗色主题的界面。</p><blockquote><p>备注： “未得知”、“已告知”等用语，英文原文如此。 “未得知”可理解为：浏览器的宿主系统不支持设置主题色，或者支持主题色并默认为&#x2F;被设为了未设置&#x2F;无偏好。 “已告知”为：浏览器的宿主系统支持设置主题色，且被设置为了亮色或者暗色。<br>目前，若结果为 ，无法通过此媒体特性获知宿主系统是否支持设置主题色，或者用户是否主动将其设置为无偏好。出于隐私保护等方面的考虑，用户或用户代理也可能在一些情况下在浏览器内部将其设置为 。no-preferenceno-preference</p></blockquote><h3 id="关键代码"><a href="#关键代码" class="headerlink" title="关键代码"></a>关键代码</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">@media (prefers-color-scheme: dark) &#123;</span><br><span class="line">  .day.dark-scheme   &#123; background:  #333; color: white; &#125;</span><br><span class="line">  .night.dark-scheme &#123; background: black; color:  #ddd; &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@media (prefers-color-scheme: light) &#123;</span><br><span class="line">  .day.light-scheme   &#123; background: white; color:  #555; &#125;</span><br><span class="line">  .night.light-scheme &#123; background:  #eee; color: black; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="浏览器兼容性"><a href="#浏览器兼容性" class="headerlink" title="浏览器兼容性"></a>浏览器兼容性</h3><p><img src="https://img.jinjun.top/images/2022/12/21/f0dc41e7bdf7d1154ad09b3ccdab6305.png" alt="浏览器兼容性"></p><p>这个兼容性基本兼容了主流浏览器，亲测Chrome、Edge、Firefox这些最新的浏览器都支持。</p><h3 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h3><p>在Chrome、Edge浏览器打开本站，手机或者Windows切换到暗色模式，效果就会实时呈现无需刷新网页。</p>]]></content>
      
      
      <categories>
          
          <category> Typecho </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typecho </tag>
            
            <tag> Javascript </tag>
            
            <tag> HTML </tag>
            
            <tag> WEB </tag>
            
            <tag> CSS </tag>
            
            <tag> 夜间模式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>typecho自定义文章样式</title>
      <link href="/posts/7fcce85b.html"/>
      <url>/posts/7fcce85b.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->很久就想实现一个文章自定义样式，就是懒就没有行动。这一次是想完善仿的DUX的一个文章样式，之前看到就是文章加头图看多就腻了，看见最新版本的大前端主题有无图模式，就想扒下来。<p>这里我参考了<a href="http://docs.typecho.org/themes/custom-themefields">typecho文档</a>、Joe的主题的实现方式，在撰写文章时候，可以选择DIY的样式。例如默认、无图、多图、私密等等这些自定义样式。</p><p>在首页或者分类页面按照设定不同的形式输出，也可以利用typecho的自定义字段的方式添加更多好玩的样式。</p><p>在<code>functions.php</code>内搜索<code>themeFields</code>的函数，如果没有就加入下面代码，如果有的就稍做删减即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line"> * 文章类型判断加载不同样式</span><br><span class="line"> */</span><br><span class="line">function themeFields($layout)</span><br><span class="line">&#123;</span><br><span class="line">    $mode = new Typecho_Widget_Helper_Form_Element_Select(</span><br><span class="line">        &#x27;mode&#x27;,</span><br><span class="line">        array(</span><br><span class="line">            &#x27;default&#x27; =&gt; &#x27;默认模式&#x27;,</span><br><span class="line">            &#x27;multiple&#x27; =&gt; &#x27;三图模式&#x27;,</span><br><span class="line">            &#x27;none&#x27; =&gt; &#x27;无图模式&#x27;</span><br><span class="line">        ),</span><br><span class="line">        &#x27;default&#x27;,</span><br><span class="line">        &#x27;文章显示方式&#x27;,</span><br><span class="line">        &#x27;介绍：用于设置当前文章在首页和搜索页的显示方式&#x27;</span><br><span class="line">    );</span><br><span class="line">    $layout-&gt;addItem($mode);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在首页或者分类页面修改输出的代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php if ($this-&gt;have()) : ?&gt;</span><br><span class="line">&lt;?php while ($this-&gt;next()) : ?&gt;</span><br><span class="line">&lt;?php if ($this-&gt;fields-&gt;mode === &quot;none&quot;) : ?&gt;</span><br><span class="line">这里是写无图的样式</span><br><span class="line">&lt;?php elseif ($this-&gt;fields-&gt;mode === &quot;multiple&quot;) : ?&gt;</span><br><span class="line">这里是写多图的样式</span><br><span class="line">&lt;?php else : ?&gt;</span><br><span class="line">这里是写默认的样式</span><br><span class="line">&lt;?php endif; ?&gt;</span><br><span class="line">&lt;?php endwhile; ?&gt;</span><br></pre></td></tr></table></figure><p>在后台页面撰写文章可以选择喜欢的样式，前端就会根据对应输出。</p><p><img src="https://img.jinjun.top/images/2022/12/17/6f6223d09b967f701598c6c0e27bc56b.png" alt="typecho"><br><img src="https://img.jinjun.top/images/2022/12/17/62987c17719e42065217938bbb162950.png" alt="typecho"></p><h3 id="介绍几种种后台自定义段的输出样式函数，textarea输入框、input输入框、radio单选框、select下拉选择"><a href="#介绍几种种后台自定义段的输出样式函数，textarea输入框、input输入框、radio单选框、select下拉选择" class="headerlink" title="介绍几种种后台自定义段的输出样式函数，textarea输入框、input输入框、radio单选框、select下拉选择"></a>介绍几种种后台自定义段的输出样式函数，<code>textarea</code>输入框、<code>input</code>输入框、<code>radio</code>单选框、<code>select</code>下拉选择</h3><p><img src="https://img.jinjun.top/images/2022/12/17/039f03d74eddf17492e199d0cde07b0e.png" alt="typecho"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># radio单选框</span><br><span class="line">Typecho_Widget_Helper_Form_Element_Radio</span><br><span class="line"></span><br><span class="line"># select下拉选择</span><br><span class="line">Typecho_Widget_Helper_Form_Element_Select</span><br><span class="line"></span><br><span class="line"># textarea输入框</span><br><span class="line">Typecho_Widget_Helper_Form_Element_Textarea</span><br><span class="line"></span><br><span class="line"># input`输入框</span><br><span class="line">Typecho_Widget_Helper_Form_Element_Text </span><br></pre></td></tr></table></figure><p>这个有时间再详细写一下调用方式和语法，夜了发完睡觉。</p>]]></content>
      
      
      <categories>
          
          <category> Typecho </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typecho </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>测试</title>
      <link href="/posts/9daba997.html"/>
      <url>/posts/9daba997.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->测试文章标签无图模式测试文章标签无图模式测试文章标签无图模式测试文章标签无图模式测试文章标签无图模式测试文章标签无图模式测试文章标签无图模式测试文章标签无图模式测试文章标签无图模式测试文章标签无图模式测试文章标签无图模式测试文章标签无图模式测试文章标签无图模式测试文章标签无图模式测试文章标签无图模式测试文章标签无图模式测试文章标签无图模式测试文章标签无图模式测试文章标签无图模式]]></content>
      
      
      <categories>
          
          <category> 钧言钧语 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>贰拾肆年</title>
      <link href="/posts/ccfe8384.html"/>
      <url>/posts/ccfe8384.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->不知不觉又到一年，在人生的24年经历了很大事情。大一岁就成熟一点、历练多一点。真是越来越不想长大，长大了却越来越不快乐......<p>加油年轻人?2023会更好。</p><p><img src="https://img.jinjun.top/images/2022/12/03/85e5000595fd7c64073c9d565e53040b.png" alt="85e5000595fd7c64073c9d565e53040b.png"></p>]]></content>
      
      
      <categories>
          
          <category> 钧言钧语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生日快乐 </tag>
            
            <tag> 钧言钧语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>windows10无法访问NAS共享目录解决方法</title>
      <link href="/posts/fa3d2b78.html"/>
      <url>/posts/fa3d2b78.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->最近抛弃了Mac系统，回到了Windows10的系统，我安装的是LTSC版本，虽然电脑能检测到NAS的网络共享就是进入不了，提示“找不到网络路径”。<p><img src="https://img.jinjun.top/images/2022/11/30/2b3cf2533b69cf773712560302ec6ea2.png" alt="2b3cf2533b69cf773712560302ec6ea2.png"></p><h3 id="一、-开启SMB和NFS支持"><a href="#一、-开启SMB和NFS支持" class="headerlink" title="一、 开启SMB和NFS支持"></a>一、 开启SMB和NFS支持</h3><p>NAS支持SMB和NFS协议，搜索发现win10支持的是smb 3.x协议，可能有些老的设备估计是1.x的协议，所以安装一下支持smb1.0协议进行测试。NFS我是挂载云盘使用也一起安装了。</p><p><strong>PS：控制面板 》 程序 》 启动或关闭Windows功能 》 SMB 1.0&#x2F;CIFS文件共享支持 &#x2F; NFS服务</strong></p><p><img src="https://img.jinjun.top/images/2022/12/01/1289aa8ba319cfdf0e18393abbf8fca1.png" alt="1289aa8ba319cfdf0e18393abbf8fca1.png"></p><p>安装完毕进行重启发现系统可以检测到NAS但是还是提示“网络错误”</p><h3 id="二、-修改组策略"><a href="#二、-修改组策略" class="headerlink" title="二、 修改组策略"></a>二、 修改组策略</h3><p>在开始菜单右键，选择 <code>运行 (R)</code> , 快捷键 <code>win+x+r</code><br>在运行窗口输入 <code>gpedit.msc</code> 回车确认</p><p><img src="https://img.jinjun.top/images/2022/11/30/450e43ff13c71e3f39277c6df9c66eeb.png" alt="450e43ff13c71e3f39277c6df9c66eeb.png"></p><p>在本地组策略编辑器 》 启用不安全来宾登录</p><p><strong>PS：计算机配置 》 管理模板 》 网络 》 Lanman工作站 》 启用不安全的来宾登录</strong></p><p><img src="https://img.jinjun.top/images/2022/11/30/f871f1c19f40da8c40d3227925db2aff.png" alt="f871f1c19f40da8c40d3227925db2aff.png"></p><p>在弹出的窗口选择“已启用”，确认</p><p><img src="https://img.jinjun.top/images/2022/11/30/74585ffb3a60b75682e03995b2592324.png" alt="74585ffb3a60b75682e03995b2592324.png"></p><p>重启主机，再进行尝试进行连接NAS进行测试。</p><p><img src="https://img.jinjun.top/images/2022/11/30/6d4254f52bdb0260cbc721db8cdc779c.png" alt="6d4254f52bdb0260cbc721db8cdc779c.png"></p><p>搞完这些Windows 10 LTSC就可以访问SMB服务器的共享文件夹了。</p>]]></content>
      
      
      <categories>
          
          <category> 资源分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 下载 </tag>
            
            <tag> Debian </tag>
            
            <tag> 虚拟机 </tag>
            
            <tag> SSH </tag>
            
            <tag> Windows </tag>
            
            <tag> NAS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在线测试宽带网速网站/APP收集</title>
      <link href="/posts/5c6b1b68.html"/>
      <url>/posts/5c6b1b68.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->今天在群友讨论测速问题，我也调侃一下哎！之前发现测速不稳，反馈给宽带师傅，师傅上门拿仪器检测没有问题，我之后和师傅聊起我之前使用测速网测速最近一直跑不满，师傅建议我使用360测速来测速，但是360测速确实可以跑满带宽。这边分享使用过的在线的测速工具和app分享给你们，当然有更好可以和我说一下。<h2 id="运营商官方测速"><a href="#运营商官方测速" class="headerlink" title="运营商官方测速"></a>运营商官方测速</h2><p>我这边运营商是广东，主力使用是联通和电信。所以收集不了这么多运营商的测速，基本一个省都有一个运营商测速网站，可能对外省的朋友不怎么友好。外省的朋友可以用搜索引擎一下。</p><table><thead><tr><th align="center">运营商</th><th align="center">测速地址</th></tr></thead><tbody><tr><td align="center">中国移动</td><td align="center"><a href="http://speed.bj.10086.cn:3060/">移动业务速率测试平台 (10086.cn)</a></td></tr><tr><td align="center">中国联通</td><td align="center"><a href="http://58.248.23.61:8080/">广东联通宽带客户自助测速平台</a></td></tr><tr><td align="center">中国电信</td><td align="center"><a href="https://10000.gd.cn/#/speed">广东电信宽带测速平台</a></td></tr><tr><td align="center">中国电信H5</td><td align="center"><a href="https://10000.gd.cn/html5-speedtest/#/">宽带测速平台</a></td></tr><tr><td align="center">长城宽带</td><td align="center"><a href="https://www.gwbnsh.net.cn/cesu">上海长城宽带网络服务有限公司 (gwbnsh.net.cn)</a></td></tr></tbody></table><h2 id="国内高校测速站点"><a href="#国内高校测速站点" class="headerlink" title="国内高校测速站点"></a>国内高校测速站点</h2><p>基本上就是教育网的节点，都是高校维护的Speedtest网速测试，大部分都支持ipv6，还有很多没有收集到，还有也可以跟我分享一下。</p><table><thead><tr><th align="center">学校</th><th align="center">网络协议</th><th align="center">测速地址</th></tr></thead><tbody><tr><td align="center">中国科学技术大学</td><td align="center">教育网IPv4&#x2F;IPv6</td><td align="center">IPv4:<a href="http://test.ustc.edu.cn/">http://test.ustc.edu.cn/</a> <br> IPv6:<a href="http://test6.ustc.edu.cn/">http://test6.ustc.edu.cn/</a></td></tr><tr><td align="center">南京大学</td><td align="center">教育网IPv4&#x2F;IPv6</td><td align="center">IPv4:<a href="https://test.nju.edu.cn/">https://test.nju.edu.cn/</a> <br> IPv6:<a href="https://test6.nju.edu.cn/">https://test6.nju.edu.cn/</a></td></tr><tr><td align="center">上海交通大学</td><td align="center">教育网IPv4&#x2F;IPv6双栈</td><td align="center"><a href="https://wsus.sjtu.edu.cn/speedtest/">https://wsus.sjtu.edu.cn/speedtest/</a> <br> <a href="https://ftp.sjtu.edu.cn/speedtest/">https://ftp.sjtu.edu.cn/speedtest/</a></td></tr><tr><td align="center">东北大学</td><td align="center">教育网IPv4&#x2F;IPv6</td><td align="center">IPv4:<a href="https://speed.neu.edu.cn/">https://speed.neu.edu.cn/</a> <br> IPv6:<a href="https://speed.neu6.edu.cn/">https://speed.neu6.edu.cn/</a></td></tr><tr><td align="center">浙江大学</td><td align="center">教育网IPv4</td><td align="center"><a href="http://speedtest.zju.edu.cn/">http://speedtest.zju.edu.cn/</a></td></tr><tr><td align="center">东南大学</td><td align="center">教育网IPv4</td><td align="center"><a href="http://xnfz.seu.edu.cn/speed/">http://xnfz.seu.edu.cn/speed/</a></td></tr><tr><td align="center">武汉大学</td><td align="center">教育网IPv4</td><td align="center"><a href="http://www.lib.whu.edu.cn/speedtest/">http://www.lib.whu.edu.cn/speedtest/</a></td></tr><tr><td align="center">淮南联合大学</td><td align="center">教育网IPv4&#x2F;IPv6</td><td align="center">IPv4:<a href="http://speed.hnuu.edu.cn/">http://speed.hnuu.edu.cn/</a> <br> IPv6:<a href="http://speed6.hnuu.edu.cn/">http://speed6.hnuu.edu.cn/</a></td></tr><tr><td align="center">清华大学</td><td align="center">教育网IPv4&#x2F;IPv6双栈</td><td align="center"><a href="https://iptv.tsinghua.edu.cn/st/">https://iptv.tsinghua.edu.cn/st/</a></td></tr><tr><td align="center">台湾大学</td><td align="center">IPv4</td><td align="center"><a href="http://speed5.ntu.edu.tw/speed5/">http://speed5.ntu.edu.tw/speed5/</a></td></tr></tbody></table><h3 id="第三方测速站点"><a href="#第三方测速站点" class="headerlink" title="第三方测速站点"></a>第三方测速站点</h3><table><thead><tr><th align="center">提供商</th><th align="center">站点地址</th></tr></thead><tbody><tr><td align="center">测速网</td><td align="center"><a href="https://www.speedtest.cn/">https://www.speedtest.cn/</a></td></tr><tr><td align="center">Speedtest</td><td align="center"><a href="https://www.speedtest.net/">https://www.speedtest.net</a></td></tr><tr><td align="center">Fast</td><td align="center"><a href="https://fast.com/zh/cn/">https://fast.com/zh/cn/</a></td></tr><tr><td align="center">speedtest.im</td><td align="center"><a href="http://speedtest.im/">http://speedtest.im/</a></td></tr><tr><td align="center">宽带测速</td><td align="center"><a href="https://www.aicesu.cn/cesu/">https://www.aicesu.cn/cesu/</a></td></tr></tbody></table><h3 id="APP测速"><a href="#APP测速" class="headerlink" title="APP测速"></a>APP测速</h3><table><thead><tr><th align="center">应用名称</th><th align="center">提供商</th></tr></thead><tbody><tr><td align="center">花瓣测速</td><td align="center">华为</td></tr><tr><td align="center">泰尔网测</td><td align="center">工信部旗下泰尔实验室</td></tr><tr><td align="center">网速管家</td><td align="center"><a href="https://www.speedtest.cn/">https://www.speedtest.cn/</a></td></tr><tr><td align="center">speedtest</td><td align="center"><a href="https://www.speedtest.net/">https://www.speedtest.net/</a></td></tr><tr><td align="center">更多</td><td align="center">待续</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 资源分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 中国移动 </tag>
            
            <tag> 中国联通 </tag>
            
            <tag> 中国电信 </tag>
            
            <tag> 网速测试 </tag>
            
            <tag> 宽带测速 </tag>
            
            <tag> 无线测速 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>typecho实现附件图片缩略图和输出多张图片方法</title>
      <link href="/posts/29a1c7f5.html"/>
      <url>/posts/29a1c7f5.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->最近在折腾主题的时候，我想让图片显示得更加规范一点，比如显示多张，总不能老是获取第一张图片做缩略图，DIY自定义一下。<p>在<code>百毒</code>搜索一番没有找到确实答案，于是一番折腾在<code>Joe</code>主题找到大部分答案，我把代码记录下，一通Ctrl+C+V。</p><h3 id="在主题的functions-php添加以下代码"><a href="#在主题的functions-php添加以下代码" class="headerlink" title="在主题的functions.php添加以下代码"></a>在主题的<code>functions.php</code>添加以下代码</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">/* 自定义图片缩略图 */</span><br><span class="line">    $thumb = new Typecho_Widget_Helper_Form_Element_Textarea(</span><br><span class="line">        &#x27;thumb&#x27;,</span><br><span class="line">        NULL,</span><br><span class="line">        NULL,</span><br><span class="line">        &#x27;自定义缩略图（非必填）&#x27;,</span><br><span class="line">        &#x27;填写时：将会显示填写的文章缩略图 &lt;br&gt;</span><br><span class="line">         不填写时：&lt;br&gt;</span><br><span class="line">            1、若文章有图片则取文章内图片 &lt;br&gt;</span><br><span class="line">            2、若文章无图片，并且外观设置里未填写·自定义缩略图·选项，则取模板自带图片 &lt;br&gt;</span><br><span class="line">            3、若文章无图片，并且外观设置里填写了·自定义缩略图·选项，则取自定义缩略图图片 &lt;br&gt;</span><br><span class="line">         注意：多个缩略图时换行填写，一行一个（仅在三图模式下生效）&#x27;</span><br><span class="line">    );</span><br><span class="line">    $layout-&gt;addItem($thumb);</span><br><span class="line"></span><br><span class="line">/* 多张缩略图 */</span><br><span class="line">    $JThumbnail = new Typecho_Widget_Helper_Form_Element_Textarea(</span><br><span class="line">        &#x27;JThumbnail&#x27;,</span><br><span class="line">        NULL,</span><br><span class="line">        NULL,</span><br><span class="line">        &#x27;自定义缩略图&#x27;,</span><br><span class="line">        &#x27;介绍：用于修改主题默认缩略图 &lt;br/&gt;</span><br><span class="line">         格式：图片地址，一行一个 &lt;br /&gt;</span><br><span class="line">         注意：不填写时，则使用主题内置的默认缩略图</span><br><span class="line">         &#x27;</span><br><span class="line">    );</span><br><span class="line">    $JThumbnail-&gt;setAttribute(&#x27;class&#x27;, &#x27;joe_content joe_image&#x27;);</span><br><span class="line">    $form-&gt;addInput($JThumbnail);</span><br><span class="line"></span><br><span class="line">/* 获取列表缩略图 */</span><br><span class="line">function _getThumbnails($item)</span><br><span class="line">&#123;</span><br><span class="line">$result = [];</span><br><span class="line">$pattern = &#x27;/\&lt;img.*?src\=\&quot;(.*?)\&quot;[^&gt;]*&gt;/i&#x27;;</span><br><span class="line">$patternMD = &#x27;/\!\[.*?\]\((http(s)?:\/\/.*?(jpg|jpeg|gif|png|webp))/i&#x27;;</span><br><span class="line">$patternMDfoot = &#x27;/\[.*?\]:\s*(http(s)?:\/\/.*?(jpg|jpeg|gif|png|webp))/i&#x27;;</span><br><span class="line">/* 如果填写了自定义缩略图，则优先显示填写的缩略图 */</span><br><span class="line">if ($item-&gt;fields-&gt;thumb) &#123;</span><br><span class="line">$fields_thumb_arr = explode(&quot;\r\n&quot;, $item-&gt;fields-&gt;thumb);</span><br><span class="line">foreach ($fields_thumb_arr as $list) $result[] = $list;</span><br><span class="line">&#125;</span><br><span class="line">/* 如果匹配到正则，则继续补充匹配到的图片 */</span><br><span class="line">if (preg_match_all($pattern, $item-&gt;content, $thumbUrl)) &#123;</span><br><span class="line">foreach ($thumbUrl[1] as $list) $result[] = $list;</span><br><span class="line">&#125;</span><br><span class="line">if (preg_match_all($patternMD, $item-&gt;content, $thumbUrl)) &#123;</span><br><span class="line">foreach ($thumbUrl[1] as $list) $result[] = $list;</span><br><span class="line">&#125;</span><br><span class="line">if (preg_match_all($patternMDfoot, $item-&gt;content, $thumbUrl)) &#123;</span><br><span class="line">foreach ($thumbUrl[1] as $list) $result[] = $list;</span><br><span class="line">&#125;</span><br><span class="line">/* 如果上面的数量不足3个，则直接补充3个随即图进去 */</span><br><span class="line">if (sizeof($result) &lt; 3) &#123;</span><br><span class="line">$custom_thumbnail = Helper::options()-&gt;JThumbnail;</span><br><span class="line">/* 将for循环放里面，减少一次if判断 */</span><br><span class="line">if ($custom_thumbnail) &#123;</span><br><span class="line">$custom_thumbnail_arr = explode(&quot;\r\n&quot;, $custom_thumbnail);</span><br><span class="line">for ($i = 0; $i &lt; 3; $i++) &#123;</span><br><span class="line">$result[] = $custom_thumbnail_arr[array_rand($custom_thumbnail_arr, 1)] . &quot;?key=&quot; . mt_rand(0, 1000000);</span><br><span class="line">&#125;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">/* 自定义随机图片 */</span><br><span class="line">for ($i = 0; $i &lt; 3; $i++) &#123;</span><br><span class="line">$result[] = &#x27;https://cdn.jsdelivr.net/npm/typecho-joe-next@6.0.0/assets/thumb/&#x27; . rand(1, 42) . &#x27;.jpg&#x27;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">return $result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>还可以根据自己需求进行修改代码，来实现相应的效果。</p><h3 id="模板调用函数"><a href="#模板调用函数" class="headerlink" title="模板调用函数"></a>模板调用函数</h3><p>在首页或者文章页调用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php echo _getThumbnails($item)[0]; ?&gt;</span><br></pre></td></tr></table></figure><p>调用多张图片</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php $image = _getThumbnails($this) ?&gt;</span><br><span class="line">&lt;?php for ($x = 0; $x &lt; 3; $x++) : ?&gt;</span><br><span class="line">/* 调用 */</span><br><span class="line">&lt;?php echo $image[$x]; ?&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Typecho </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typecho </tag>
            
            <tag> 主题开发 </tag>
            
            <tag> 缩略图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微软edge浏览器屏蔽隐私信息采集</title>
      <link href="/posts/bb8661dd.html"/>
      <url>/posts/bb8661dd.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->使用edge 必应搜索的时候，有时候从标签打开一些网站就很卡，有时候白屏时间比较长。在响应的时候发现了一个不应该出现的加载域名`browser.events.data.msn.com`、`assets.msn.cn`，然后就去浏览器设置关闭一些安全、隐私、用户体验这些，发现还是会默认在后台加载。<p>问题没有解决，在搜索引擎搜索一下这个域名，好家伙这个域名描述的是<code>收集用户隐私访问信息</code>，真是没想到说重视隐私安全，就是天天给用户上大数据。</p><p>解决方法就是在hosts屏蔽关闭，或者使用<code>openwrt</code>、<code>爱快</code>等等路由器固件去全局屏蔽。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">0.0.0.0 api.msn.com</span><br><span class="line">0.0.0.0 pipe.aria.microsoft.com</span><br><span class="line">0.0.0.0 ntp.msn.com</span><br><span class="line">0.0.0.0 web.vortex.data.microsoft.com</span><br><span class="line">0.0.0.0 browser.events.data.msn.com</span><br><span class="line">0.0.0.0 www.msn.com</span><br><span class="line">0.0.0.0 assets.msn.com</span><br><span class="line">0.0.0.0 c.msn.com</span><br><span class="line">#以下是中国特供版</span><br><span class="line">0.0.0.0 api.msn.cn</span><br><span class="line">0.0.0.0 pipe.aria.microsoft.cn</span><br><span class="line">0.0.0.0 ntp.msn.cn</span><br><span class="line">0.0.0.0 web.vortex.data.microsoft.cn</span><br><span class="line">0.0.0.0 browser.events.data.msn.cn</span><br><span class="line">0.0.0.0 www.msn.cn</span><br><span class="line">0.0.0.0 assets.msn.cn</span><br><span class="line">0.0.0.0 c.msn.cn</span><br></pre></td></tr></table></figure><h2 id="路由器全局屏蔽"><a href="#路由器全局屏蔽" class="headerlink" title="路由器全局屏蔽"></a>路由器全局屏蔽</h2><p>我这里使用<code>openwrt</code>的固件，可以去编译固件集成<code>广告拦截大师plus</code>，一次配置就省心</p><p><img src="https://img.jinjun.top/images/2022/10/20221027-222450.png" alt="openwrt"></p><p>添加以上的域名就可以了</p><p><img src="https://img.jinjun.top/images/2022/10/20221027-222851.png" alt="openwrt"></p><p>添加完成，保存，重启一下软路由器。在电脑浏览器打开其中一个域名，看看拦截效果。</p><p><img src="https://img.jinjun.top/images/2022/10/20221027-223432.png" alt="edge浏览器"></p><h2 id="Linux-x2F-Mac系统"><a href="#Linux-x2F-Mac系统" class="headerlink" title="Linux&#x2F;Mac系统"></a>Linux&#x2F;Mac系统</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/hosts</span><br></pre></td></tr></table></figure><p>把前面的粘贴复制到hosts文件</p><p><img src="https://img.jinjun.top/images/2022/10/20221027-224157.png" alt="hosts"></p><p>保存，并验证效果。</p><p><img src="https://img.jinjun.top/images/2022/10/20221027-224504.png" alt="hosts"></p><h2 id="windos系统"><a href="#windos系统" class="headerlink" title="windos系统"></a>windos系统</h2><h3 id="hosts方法"><a href="#hosts方法" class="headerlink" title="hosts方法"></a>hosts方法</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\System32\drivers\etc\hosts</span><br></pre></td></tr></table></figure><p>在C盘找到hosts进行编辑</p><h3 id="注册表方法"><a href="#注册表方法" class="headerlink" title="注册表方法"></a>注册表方法</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Enrollments\FFFFFFFF-FFFF-FFFF-FFFF-FFFFFFFFFFFF]</span><br><span class="line">&quot;EnrollmentState&quot;=dword:00000001</span><br><span class="line">&quot;EnrollmentType&quot;=dword:00000000</span><br><span class="line">&quot;IsFederated&quot;=dword:00000000</span><br><span class="line"></span><br><span class="line">[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Provisioning\OMADM\Accounts\FFFFFFFF-FFFF-FFFF-FFFF-FFFFFFFFFFFF]</span><br><span class="line">&quot;Flags&quot;=dword:00d6fb7f</span><br><span class="line">&quot;AcctUId&quot;=&quot;0x000000000000000000000000000000000000000000000000000000000000000000000000&quot;</span><br><span class="line">&quot;RoamingCount&quot;=dword:00000000</span><br><span class="line">&quot;SslClientCertReference&quot;=&quot;MY;User;0000000000000000000000000000000000000000&quot;</span><br><span class="line">&quot;Handshake&quot;=&quot;HL&quot;</span><br><span class="line">&quot;ProtoVer&quot;=&quot;1.2&quot;</span><br><span class="line"></span><br><span class="line">[HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Edge\Recommended]</span><br><span class="line">&quot;NewTabPageLocation&quot;=&quot;about:blank&quot;</span><br></pre></td></tr></table></figure><p>在桌面保存，重命名为<code>about-blank.reg</code>，再双击运行。</p>]]></content>
      
      
      <categories>
          
          <category> 资源分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Chrome </tag>
            
            <tag> MAC </tag>
            
            <tag> 浏览器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac配置本地hosts</title>
      <link href="/posts/ebcc58a2.html"/>
      <url>/posts/ebcc58a2.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->最近访问`cloudflare`加速的网站，老是出现不间断的阻断，怀疑是运营商那边搞小动作。<p>具体就像以下这样</p><p><img src="https://img.jinjun.top/images/2022/09/ea4d8a7d38a4b.png" alt="cloudflare"></p><p>经过朋友分享的自选IP，访问速度大幅度提升，稳定性也高不少。这两个IP不知道能坚持多久。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">172.64.148.22</span><br><span class="line">172.64.149.159</span><br></pre></td></tr></table></figure><h2 id="Mac配置hosts文件"><a href="#Mac配置hosts文件" class="headerlink" title="Mac配置hosts文件"></a>Mac配置hosts文件</h2><p>我也是第一次在Mac上设置hosts，下面来设置一下吧。</p><ul><li><p>在Mac找到<code>终端、Terminal</code>这个，输入<code>sudo vi /etc/hosts</code> 〉 Enter键</p></li><li><p>输入本机的password密码 〉 Enter键 </p></li><li><p>在英文的输入模式 〉 <code>i</code> 进入编辑器模式 〉 左下角会提示<code>INSERT</code></p></li></ul><p><img src="https://img.jinjun.top/images/2022/09/c82bc404fbe7f.png" alt="hosts"></p><ul><li>输入想要设置的内容，例如：<code>10.0.0.1 deta.com</code></li></ul><p><img src="https://img.jinjun.top/images/2022/09/b01f28da51eef.png" alt="hosts"></p><ul><li><p>编辑完成，输入<code>ESC</code> 退出编辑器模式 〉输入<code>:wq</code> 保存文件</p></li><li><p>验证结果，在<code>终端、Terminal</code> 输入刚刚设置的域名</p></li></ul><p><img src="https://img.jinjun.top/images/2022/09/b4bd5bc4571ef.png" alt="hosts"></p><p>这个Ping结果比没有设置hosts的更好，进行网络测试，打开网页确实有提升。</p>]]></content>
      
      
      <categories>
          
          <category> 资源分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> MAC </tag>
            
            <tag> hosts </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初体验华为petal出行</title>
      <link href="/posts/e610ba2a.html"/>
      <url>/posts/e610ba2a.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->使用华为手机，很久在看见会员中心看见petal出行公测。昨天晚上朋友约出去喝酒，喝酒不能开小车和骑摩托车(做守法公民)。决定尝试一下华为petal出行，总体体验感觉偏差偏贵，花瓣地图实时位置的动画有时候会卡一下。<p>以前还能骑单车去，自从搞文明城市，哈喽单车的影子也少了很多，哈喽助力车也消失不见。</p><p>在<code>华为应用商店</code>搜索<code>petal出行</code></p><p><img src="https://img.jinjun.top/images/2022/09/132ff0a3ac8f8.jpg" alt="华为petal"></p><p>华为petal的服务是于快应用的方式提供。支付方式只有预付费和华为支付可以选择。</p><p><img src="https://img.jinjun.top/images/2022/09/f8203195de763.png" alt="华为petal"></p><p>司机接单还是很快的，接单的服务商<code>首汽约车</code>，上车后到目的地没有和师傅聊什么，下车的时候还不忘和师傅说了一声谢谢。还是要吐槽线路规划不是很好，明明可以红绿灯直行但是又左转，无端端跑多1公里的路程。</p><p>我看了一下司机端显示的是8.19元，我这边扣费显示是11.09元，预付费11.50元，银行卡退款0.34元，还有7分钱不翼而飞了。这样算下来平台抽成2.9元，不知道这个抽成正常不？？？</p>]]></content>
      
      
      <categories>
          
          <category> 钧言钧语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 华为 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kangle配合ipset打造黑名单系统、自动封禁IP</title>
      <link href="/posts/dcc07441.html"/>
      <url>/posts/dcc07441.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->需kangle 3.1以上商业版支持，搭配ipset或iptables自动封禁IP，解禁IP。<h2 id="安装软件包"><a href="#安装软件包" class="headerlink" title="安装软件包"></a>安装软件包</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># centos</span><br><span class="line">yum install ipset iptables</span><br><span class="line"></span><br><span class="line"># Debian</span><br><span class="line">apt install ipset iptables</span><br></pre></td></tr></table></figure><p>创建kangle的防火墙集合</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ipset create kangle hash:ip hashsize 4096 maxelem 1000000</span><br><span class="line"># 加入系统自启动</span><br><span class="line">echo &quot;/usr/sbin/ipset create kangle hash:ip hashsize 4096 maxelem 1000000&quot; &gt;&gt; /etc/rc.d/rc.local</span><br></pre></td></tr></table></figure><p>ipset的集合丢入Iptables的链，使与iptables和ipset进行联动。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">iptables -I INPUT -m set --match-set kangle src -p tcp -m multiport --destination-port 80,81,443,3312,3313 -j DROP</span><br><span class="line">service iptables save</span><br><span class="line">service iptables restart</span><br></pre></td></tr></table></figure><p>增加kangle配置文件<br><code>/vhs/kangle/ext</code>目录新建一个xml文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">touch /vhs/kangle/ext/ipset.xml;</span><br><span class="line">cat &gt;&gt;/vhs/kangle/ext/ipset.xml&lt;&lt;EOF</span><br><span class="line">&lt;!--#start 800 --&gt;</span><br><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;config&gt;</span><br><span class="line">&lt;block_ip_cmd&gt;/usr/sbin/ipset add kangle $&#123;ip&#125;&lt;/block_ip_cmd&gt;</span><br><span class="line">&lt;unblock_ip_cmd&gt;/usr/sbin/ipset del kangle $&#123;ip&#125;&lt;/unblock_ip_cmd&gt;</span><br><span class="line">&lt;flush_ip_cmd&gt;/usr/sbin/ipset flush kangle&lt;/flush_ip_cmd&gt;</span><br><span class="line">&lt;/config&gt;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>重载kangle配置文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/vhs/kangle/bin/kangle -r</span><br></pre></td></tr></table></figure><h3 id="屏蔽的IP查看"><a href="#屏蔽的IP查看" class="headerlink" title="屏蔽的IP查看"></a>屏蔽的IP查看</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ipset list kangle</span><br></pre></td></tr></table></figure><h2 id="卸载kangle-ipset防御"><a href="#卸载kangle-ipset防御" class="headerlink" title="卸载kangle ipset防御"></a>卸载kangle ipset防御</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rm -f /vhs/kangle/ext/ipset.xml</span><br><span class="line">/vhs/kangle/bin/kangle --r</span><br><span class="line">ipset flush</span><br></pre></td></tr></table></figure><h2 id="使用kangle黑名单"><a href="#使用kangle黑名单" class="headerlink" title="使用kangle黑名单"></a>使用kangle黑名单</h2><p>进入kangle的管理后台：ip:3312</p><p><code>black_list</code>标记模块。在请求控制中可以使用这个模块，这个可以和其它模块配合，如<code>ip_rate</code>用来检测某个ip的访问频率。仅在全局请求控制中才会同步到防火墙上。<br><code>per_ip_deny</code>，在配置&#x3D;&#x3D;&gt;资源限制，勾上<code>per_ip_deny</code>，kangle会对超过每ip连接数限制的加入黑名单。</p><p>设置2秒80次访问，拉入黑名单，目标选择拒绝。<br><img src="https://img.jinjun.top/images/2022/09/164fb1f8164d8.webp" alt="kangle"></p>]]></content>
      
      
      <categories>
          
          <category> 建站知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> kangle </tag>
            
            <tag> 运维教程 </tag>
            
            <tag> iptables </tag>
            
            <tag> ipset </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Debian编译安装Mysql 5.5</title>
      <link href="/posts/9538d4ce.html"/>
      <url>/posts/9538d4ce.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->## 安装依赖<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install -y binutils wget tar build-essential cmake gcc gawk bison flex texinfo automake autoconf libtool cvs libncurses5-dev libglib2.0-dev gettext intltool subversion</span><br></pre></td></tr></table></figure><h2 id="下载mysql并解压"><a href="#下载mysql并解压" class="headerlink" title="下载mysql并解压"></a>下载mysql并解压</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 官网下载mysql5.5.62</span><br><span class="line">wget https://downloads.mysql.com/archives/get/p/23/file/mysql-5.5.62.zip</span><br><span class="line"></span><br><span class="line"># 解压</span><br><span class="line">tar -zxf mysql-5.5.62.tar.gz</span><br><span class="line"></span><br><span class="line"># 进入目录</span><br><span class="line">cd mysql-5.5.62</span><br></pre></td></tr></table></figure><h2 id="设置用户和权限组"><a href="#设置用户和权限组" class="headerlink" title="设置用户和权限组"></a>设置用户和权限组</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 创建用户组</span><br><span class="line">groupadd mysql</span><br><span class="line"></span><br><span class="line"># 用户组创建用户</span><br><span class="line">useradd -M -s/sbin/nologin -g mysql -r mysql</span><br></pre></td></tr></table></figure><h2 id="设置编译参数并安装"><a href="#设置编译参数并安装" class="headerlink" title="设置编译参数并安装"></a>设置编译参数并安装</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 设置编译参数</span><br><span class="line">cmake -DCMAKE_INSTALL_PREFIX=/usr/local/mysql -DMYSQL_DATADIR=/home/mysql/data -DMYSQL_UNIX_ADDR=/tmp/mysql.sock -DDEFAULT_CHARSET=utf8 -DDEFAULT_COLLATION=utf8_unicode_ci -DWITH_READLINE=1 -DWITH_EMBEDDED_SERVER=1 -DENABLED_LOCAL_INFILE=1 -DDEFAULT_COLLATION=utf8_general_ci -DWITH_MYISAM_STORAGE_ENGINE=1 -DWITH_INNOBASE_STORAGE_ENGINE=1 -DWITH_DEBUG=0 -DMYSQL_TCP_PORT=3306 -DMYSQL_USER=mysql</span><br><span class="line"></span><br><span class="line"># 编译并安装</span><br><span class="line">make&amp;&amp;make install</span><br></pre></td></tr></table></figure><h2 id="授权mysql目录运行用户"><a href="#授权mysql目录运行用户" class="headerlink" title="授权mysql目录运行用户"></a>授权mysql目录运行用户</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">chown -R mysql:mysql /usr/local/mysql</span><br><span class="line">mkdir -p /home/mysql/data</span><br><span class="line">chown -R mysql:mysql /home/mysql</span><br></pre></td></tr></table></figure><h2 id="配置my-cnf文件"><a href="#配置my-cnf文件" class="headerlink" title="配置my.cnf文件"></a>配置my.cnf文件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rm -rf /etc/my.cnf</span><br><span class="line">touch /etc/my.cnf</span><br><span class="line">vim /etc/my.cnf</span><br></pre></td></tr></table></figure><p>复制粘贴下面的参数，也可以自己自定义！！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">[client]</span><br><span class="line">port = 3306</span><br><span class="line">socket = /tmp/mysql.sock</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line">user = mysql</span><br><span class="line">basedir = /usr/local/mysql</span><br><span class="line">datadir = /home/mysql/data</span><br><span class="line">socket = /tmp/mysql.sock</span><br><span class="line">log-error = /home/mysql/data/error.log</span><br><span class="line">max_connections = 500</span><br><span class="line">thread_cache_size = 10</span><br><span class="line">default-storage-engine = MyISAM</span><br><span class="line">innodb = OFF</span><br><span class="line">skip-innodb</span><br><span class="line">port = 3306</span><br><span class="line">socket = /tmp/mysql.sock</span><br><span class="line">skip-external-locking</span><br><span class="line">key_buffer_size = 16M</span><br><span class="line">max_allowed_packet = 20M</span><br><span class="line">table_open_cache = 256</span><br><span class="line">table_definition_cache = 400</span><br><span class="line">sort_buffer_size = 512K</span><br><span class="line">net_buffer_length = 8K</span><br><span class="line">read_buffer_size = 256K</span><br><span class="line">read_rnd_buffer_size = 512K</span><br><span class="line">myisam_sort_buffer_size = 8M</span><br><span class="line">log-bin = mysql-bin</span><br><span class="line">binlog_format = mixed</span><br><span class="line">server-id = 1</span><br><span class="line"></span><br><span class="line">[mysqldump]</span><br><span class="line">quick</span><br><span class="line"></span><br><span class="line">[mysql]</span><br><span class="line">no-auto-rehash</span><br><span class="line"></span><br><span class="line">[myisamchk]</span><br><span class="line">key_buffer_size = 20M</span><br><span class="line">sort_buffer_size = 20M</span><br><span class="line">read_buffer = 2M</span><br><span class="line">write_buffer = 2M</span><br><span class="line"></span><br><span class="line">[mysqlhotcopy]</span><br><span class="line">interactive-timeout</span><br></pre></td></tr></table></figure><h2 id="初始化mysql"><a href="#初始化mysql" class="headerlink" title="初始化mysql"></a>初始化mysql</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/mysql/scripts/mysql_install_db --user=mysql --basedir=/usr/local/mysql/ --datadir=/home/mysql/data/ --defaults-file=/etc/my.cnf</span><br><span class="line">chmod 775 /usr/local/mysql/support-files/mysql.server</span><br><span class="line">/usr/local/mysql/support-files/mysql.server start</span><br><span class="line">ln -s /usr/local/mysql/bin/mysql /usr/bin/mysql</span><br><span class="line">ln -s /usr/local/mysql/bin/mysqladmin /usr/bin/mysqladmin</span><br><span class="line">ln -s /usr/local/mysql/bin/mysqldump /usr/bin/mysqldump</span><br><span class="line">ln -s /usr/local/mysql/bin/myisamchk /usr/bin/myisamchk</span><br><span class="line">ln -s /usr/local/mysql/bin/mysqld_safe /usr/bin/mysqld_safe</span><br><span class="line">rm -rf /usr/local/mysql/data/test</span><br></pre></td></tr></table></figure><h2 id="创建开机自启动"><a href="#创建开机自启动" class="headerlink" title="创建开机自启动"></a>创建开机自启动</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">touch /lib/systemd/system/mysql.service</span><br><span class="line">vim /lib/systemd/system/mysql.service</span><br></pre></td></tr></table></figure><p>保存以下文本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=mysql server Service</span><br><span class="line">After=syslog.target network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">ExecStart=/usr/local/mysql/support-files/mysql.server start</span><br><span class="line">ExecReload=/usr/local/mysql/support-files/mysql.server restart</span><br><span class="line">ExecStop=/usr/local/mysql/support-files/mysql.server stop</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p>创建软连接</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ln -s /lib/systemd/system/mysql.service /etc/systemd/system/multi-user.target.wants/mysql</span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl enable mysql</span><br></pre></td></tr></table></figure><h2 id="设置root密码"><a href="#设置root密码" class="headerlink" title="设置root密码"></a>设置root密码</h2><p>由于刚刚安装好的mysql默认密码为空，为了安全起见，安装完成后进行修改密码。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br><span class="line">nter password:</span><br><span class="line"># 密码为空，直接回车</span><br><span class="line"></span><br><span class="line">mysql&gt; SET PASSWORD = PASSWORD(&#x27;123456&#x27;);</span><br></pre></td></tr></table></figure><p><img src="https://img.jinjun.top/images/2022/08/caed5395f7986.png" alt="mysql"></p><p>这样就成功修改成了默认密码为123456。</p>]]></content>
      
      
      <categories>
          
          <category> 建站知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> mysql </tag>
            
            <tag> Debian </tag>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Debian/Ubuntu编译安装kangle web Server</title>
      <link href="/posts/f545d2c3.html"/>
      <url>/posts/f545d2c3.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->kangle环境是一款国产的WEB服务器是跨平台、轻量级、易上手、功能强大的高性能web和反向代理服务器软件。kangle的适用平台也很广泛如：Linux、Windows、Freebsd等等这些平台都可以编译安装。<p>由于kangle的官方因为某些原因，导致官网都没有了。但是依然可以在Github上找到备份。</p><p>我之前也有写过centos7安装的教程，但是随着centos官方作死行为，我也准备把环境迁移到Debian。</p><p>这一次测试的环境是<code>Debian 10</code>和<code>Ubuntu 16</code>系统下进行编译安装，kangle能正常安装使用，easypanel面板目前还在测试。目前还在填坑中……</p><h3 id="安装第一步"><a href="#安装第一步" class="headerlink" title="安装第一步"></a>安装第一步</h3><p>先把系统所需要的环境和组件给安排上</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install wget tar libpcre3 libpcre3-dev openssl libssl-dev gcc g++ make autoconf automake libssl-dev libaio-dev sqlite3 libsqlite3-dev</span><br></pre></td></tr></table></figure><h3 id="第二步下载源码"><a href="#第二步下载源码" class="headerlink" title="第二步下载源码"></a>第二步下载源码</h3><p>这里我使用的是小樱大佬的备份，也可以去github搜索<a href="https://github.com/1265578519">1265578519</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># 下载kangle</span><br><span class="line">wget https://github.com/1265578519/kangle/releases/download/v3.5.21/kangle-3.5.21.4.tar.gz</span><br><span class="line"></span><br><span class="line"># 解压包</span><br><span class="line">tar -zxf kangle-3.5.21.4.tar.gz</span><br><span class="line"></span><br><span class="line"># 进入编译目录</span><br><span class="line">cd kangle-3.5.21.4</span><br><span class="line"></span><br><span class="line"># 设置编译配置</span><br><span class="line">./configure --prefix=/vhs/kangle --enable-disk-cache --enable-http2 --enable-ipv6 --enable-ssl --enable-vh-limit</span><br><span class="line"></span><br><span class="line"># 编译安装</span><br><span class="line">make -j&amp;&amp;make install</span><br></pre></td></tr></table></figure><p>如果顺利安装完成后，就可以启动kangle即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/vhs/kangle/bin/kangle</span><br></pre></td></tr></table></figure><p>然后尝试进入后台管理，地址为<code>IP:3311</code></p><h3 id="建立systemd管理和控制"><a href="#建立systemd管理和控制" class="headerlink" title="建立systemd管理和控制"></a>建立systemd管理和控制</h3><p>创建一个<code>kangle.service</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 创建一个文件</span><br><span class="line">touch /lib/systemd/system/kangle.service</span><br><span class="line"></span><br><span class="line"># 编辑该文件</span><br><span class="line">vim /lib/systemd/system/kangle.service</span><br></pre></td></tr></table></figure><p>在文本编辑器写入并保存</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Kangle Web Service</span><br><span class="line">After=syslog.target network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">ExecStart=/vhs/kangle/bin/kangle</span><br><span class="line">ExecStop=/vhs/kangle/bin/kangle -q</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p>保存完成，建立开机自启动</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ln -s /lib/systemd/system/kangle.service /etc/systemd/system/multi-user.target.wants/kangle</span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl enable kangle</span><br></pre></td></tr></table></figure><h3 id="kangle的常用命令"><a href="#kangle的常用命令" class="headerlink" title="kangle的常用命令"></a>kangle的常用命令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[-h --help]                  可以看到详细的参数说明</span><br><span class="line">[-d level]                   调试运行程序</span><br><span class="line">[-r --reload]                重新加载所有配置文件</span><br><span class="line">[--revh]                     重新加载etc/vh.xml文件(etc/vh.xml)</span><br><span class="line">[--reboot]                   平滑重起程序(原有程序会保证服务完客户），一般用来升级用的</span><br><span class="line">[-z [disk_dir]]              建立硬盘cache目录</span><br><span class="line">[-v --version]               查看程序版本</span><br><span class="line">[-a apache_config_file]      转换的Apache配置</span><br><span class="line">[-q] 关闭程序  [-n]           start program not in daemon</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 建站知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> kangle </tag>
            
            <tag> Debian </tag>
            
            <tag> 虚拟机 </tag>
            
            <tag> 技术教程 </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>异地组网 zerotier 尝鲜</title>
      <link href="/posts/9f2dd1bf.html"/>
      <url>/posts/9f2dd1bf.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->最近在NAS的内网穿透的frp连接不怎么稳定，速度主要是受制于服务器的带宽，使用的是腾讯的5M小水管，在视频播放方面一卡一卡实在再也无法忍受。<p>通过一番搜索，找到了<code>Zerotier</code>、<code>N2N</code>之类的sd-wan内网穿透软件。今天就来尝鲜Zerotier，也做一下笔记。</p><h3 id="注册使用"><a href="#注册使用" class="headerlink" title="注册使用"></a>注册使用</h3><p>zerotier注册：<a href="https://my.zerotier.com/">https://my.zerotier.com/</a></p><p>zerotier客户端：<a href="https://www.zerotier.com/download/">Download – ZeroTier</a></p><h3 id="使用过程"><a href="#使用过程" class="headerlink" title="使用过程"></a>使用过程</h3><p>注册成功，登录账号后，点一次就创建好一个网络，会分配一个<code>Network ID</code>这个在组网的过程会经常使用到。</p><p><img src="https://img.jinjun.top/images/2022/07/5a7b46eb395ce.png" alt="zerotier"></p><p>进入<code>Network ID</code>配置</p><p><img src="https://img.jinjun.top/images/2022/07/6927d1598195e.png" alt="zerotier"></p><p>配置局域网IP和IPV6</p><p><img src="https://img.jinjun.top/images/2022/07/5356ff736fb87.png" alt="zerotier"></p><h4 id="NAS安装使用"><a href="#NAS安装使用" class="headerlink" title="NAS安装使用"></a>NAS安装使用</h4><p>在NAS系统找到zerotier的应用，进行配置。这里我的系统是UNAS，在app管理器找到sd-wan，进行安装，其他系统自行搜索安装。</p><p><img src="https://img.jinjun.top/images/2022/07/c5efdb3976dd3.png" alt="zerotier"></p><p>安装完成后，打开应用进行配置，ID填写刚刚<code>Network ID</code>进行保存。</p><p><img src="https://img.jinjun.top/images/2022/07/4113175b58238.png" alt="zerotier"></p><p>这里进行返回到<code>zerotier</code>的网络配置页面，勾选同意设备的网络接入，并记下局域网IP，并勾选<code>Allow Ethernet Bridging</code>意思就是允许网卡桥接</p><p><img src="https://img.jinjun.top/images/2022/07/893c6937b6cd2.png" alt="zerotier"></p><h3 id="LINUX安装"><a href="#LINUX安装" class="headerlink" title="LINUX安装"></a>LINUX安装</h3><ul><li>运行官方的安装命令</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -s https://install.zerotier.com | sudo bash</span><br></pre></td></tr></table></figure><ul><li>加入网络</li></ul><p>在SSH运行下列命令进行加入网络，退出网网络，列出网络这些操作。</p><p><code>NETWORK ID</code> 就是zerotier分配的网络识别ID</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 加入网络</span><br><span class="line">zerotier-cli join &lt;NETWORK ID&gt;</span><br><span class="line"></span><br><span class="line"># 离开当前网络</span><br><span class="line">zerotier-cli leave &lt;NETWORK ID&gt;</span><br><span class="line"></span><br><span class="line"># 列出网络</span><br><span class="line">zerotier-cli listnetworks</span><br><span class="line"></span><br><span class="line"># 获取地址和服务状态</span><br><span class="line">zerotier-cli status</span><br></pre></td></tr></table></figure><ul><li>运行和停止服务</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 启动</span><br><span class="line">systemctl start zerotier-one.service</span><br><span class="line"># 停止</span><br><span class="line">systemctl stop zerotier-one.service</span><br></pre></td></tr></table></figure><h3 id="客户端测试"><a href="#客户端测试" class="headerlink" title="客户端测试"></a>客户端测试</h3><p>客户端：MAC</p><p>还是刚刚获取到的组网ID，进行配置连接，也要到<code>zerotier</code>的网络配置页面，勾选同意设备的网络接入。</p><p><img src="https://img.jinjun.top/images/2022/07/bf8d7c7e5ff4d.png" alt="MAC"></p><p>使用Mac的终端进行延迟测试</p><p><img src="https://img.jinjun.top/images/2022/07/2e239abaa4781.png" alt="mac"></p><p>使用局域网ip访问nas</p><p><img src="https://img.jinjun.top/images/2022/07/694a596dd9a22.png" alt="nasZeroTierZeroTier"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> NAT </tag>
            
            <tag> ZeroTier </tag>
            
            <tag> NAS </tag>
            
            <tag> UNAS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell查看进程是否运行，不存在进行重启</title>
      <link href="/posts/82c4a515.html"/>
      <url>/posts/82c4a515.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->最近换下宝塔的环境，转战kangle和amh，主要是宝塔被大佬爆出后门。换到其他面板后，mysql莫名其妙会被挤掉，所以写一个定时 监控的bash守护脚本，以便掉线进行重启。<h3 id="bash代码如下"><a href="#bash代码如下" class="headerlink" title="bash代码如下"></a>bash代码如下</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">result=`ps -ef|grep -w mysql|grep -v grep|wc -l`</span><br><span class="line">if [ $result -ge 1 ];then</span><br><span class="line">        echo &quot;app start sucessed&quot;</span><br><span class="line">else</span><br><span class="line">        /etc/init.d/mysql restart</span><br><span class="line">        echo &quot;Restarting current program&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p>重命名并保存为<code>mysql.sh</code>，这个名字也可以自定义</p><h3 id="函数解析"><a href="#函数解析" class="headerlink" title="函数解析"></a>函数解析</h3><h4 id="检查程序是否运行"><a href="#检查程序是否运行" class="headerlink" title="检查程序是否运行"></a>检查程序是否运行</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ps -ef|grep -w mysql       搜索mysql进程名称</span><br><span class="line">grep -v grep               过滤掉 grep 进程</span><br><span class="line">wc -l                      显示结果行数</span><br></pre></td></tr></table></figure><h4 id="if判断的类型"><a href="#if判断的类型" class="headerlink" title="if判断的类型"></a>if判断的类型</h4><p>result返回现在有多少指定进程在进程，不存在则进行下一步操作</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-eq：等于</span><br><span class="line">-ne：不等于</span><br><span class="line">-le：小于等于</span><br><span class="line">-ge：大于等于</span><br><span class="line">-lt：小于</span><br><span class="line">-gt：大于</span><br></pre></td></tr></table></figure><h3 id="crontab守护"><a href="#crontab守护" class="headerlink" title="crontab守护"></a>crontab守护</h3><p>在ssh界面进入crontab界面来设置定时任务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">crontab -e</span><br><span class="line">或</span><br><span class="line">vim /etc/crontab</span><br></pre></td></tr></table></figure><p>这里我设置5分钟的定时定时任务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*/5 * * * * bash /root/mysql.sh</span><br></pre></td></tr></table></figure><p>这样就搞定了。</p>]]></content>
      
      
      <categories>
          
          <category> 建站知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> 服务器 </tag>
            
            <tag> 运维教程 </tag>
            
            <tag> SSH </tag>
            
            <tag> 终端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Proxmox VE 6/7 配置软件源和去订阅提醒</title>
      <link href="/posts/b718387f.html"/>
      <url>/posts/b718387f.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->社区版本ProxmoxVE 会有一些不怎么友好的操作，弹订阅提示、官方源下载慢、镜像下载慢等，有一次进行配置ceph的时候，没有切换到社区源版本，导致环境崩了，只好重装系统。<h2 id="Proxmox-VE-6-x-x2F-7-x"><a href="#Proxmox-VE-6-x-x2F-7-x" class="headerlink" title="Proxmox VE 6.x&#x2F;7.x"></a>Proxmox VE 6.x&#x2F;7.x</h2><h3 id="去除官方订阅源"><a href="#去除官方订阅源" class="headerlink" title="去除官方订阅源"></a>去除官方订阅源</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mv /etc/apt/sources.list.d/pve-enterprise.list /etc/apt/sources.list.d/pve-enterprise.list.bak</span><br><span class="line"># 也可以进行删除文件</span><br><span class="line">rm -rf /etc/apt/sources.list.d/pve-enterprise.list</span><br></pre></td></tr></table></figure><h2 id="Promox-VE-6-x国内加速源"><a href="#Promox-VE-6-x国内加速源" class="headerlink" title="Promox VE 6.x国内加速源"></a>Promox VE 6.x国内加速源</h2><p>中科大源</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://mirrors.ustc.edu.cn/proxmox/debian/proxmox-release-bullseye.gpg -O /etc/apt/trusted.gpg.d/proxmox-ve-release-6.x.gpg</span><br><span class="line">echo &quot;deb https://mirrors.ustc.edu.cn/proxmox/debian/pve bullseye pve-no-subscription&quot; &gt; /etc/apt/sources.list.d/pve-no-subscription.list</span><br></pre></td></tr></table></figure><p>清华大学源</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://mirrors.tuna.tsinghua.edu.cn/proxmox/debian/dists/buster/Release.gpg -O /etc/apt/trusted.gpg.d/proxmox-release-buster.gpg</span><br><span class="line">echo &quot;deb https://mirrors.tuna.tsinghua.edu.cn/proxmox/debian buster pve-no-subscription&quot; &gt; /etc/apt/sources.list.d/pve-no-subscription.list</span><br></pre></td></tr></table></figure><p>更新软件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt update &amp;&amp; apt dist-upgrade</span><br></pre></td></tr></table></figure><h3 id="LXC仓库源更换"><a href="#LXC仓库源更换" class="headerlink" title="LXC仓库源更换"></a>LXC仓库源更换</h3><p>中科大源</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sed -i.bak &quot;s#http://download.proxmox.com/images#https://mirrors.ustc.edu.cn/proxmox/images#g&quot; /usr/share/perl5/PVE/APLInfo.pm</span><br><span class="line">wget -O /var/lib/pve-manager/apl-info/mirrors.ustc.edu.cn https://mirrors.ustc.edu.cn/proxmox/images/aplinfo-pve-6.dat</span><br><span class="line">systemctl restart pvedaemon</span><br></pre></td></tr></table></figure><p>清华大学源</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sed -i.bak &quot;s#http://download.proxmox.com/images#https://mirrors.tuna.tsinghua.edu.cn/proxmox/images#g&quot; /usr/share/perl5/PVE/APLInfo.pm</span><br><span class="line">wget -O /var/lib/pve-manager/apl-info/mirrors.ustc.edu.cn https://mirrors.tuna.tsinghua.edu.cn/proxmox/images/aplinfo-pve-6.dat</span><br><span class="line">systemctl restart pvedaemon</span><br></pre></td></tr></table></figure><p>南开NJJ源</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sed -i.bak &quot;s#http://download.proxmox.com/images#https://mirrors.nju.edu.cn/proxmox/images#g&quot; /usr/share/perl5/PVE/APLInfo.pm</span><br><span class="line">wget -O /var/lib/pve-manager/apl-info/mirrors.nju.edu.cn https://mirrors.nju.edu.cn/proxmox/images/aplinfo-pve-6.dat</span><br><span class="line">systemctl restart pvedaemon</span><br></pre></td></tr></table></figure><h3 id="CEPH源更换"><a href="#CEPH源更换" class="headerlink" title="CEPH源更换"></a>CEPH源更换</h3><p>中科大源</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;deb https://mirrors.ustc.edu.cn/proxmox/debian/ceph-pacific buster main&quot; &gt; /etc/apt/sources.list.d/ceph.list</span><br><span class="line">sed -i.bak &quot;s#http://download.proxmox.com/debian#https://mirrors.ustc.edu.cn/proxmox/debian#g&quot; /usr/share/perl5/PVE/CLI/pveceph.pm</span><br></pre></td></tr></table></figure><p>清华大学源</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;deb https://mirrors.tuna.tsinghua.edu.cn/proxmox/debian/ceph-pacific buster main&quot; &gt; /etc/apt/sources.list.d/ceph.list</span><br><span class="line">sed -i.bak &quot;s#http://download.proxmox.com/debian#https://mirrors.ustc.edu.cn/proxmox/debian#g&quot; /usr/share/perl5/PVE/CLI/pveceph.pm</span><br></pre></td></tr></table></figure><h2 id="Promox-VE-7-x-国内加速源"><a href="#Promox-VE-7-x-国内加速源" class="headerlink" title="Promox VE 7.x 国内加速源"></a>Promox VE 7.x 国内加速源</h2><p>南开NJU源</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://mirrors.nju.edu.cn/proxmox/debian/proxmox-release-bullseye.gpg -O /etc/apt/trusted.gpg.d/proxmox-release-bullseye.gpg</span><br><span class="line">echo &quot;deb https://mirrors.nju.edu.cn/proxmox/debian/pve bullseye pve-no-subscription&quot; &gt; /etc/apt/sources.list.d/pve-no-subscription.list</span><br></pre></td></tr></table></figure><p>清华大学源</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://mirrors.tuna.tsinghua.edu.cn/proxmox/debian/dists/bullseye/Release.gpg -O /etc/apt/trusted.gpg.d/proxmox-release-bullseye.gpg</span><br><span class="line">echo &quot;deb https://mirrors.tuna.tsinghua.edu.cn/proxmox/debian bullseye pve-no-subscription&quot; &gt; /etc/apt/sources.list.d/pve-no-subscription.list</span><br></pre></td></tr></table></figure><p>中科大源</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://mirrors.ustc.edu.cn/proxmox/debian/proxmox-release-bullseye.gpg -O /etc/apt/trusted.gpg.d/proxmox-release-bullseye.gpg</span><br><span class="line">echo &quot;deb https://mirrors.ustc.edu.cn/proxmox/debian/pve bullseye pve-no-subscription&quot; &gt; /etc/apt/sources.list.d/pve-no-subscription.list</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>更新软件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt update &amp;&amp; apt dist-upgrade</span><br></pre></td></tr></table></figure><h3 id="LXC仓库源更换-1"><a href="#LXC仓库源更换-1" class="headerlink" title="LXC仓库源更换"></a>LXC仓库源更换</h3><p>南开NJU源</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sed -i.bak &quot;s#http://download.proxmox.com/images#https://mirrors.nju.edu.cn/proxmox/images#g&quot; /usr/share/perl5/PVE/APLInfo.pm</span><br><span class="line">wget -O /var/lib/pve-manager/apl-info/mirrors.nju.edu.cn https://mirrors.nju.edu.cn/proxmox/images/aplinfo-pve-7.dat</span><br><span class="line">systemctl restart pvedaemon</span><br></pre></td></tr></table></figure><p>清华大学源</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sed -i.bak &quot;s#http://download.proxmox.com/images#https://mirrors.tuna.tsinghua.edu.cn/proxmox/images#g&quot; /usr/share/perl5/PVE/APLInfo.pm</span><br><span class="line">wget -O /var/lib/pve-manager/apl-info/mirrors.nju.edu.cn https://mirrors.tuna.tsinghua.edu.cn/proxmox/images/aplinfo-pve-7.dat</span><br><span class="line">systemctl restart pvedaemon</span><br></pre></td></tr></table></figure><p>中科大源</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sed -i.bak &quot;s#http://download.proxmox.com/images#https://mirrors.ustc.edu.cn/proxmox/images#g&quot; /usr/share/perl5/PVE/APLInfo.pm</span><br><span class="line">wget -O /var/lib/pve-manager/apl-info/mirrors.ustc.edu.cn https://mirrors.ustc.edu.cn/proxmox/images/aplinfo-pve-7.dat</span><br><span class="line">systemctl restart pvedaemon</span><br></pre></td></tr></table></figure><h3 id="CEPH源更换-1"><a href="#CEPH源更换-1" class="headerlink" title="CEPH源更换"></a>CEPH源更换</h3><p>中科大源</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;deb https://mirrors.ustc.edu.cn/proxmox/debian/ceph-pacific bullseye main&quot; &gt; /etc/apt/sources.list.d/ceph.list</span><br><span class="line">sed -i.bak &quot;s#http://download.proxmox.com/debian#https://mirrors.ustc.edu.cn/proxmox/debian#g&quot; /usr/share/perl5/PVE/CLI/pveceph.pm</span><br></pre></td></tr></table></figure><p>清华大学源</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;deb https://mirrors.tuna.tsinghua.edu.cn/proxmox/debian/ceph-pacific bullseye main&quot; &gt; /etc/apt/sources.list.d/ceph.list</span><br><span class="line">sed -i.bak &quot;s#http://download.proxmox.com/debian#https://mirrors.tuna.tsinghua.edu.cn/proxmox/debian#g&quot; /usr/share/perl5/PVE/CLI/pveceph.pm</span><br></pre></td></tr></table></figure><h2 id="去除6-x-x2F-7-x-订阅提醒"><a href="#去除6-x-x2F-7-x-订阅提醒" class="headerlink" title="去除6.x&#x2F;7.x 订阅提醒"></a>去除6.x&#x2F;7.x 订阅提醒</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sed -i_orig &quot;s/data.status === &#x27;Active&#x27;/true/g&quot; /usr/share/pve-manager/js/pvemanagerlib.js</span><br><span class="line">sed -i_orig &quot;s/if (res === null || res === undefined || \!res || res/if(/g&quot; /usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.js</span><br><span class="line">sed -i_orig &quot;s/.data.status.toLowerCase() !== &#x27;active&#x27;/false/g&quot; /usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.js</span><br><span class="line">sed -Ezi.bak &quot;s/(Ext.Msg.show\(\&#123;\s+title: gettext\(&#x27;No valid sub)/void\(\&#123; \/\/\1/g&quot; /usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.js</span><br><span class="line">systemctl restart pveproxy.service</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 虚拟化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Proxmox </tag>
            
            <tag> 服务器 </tag>
            
            <tag> 镜像加速 </tag>
            
            <tag> LXC容器 </tag>
            
            <tag> Debian </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用vanilla-lazyload实现懒加载</title>
      <link href="/posts/975bb460.html"/>
      <url>/posts/975bb460.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->给主题配置一个全新的lazyload库，来自`verlok`的`vanilla-lazyload`开源js库，支持更多的特性和特效。<blockquote><p>vanilla-lazyload是一个轻量级、灵活的脚本，可将图像、背景、视频、iframe等实现懒加载</p></blockquote><p>Github：<a href="https://github.com/verlok/vanilla-lazyload">vanilla-lazyload</a><br>UNPKG源：<a href="https://unpkg.com/browse/vanilla-lazyload/dist/">vanilla-lazyload</a><br>WIki文档：<a href="https://www.andreaverlicchi.eu/vanilla-lazyload/">vanilla-lazyload</a></p><p>废话不多说直接开搞</p><ul><li>先引入JS库</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script async src=&quot;https://unpkg.com/browse/vanilla-lazyload@17.8.3/dist/lazyload.iife.min.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><ul><li>格式化图片样式</li></ul><p><code>src</code>属性可填写加载中的占位图&#x2F;加载gif路径，<code>data-lazy-src</code>属性设置为原图路径</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=&quot;./images/loading.gif&quot; data-lzay-src=&quot;./images/web.png&quot; alt=&quot;web&quot; class=&quot;lazy&quot;&gt; </span><br></pre></td></tr></table></figure><ul><li>配置运行参数</li></ul><p>以下是我的Javascript参数，更多参数DIY自行找文档</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">var lazyLoadInstance = new LazyLoad(&#123;</span><br><span class="line">// css属性选择器</span><br><span class="line">  elements_selector: &#x27;img&#x27;,</span><br><span class="line">// 滚动多少加载</span><br><span class="line">  threshold: 0,</span><br><span class="line">// 加载的元素URL的属性</span><br><span class="line">  data_src: &#x27;lazy-src&#x27;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li>css模糊渐变特效</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">img[data-lazy-src]:not(.loaded) &#123;filter: blur(10px) brightness(1);&#125;img[data-lazy-src].error &#123;filter: none;&#125;</span><br><span class="line"></span><br><span class="line">img&#123;</span><br><span class="line">-webkit-transition: filter 375ms ease-in .2s,-webkit-transform .6s;</span><br><span class="line">    -moz-transition: filter 375ms ease-in .2s,-moz-transform .6s;</span><br><span class="line">    -o-transition: filter 375ms ease-in .2s,-o-transform .6s;</span><br><span class="line">    -ms-transition: filter 375ms ease-in .2s,-ms-transform .6s;</span><br><span class="line">    transition: filter 375ms ease-in .2s,transform .6s;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br></pre></td></tr></table></figure><p>demo演示：<a href="https://www.jinjun.top/cs/">DEMO</a></p><p>更多的参数可以去看作者的wiki文档，配置起来比<code>jquery.lazyload.js</code>简单，性能也比前者要好不少。</p><p>感谢团团反馈，检查是我写文章的时候把作者的js搞混了，现已经修正。</p>]]></content>
      
      
      <categories>
          
          <category> Typecho </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typecho </tag>
            
            <tag> HTML </tag>
            
            <tag> WEB </tag>
            
            <tag> 懒加载 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iptables防火墙常用使用命令</title>
      <link href="/posts/464ebaf7.html"/>
      <url>/posts/464ebaf7.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->### 安装iptables<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># centos</span><br><span class="line">yum install iptables</span><br><span class="line"># debian/ubunte</span><br><span class="line">apt-get install iptables</span><br></pre></td></tr></table></figure><h3 id="查看已添加的规则"><a href="#查看已添加的规则" class="headerlink" title="查看已添加的规则"></a>查看已添加的规则</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">iptables -L -n -v</span><br><span class="line">iptables -L --line-numbers</span><br><span class="line"># 查看nat规则</span><br><span class="line">iptables -t nat -vnL</span><br><span class="line"></span><br><span class="line"># 注释</span><br><span class="line">v：显示详细信息，包括每条规则的匹配包数量和匹配字节数</span><br><span class="line">x：在 v 的基础上，禁止自动单位换算（K、M）</span><br><span class="line">n：只显示IP地址和端口号，不将ip解析为域名</span><br></pre></td></tr></table></figure><h3 id="清空iptables规则"><a href="#清空iptables规则" class="headerlink" title="清空iptables规则"></a>清空iptables规则</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">iptables -F</span><br><span class="line">iptables -X</span><br><span class="line">iptables -Z</span><br><span class="line"></span><br><span class="line"># 删除nat规则 </span><br><span class="line">iptables -t nat -F</span><br><span class="line"></span><br><span class="line"># 序号显示</span><br><span class="line">iptables -L -n --line-numbers</span><br><span class="line"># 删除相关序号</span><br><span class="line">iptables -D INPUT 3</span><br><span class="line"># 保存规则</span><br><span class="line">iptables save</span><br></pre></td></tr></table></figure><h3 id="开放本机防火墙常用端口"><a href="#开放本机防火墙常用端口" class="headerlink" title="开放本机防火墙常用端口"></a>开放本机防火墙常用端口</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># 允许所有本机向外的访问</span><br><span class="line">iptables?-A?OUTPUT?-j?ACCEPT</span><br><span class="line"></span><br><span class="line"># 允许本机访问</span><br><span class="line">iptables -l INPUT -i lo -j ACCEPT</span><br><span class="line"></span><br><span class="line"># 开放789端口</span><br><span class="line">iptables -I INPUT -p tcp --dport 789 -j ACCEPT</span><br><span class="line"></span><br><span class="line"># 开放80，443端口</span><br><span class="line">iptables -t filter -l INPUT -p tcp -m multiport --dports 80,443 -j REJECT</span><br><span class="line"></span><br><span class="line"># 开放20-22端口</span><br><span class="line">iptables -t filter -I INPUT -p tcp --dport 20:21 -j ACCEPT</span><br></pre></td></tr></table></figure><h3 id="允许对所有的地址开放本机的基于ICMP协议的数据包访问"><a href="#允许对所有的地址开放本机的基于ICMP协议的数据包访问" class="headerlink" title="允许对所有的地址开放本机的基于ICMP协议的数据包访问"></a>允许对所有的地址开放本机的基于ICMP协议的数据包访问</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -t filter -I INPUT -p icmp -j ACCEPT</span><br></pre></td></tr></table></figure><h3 id="其他未被允许的端口则禁止访问"><a href="#其他未被允许的端口则禁止访问" class="headerlink" title="其他未被允许的端口则禁止访问"></a>其他未被允许的端口则禁止访问</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -t filter -A INPUT -j REJECT</span><br></pre></td></tr></table></figure><h3 id="防止SYN洪水攻击"><a href="#防止SYN洪水攻击" class="headerlink" title="防止SYN洪水攻击"></a>防止SYN洪水攻击</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -A INPUT -p tcp --syn -m limit --limit 5/second -j ACCEPT</span><br></pre></td></tr></table></figure><h3 id="允许-x2F-屏蔽PING"><a href="#允许-x2F-屏蔽PING" class="headerlink" title="允许&#x2F;屏蔽PING"></a>允许&#x2F;屏蔽PING</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 允许ping</span><br><span class="line">iptables -A  INPUT -p icmp --icmp-type echo-request -j ACCEPT</span><br><span class="line">iptables -A OUTPUT -p icmp --icmp-type echo-reply -j ACCEPT</span><br><span class="line"></span><br><span class="line"># 禁止ping</span><br><span class="line">iptables -A  INPUT -p icmp --icmp-type  8 -s 0/0 -j DROP</span><br></pre></td></tr></table></figure><h3 id="屏蔽IP或IP段"><a href="#屏蔽IP或IP段" class="headerlink" title="屏蔽IP或IP段"></a>屏蔽IP或IP段</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 屏蔽IP</span><br><span class="line">iptables -I INPUT -s 123.45.6.7 -j DROP</span><br><span class="line"></span><br><span class="line"># 屏蔽IP段</span><br><span class="line">iptables -l INPUT -s 123.0.0.0/8 -j DROP</span><br></pre></td></tr></table></figure><h3 id="禁止其他未允许的规则访问"><a href="#禁止其他未允许的规则访问" class="headerlink" title="禁止其他未允许的规则访问"></a>禁止其他未允许的规则访问</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">iptables -A INPUT -j REJECT</span><br><span class="line">iptables -A FORWARD -j REJECT</span><br></pre></td></tr></table></figure><h3 id="只允许指定ip地址访问指定端口"><a href="#只允许指定ip地址访问指定端口" class="headerlink" title="只允许指定ip地址访问指定端口"></a>只允许指定ip地址访问指定端口</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">iptables -A  INPUT -s xxx.xxx.xxx.xxx -p tcp --dport  22 -j ACCEPT</span><br><span class="line">iptables -A OUTPUT -d xxx.xxx.xxx.xxx -p tcp --sport  22 -j ACCEPT</span><br></pre></td></tr></table></figure><p>上面这两条，请注意 <code>--dport</code> 为目标端口，当数据从外部进入服务器为目标端口；反之，数据从服务器出去则为数据源端口，使用 <code>--sport</code> 同理，<code>-s</code> 是指定源地址，<code>-d</code> 是指定目标地址。</p><h3 id="转发NAT规则"><a href="#转发NAT规则" class="headerlink" title="转发NAT规则"></a>转发NAT规则</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 允许数据转发</span><br><span class="line">iptables -A FORWARD -j ACCEPT</span><br><span class="line"></span><br><span class="line"># 添加IP TCP转发</span><br><span class="line">iptables -t nat -A PREROUTING -p tcp -m tcp --dport 1122 -j DNAT --to-destination 10.10.10.11:22</span><br><span class="line"></span><br><span class="line"># 添加IP UDP转发</span><br><span class="line">iptables -t nat -A PREROUTING -p udp -m tcp --dport 1122 -j DNAT --to-destination 10.10.10.11:22</span><br></pre></td></tr></table></figure><h4 id="删除NAT规则"><a href="#删除NAT规则" class="headerlink" title="删除NAT规则"></a>删除NAT规则</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 列出nat规则</span><br><span class="line">iptables -t nat -vnL PREROUTING --line-number</span><br><span class="line"></span><br><span class="line"># 删除相对应序号2的规则</span><br><span class="line">iptables -t nat -D PREOUTING 2</span><br></pre></td></tr></table></figure><h3 id="iptables持久化"><a href="#iptables持久化" class="headerlink" title="iptables持久化"></a>iptables持久化</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 保存规则</span><br><span class="line">iptables save</span><br><span class="line"></span><br><span class="line"># 重启服务</span><br><span class="line">iptables restart</span><br></pre></td></tr></table></figure><p>安装 <code>iptables-persistent</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">apt install iptables-persistent</span><br><span class="line"></span><br><span class="line"># 规则生效</span><br><span class="line">netfilter-persistent save</span><br><span class="line">netfilter-persistent reload</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 服务器 </tag>
            
            <tag> 虚拟机 </tag>
            
            <tag> iptables </tag>
            
            <tag> IPv6 </tag>
            
            <tag> IPv4 </tag>
            
            <tag> 防火墙 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS 图片显示模糊解决方法</title>
      <link href="/posts/ee182cef.html"/>
      <url>/posts/ee182cef.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->![css][1]<p>旁边的brand的图片明显糊掉，但是设置 <code>height: 100%;</code> ，一样会显示模糊不清。经过一番咨询好友后，得到以下答案并解决了问题。</p><h3 id="使用-image-rendering-优化"><a href="#使用-image-rendering-优化" class="headerlink" title="使用 image-rendering 优化"></a>使用 image-rendering 优化</h3><blockquote><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS">CSS</a>?属性?<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/image-rendering">image-rendering</a>?用于设置图像缩放算法。它适用于元素本身，适用于元素其他属性中的图像，也应用于子元素。</p></blockquote><p><img src="https://img.jinjun.top/images/2022/04/25977ae2f43e0.png" alt="兼容性"></p><p>使用兼容性没有问题，不会还有人使用IE吧！！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.brand img &#123;</span><br><span class="line">  image-rendering: -webkit-optimize-contrast;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用这个方法就可以解决css的图片缩放带来的图片模糊问题。</p>]]></content>
      
      
      <categories>
          
          <category> 建站知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>华为云 Debian 设置双网卡双IP配置</title>
      <link href="/posts/23755843.html"/>
      <url>/posts/23755843.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->最近给华为云升级了一下带宽300Mbps，检查发现只有主网卡的IP可以连接，扩展的网卡无法ping。在服务器中配置双网卡双IP单网关，双网卡配置都可以对外提供上网服务。在华为云文档和腾讯云文档找到了相关内容。<p><img src="https://img.jinjun.top/images/2022/03/381693531566e.png" alt="华为云测速"></p><h2 id="配置信息"><a href="#配置信息" class="headerlink" title="配置信息"></a>配置信息</h2><ul><li>检查网卡绑定信息</li></ul><p>使用 <code>ifconfig</code> 命令查看</p><p><img src="https://img.jinjun.top/images/2022/03/70b2212d66a09.png" alt="IP"></p><p>这里eth0为主网卡，eth1为扩展网卡。如果没有你的网卡信息这就需要自己去添加。这里要记下IP和网卡名称，下面会用到。如果获取到IP可以不进行下面这一步。</p><ul><li>如果没有你的网卡信息需要添加一个</li></ul><p>编辑系统网络文件 <code>interfaces</code> 文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt install vim</span><br><span class="line">vim /etc/network/interfaces</span><br></pre></td></tr></table></figure><p><img src="https://img.jinjun.top/images/2022/03/1fb1909f0427f.png" alt="Network"></p><p>这里是默认提供DHCP来获取，如果是自定义需重新编辑文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">auto eth0  # 此处填写步骤1中查看到的需配置的弹性网卡名称</span><br><span class="line">iface eth0 inet static  # 此处填写步骤1中查看到的需配置的弹性网卡名称</span><br><span class="line">address 10.0.0.30 # 此处填写弹性网卡上的 IP 地址</span><br><span class="line">netmask 255.255.255.0  #此处填写子网掩码</span><br></pre></td></tr></table></figure><h3 id="创建策略路由"><a href="#创建策略路由" class="headerlink" title="创建策略路由"></a>创建策略路由</h3><ul><li>创建多张路由表，根据自己需求添加</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;10 t1&quot; &gt;&gt; /etc/iproute2/rt_tables   #10为自定义的路由ID，t1为自定义的路由表名称</span><br><span class="line">echo &quot;20 t2&quot; &gt;&gt; /etc/iproute2/rt_tables    #20为自定义的路由ID，t2为自定义的路由表名称</span><br></pre></td></tr></table></figure><ul><li>创建多个默认路由，根据自己需求添加</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># 主网卡</span><br><span class="line">ip route add default via 10.0.0.1 dev eth0 table 10</span><br><span class="line">ip route add 10.0.0.0/24 dev eth0 table 10</span><br><span class="line">ip rule add from 10.0.0.98 table 10</span><br><span class="line"></span><br><span class="line"># 扩展网卡</span><br><span class="line">ip route add default via 10.0.0.1 dev eth1 table 20</span><br><span class="line">ip route add 10.0.0.0/24 dev eth1 table 20</span><br><span class="line">ip rule add from 10.0.0.76 table 20</span><br><span class="line"></span><br><span class="line">## 命令参考信息</span><br><span class="line">ip route add default via?子网网关?dev?网卡名称?table?路由表名称</span><br><span class="line">ip route add?子网网段?dev?网卡名称?table?路由表名称</span><br><span class="line">ip rule add from?网卡地址?table?路由表名称</span><br></pre></td></tr></table></figure><ul><li>验证策略路由</li></ul><p><img src="https://img.jinjun.top/images/2022/03/779c1623abbcb.png" alt="策略路由"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ip rule</span><br><span class="line">ip route show table 10</span><br><span class="line">ip route show table 20</span><br><span class="line"></span><br><span class="line">## 命令参考信息</span><br><span class="line">ip rule</span><br><span class="line">ip route show table?主网卡路由表名称</span><br><span class="line">ip route show table?扩展网卡路由表名称</span><br></pre></td></tr></table></figure><ul><li>验证内网 公网 联通</li></ul><p><img src="https://img.jinjun.top/images/2022/03/423c54db7f813.png" alt="Ping"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ping -I 10.0.0.98 114.114.114.114</span><br><span class="line"></span><br><span class="line">## 命令参考信息</span><br><span class="line">ping -I?源端云服务器网卡地址 目的端云服务器地址</span><br></pre></td></tr></table></figure><h2 id="配置永久路由"><a href="#配置永久路由" class="headerlink" title="配置永久路由"></a>配置永久路由</h2><p>临时路由配置完后立即生效，当服务器重启后临时路由会丢失，执行完配置完临时路由后，应继续执行配置永久路由，避免服务器重启后网络中断。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt install vim</span><br><span class="line">vim /etc/rc.local</span><br></pre></td></tr></table></figure><p>添加以下内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># wait for nics up</span><br><span class="line">sleep 5</span><br><span class="line"></span><br><span class="line"># Add v4 routes for eth0</span><br><span class="line">ip route flush table 10</span><br><span class="line">ip route add default via 10.0.0.1 dev eth0 table 10</span><br><span class="line">ip route add 10.0.0.0/24 dev eth0 table 10</span><br><span class="line">ip rule add from 10.0.0.98 table 10</span><br><span class="line"></span><br><span class="line"># Add v4 routes for eth1</span><br><span class="line">ip route flush table 20</span><br><span class="line">ip route add default via 10.0.0.76 dev eth1 table 20</span><br><span class="line">ip route add 10.0.1.0/24 dev eth1 table 20</span><br><span class="line">ip rule add from 10.0.1.183 table 20</span><br><span class="line"></span><br><span class="line"># Add v4 routes for cloud-init</span><br><span class="line">ip rule add to 169.254.169.254 table main</span><br></pre></td></tr></table></figure><p>其中，参数说明如下：</p><ul><li>wait for nics up：文件启动时间。</li><li>Add v4 routes for eth0：主网卡的策略路由，和配置策略保持一致。</li><li>Add v4 routes for eth1：扩展网卡的策略路由，和配置策略保持一致。</li><li>Add v4 routes for cloud-init：配置cloud-init地址。</li></ul><ol><li><p>按ESC退出，并输入<code>:wq!</code>保存配置。</p></li><li><p>执行以下命令，为<code>/etc/rc.local</code>文件添加执行权限。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x /etc/rc.local</span><br></pre></td></tr></table></figure></li><li><p>执行以下命令，重启云服务器。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure></li></ol><p>文章参考：</p><ol><li><a href="https://support.huaweicloud.com/bestpractice-vpc/bestpractice_0020.html#bestpractice_0020__li111457351491">为多网卡Linux云服务器配置策略路由 (IPv4&#x2F;IPv6)</a></li><li><a href="https://cloud.tencent.com/document/product/576/59353">Linux 云服务器配置弹性网卡</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 资源分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 华为云 </tag>
            
            <tag> 服务器 </tag>
            
            <tag> 虚拟机 </tag>
            
            <tag> 运维教程 </tag>
            
            <tag> VPS </tag>
            
            <tag> SSH </tag>
            
            <tag> 腾讯云 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cloudflare Workers 反代 Gravatar 头像</title>
      <link href="/posts/581800be.html"/>
      <url>/posts/581800be.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->之前写过使用腾讯云cdn进行头像加速，今天刚刚想打开发现已经链接超时了。进行Ping发现Gravatar的域名全部被墙了，在国内无法使用该服务。<p>之前一直使用这七牛和loli的镜像源，本着人有我也要有的原则，我决定自建一个gravatar的镜像加速源，这里感谢十年之约的网友，告诉我可以使用Cloudflare Works来反代，再经过国内CDN进行加速。</p><h3 id="Cloudflare-Workrs的免费套餐"><a href="#Cloudflare-Workrs的免费套餐" class="headerlink" title="Cloudflare Workrs的免费套餐"></a>Cloudflare Workrs的免费套餐</h3><ul><li>每个请求最多占用 10 毫秒 CPU 时间</li><li>第一个请求后的延迟最低</li><li>每天最多 100,000 个请求 (UTC+0)</li></ul><p>每天10W的请求，对于自用的话也足够了。还有国内的CDN进行分流，估计也用不了多少。又薅cf的羊毛。</p><h2 id="workers创建和设置"><a href="#workers创建和设置" class="headerlink" title="workers创建和设置"></a>workers创建和设置</h2><p>登录：<a href="https://dash.cloudflare.com/login">https://dash.cloudflare.com/login</a></p><p><img src="https://img.jinjun.top/images/2022/02/4b9f11abae609.png" alt="Cloudflare"></p><p>在这里创建好workrs的服务后，进入刚刚创建好的服务，点<code>快速编辑</code></p><p><img src="https://img.jinjun.top/images/2022/02/156fdb16d9fd2.png" alt="workrs"></p><p>复制以下内容到workrs编辑器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line">// 替换成你想镜像的站点</span><br><span class="line">const upstream = &#x27;gravatar.com&#x27;</span><br><span class="line"> </span><br><span class="line">// 如果那个站点有专门的移动适配站点，否则保持和上面一致</span><br><span class="line">const upstream_mobile = &#x27;gravatar.com&#x27;</span><br><span class="line"> </span><br><span class="line">// 你希望禁止哪些国家访问</span><br><span class="line">const blocked_region = []</span><br><span class="line"> </span><br><span class="line">// 禁止自访问</span><br><span class="line">const blocked_ip_address = [&#x27;0.0.0.0&#x27;, &#x27;127.0.0.1&#x27;]</span><br><span class="line"> </span><br><span class="line">// 替换成你想镜像的站点</span><br><span class="line">const replace_dict = &#123;</span><br><span class="line">    &#x27;$upstream&#x27;: &#x27;$custom_domain&#x27;,</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">//以下内容都不用动</span><br><span class="line">addEventListener(&#x27;fetch&#x27;, event =&gt; &#123;</span><br><span class="line">    event.respondWith(fetchAndApply(event.request));</span><br><span class="line">&#125;)</span><br><span class="line"> </span><br><span class="line">async function fetchAndApply(request) &#123;</span><br><span class="line"> </span><br><span class="line">    const region = request.headers.get(&#x27;cf-ipcountry&#x27;).toUpperCase();</span><br><span class="line">    const ip_address = request.headers.get(&#x27;cf-connecting-ip&#x27;);</span><br><span class="line">    const user_agent = request.headers.get(&#x27;user-agent&#x27;);</span><br><span class="line"> </span><br><span class="line">    let response = null;</span><br><span class="line">    let url = new URL(request.url);</span><br><span class="line">    let url_host = url.host;</span><br><span class="line"> </span><br><span class="line">    if (url.protocol == &#x27;http:&#x27;) &#123;</span><br><span class="line">        url.protocol = &#x27;https:&#x27;</span><br><span class="line">        response = Response.redirect(url.href);</span><br><span class="line">        return response;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    if (await device_status(user_agent)) &#123;</span><br><span class="line">        upstream_domain = upstream</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        upstream_domain = upstream_mobile</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    url.host = upstream_domain;</span><br><span class="line"> </span><br><span class="line">    if (blocked_region.includes(region)) &#123;</span><br><span class="line">        response = new Response(&#x27;Access denied: WorkersProxy is not available in your region yet.&#x27;, &#123;</span><br><span class="line">            status: 403</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125; else if(blocked_ip_address.includes(ip_address))&#123;</span><br><span class="line">        response = new Response(&#x27;Access denied: Your IP address is blocked by WorkersProxy.&#x27;, &#123;</span><br><span class="line">            status: 403</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125; else&#123;</span><br><span class="line">        let method = request.method;</span><br><span class="line">        let request_headers = request.headers;</span><br><span class="line">        let new_request_headers = new Headers(request_headers);</span><br><span class="line"> </span><br><span class="line">        new_request_headers.set(&#x27;Host&#x27;, upstream_domain);</span><br><span class="line">        new_request_headers.set(&#x27;Referer&#x27;, url.href);</span><br><span class="line"> </span><br><span class="line">        let original_response = await fetch(url.href, &#123;</span><br><span class="line">            method: method,</span><br><span class="line">            headers: new_request_headers</span><br><span class="line">        &#125;)</span><br><span class="line"> </span><br><span class="line">        let original_response_clone = original_response.clone();</span><br><span class="line">        let original_text = null;</span><br><span class="line">        let response_headers = original_response.headers;</span><br><span class="line">        let new_response_headers = new Headers(response_headers);</span><br><span class="line">        let status = original_response.status;</span><br><span class="line"> </span><br><span class="line">        new_response_headers.set(&#x27;access-control-allow-origin&#x27;, &#x27;*&#x27;);</span><br><span class="line">        new_response_headers.set(&#x27;access-control-allow-credentials&#x27;, true);</span><br><span class="line">        new_response_headers.delete(&#x27;content-security-policy&#x27;);</span><br><span class="line">        new_response_headers.delete(&#x27;content-security-policy-report-only&#x27;);</span><br><span class="line">        new_response_headers.delete(&#x27;clear-site-data&#x27;);</span><br><span class="line"> </span><br><span class="line">        const content_type = new_response_headers.get(&#x27;content-type&#x27;);</span><br><span class="line">        if (content_type.includes(&#x27;text/html&#x27;) &amp;&amp; content_type.includes(&#x27;UTF-8&#x27;)) &#123;</span><br><span class="line">            original_text = await replace_response_text(original_response_clone, upstream_domain, url_host);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            original_text = original_response_clone.body</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        response = new Response(original_text, &#123;</span><br><span class="line">            status,</span><br><span class="line">            headers: new_response_headers</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    return response;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">async function replace_response_text(response, upstream_domain, host_name) &#123;</span><br><span class="line">    let text = await response.text()</span><br><span class="line"> </span><br><span class="line">    var i, j;</span><br><span class="line">    for (i in replace_dict) &#123;</span><br><span class="line">        j = replace_dict[i]</span><br><span class="line">        if (i == &#x27;$upstream&#x27;) &#123;</span><br><span class="line">            i = upstream_domain</span><br><span class="line">        &#125; else if (i == &#x27;$custom_domain&#x27;) &#123;</span><br><span class="line">            i = host_name</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        if (j == &#x27;$upstream&#x27;) &#123;</span><br><span class="line">            j = upstream_domain</span><br><span class="line">        &#125; else if (j == &#x27;$custom_domain&#x27;) &#123;</span><br><span class="line">            j = host_name</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        let re = new RegExp(i, &#x27;g&#x27;)</span><br><span class="line">        text = text.replace(re, j);</span><br><span class="line">    &#125;</span><br><span class="line">    return text;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">async function device_status (user_agent_info) &#123;</span><br><span class="line">    var agents = [&quot;Android&quot;, &quot;iPhone&quot;, &quot;SymbianOS&quot;, &quot;Windows Phone&quot;, &quot;iPad&quot;, &quot;iPod&quot;];</span><br><span class="line">    var flag = true;</span><br><span class="line">    for (var v = 0; v &lt; agents.length; v++) &#123; if (user_agent_info.indexOf(agents[v]) &gt; 0) &#123;</span><br><span class="line">            flag = false;</span><br><span class="line">            break;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return flag;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里Cloudflare Workers也提供简约版的F12页面给你进行调试程序，这个功能针不撮，方便我这种菜鸟！！</p><p><img src="https://img.jinjun.top/images/2022/02/fc7da34f4ba75.png" alt="workrs"></p><h2 id="自定义works域名"><a href="#自定义works域名" class="headerlink" title="自定义works域名"></a>自定义works域名</h2><p>我这个页面应该是在19年的时候注册的服务，使用第三方面板进行，那时候还可以进行<code>cname</code>进行接入，现在添加新域名都要NS认证，不然不给你使用。这个就有点小遗憾。</p><p>使用workrs的自定义域名服务，要在第三方面板上进行添加DNS，我之前添加的那个第三方面板跑路，所以这里我使用了挖站否：<a href="https://cdn.wzfou.com/">https://cdn.wzfou.com/</a> 的第三方服务来修改DNS。</p><p>来到 <code>网站</code> - <code>workre</code> - <code> -添加路由</code> - <code>填写你的自定义加速的域名</code> - <code>选择对应的worksrs</code></p><p><img src="https://img.jinjun.top/images/2022/02/aadb8f991d820.png" alt="workrs"></p><p>添加完成就是这个样子的，然后来到<code>规则</code>来进行页面规则设置</p><p>设置Always Online在线，缓存TTL最多设置为一个月。</p><p><img src="https://img.jinjun.top/images/2022/02/0ffe4fb22bc40.png" alt="workrs"></p><p>接着返回 <code>Cloudflare Workrs</code> 页面，选择刚刚创建好的服务，查看刚刚的规则是否成功</p><p><img src="https://img.jinjun.top/images/2022/02/fe81b2b864ac1.png" alt="workrs"></p><p>这样就是大工告成，搞完收工。</p><h4 id="镜像源地址"><a href="#镜像源地址" class="headerlink" title="镜像源地址"></a>镜像源地址</h4><p>自建代理地址：<a href="https://gravatar.jinjun.top/avatar/">https://gravatar.jinjun.top/avatar/</a></p>]]></content>
      
      
      <categories>
          
          <category> 建站知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 反向代理 </tag>
            
            <tag> Gravtar </tag>
            
            <tag> Cloudflare </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP缓存扩展yac安装</title>
      <link href="/posts/8cb4fece.html"/>
      <url>/posts/8cb4fece.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->Yac是鸟哥大神的作品，Yac比apc的效率更快，占用cpu比Memcache/Redis低，综合这些我决定给博客的服务器PHP环境加上yac缓存扩展，禁用Memcache。<p>鸟哥大神博客：<a href="https://www.laruence.com/2013/03/18/2846.html">https://www.laruence.com/2013/03/18/2846.html</a></p><p>GitHub地址：<a href="https://github.com/laruence/yac">https://github.com/laruence/yac</a></p><h2 id="yac安装过程"><a href="#yac安装过程" class="headerlink" title="yac安装过程"></a>yac安装过程</h2><p>由于GitHub在国内日常污染，所以使用php源进行下载。</p><p>PHP源：<a href="https://pecl.php.net/package/yac">https://pecl.php.net/package/yac</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">wget https://pecl.php.net/get/yac-2.3.1.tgz</span><br><span class="line">tar -zxvf yac-2.3.1.tgz</span><br><span class="line">cd yac-2.3.1</span><br><span class="line"># 指定PHP版本安装yac扩展</span><br><span class="line">/vhs/kangle/ext/tpl_php7.3/bin/phpize</span><br><span class="line">./configure --prefix=/usr/local/yac --with-php-config=/vhs/kangle/ext/tpl_php7.3/bin/php-config</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h2 id="配置php-ini"><a href="#配置php-ini" class="headerlink" title="配置php.ini"></a>配置php.ini</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /vhs/kangle/ext/tpl_php7.3/php-templete.ini</span><br></pre></td></tr></table></figure><p>在PHP配置文件，添加以下内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">extension=yac.so</span><br><span class="line">[yac]</span><br><span class="line">yac.enable = 1</span><br><span class="line">yac.keys_memory_size = 4M</span><br><span class="line">yac.values_memory_size = 64M</span><br><span class="line">yac.compress_threshold = -1</span><br><span class="line">yac.enable_cli = 0</span><br></pre></td></tr></table></figure><h2 id="检测生效"><a href="#检测生效" class="headerlink" title="检测生效"></a>检测生效</h2><p>重启PHP： <code>service php-fpm restart</code></p><p>查看PHP扩展：<code>php -m</code></p><p><img src="https://img.jinjun.top/images/2022/02/5626cf07a6f01.png" alt="YAC扩展"></p>]]></content>
      
      
      <categories>
          
          <category> 建站知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Nginx </tag>
            
            <tag> PHP </tag>
            
            <tag> PHP扩展 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Debian 10 升级Debian 11 笔记</title>
      <link href="/posts/dfec497e.html"/>
      <url>/posts/dfec497e.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->目前在腾讯云安装的`Debian 10`的版本，有些软件包需要`Debian 11`版本才能升级最新。我是`Debian 10`升级`Debian 11`，如果从`Debian 9` 或者更旧的版本升级到`Debian 10` 后才能继续升级。<p>Debian 11升级需要root用户或者sudo权限执行，升级过程参考官方的<a href="https://www.debian.org/releases/stable/amd64/release-notes/index.zh-cn.html">发行说明</a></p><h3 id="更新现有的安装包"><a href="#更新现有的安装包" class="headerlink" title="更新现有的安装包"></a>更新现有的安装包</h3><p>升级前确保当前Debian系统和软件包内核补丁更新到最新版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt update -y &amp;&amp; sudo apt upgrade -y</span><br><span class="line">apt dist-upgrade</span><br></pre></td></tr></table></figure><p>删除未使用依赖包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt --purge autoremove</span><br></pre></td></tr></table></figure><h3 id="替换更新源"><a href="#替换更新源" class="headerlink" title="替换更新源"></a>替换更新源</h3><ul><li>使用命令行进行替换</li></ul><p>修改<code>/etc/apt/sources.list</code>文件，将源地址<code>buster</code>替换为<code>bullseye</code>，<code>buster/updates</code>替换为<code>bullseye-security</code>。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 备份sources.list文件</span><br><span class="line">cp /etc/apt/sources.list /etc/apt/sources.list.bak</span><br><span class="line">sed -i &#x27;s/buster/bullseye/g&#x27; /etc/apt/sources.list</span><br></pre></td></tr></table></figure><ul><li>使用vim编辑器编辑<code>/etc/apt/sources.list</code>文件</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 编辑文件</span><br><span class="line">apt install vim &amp;&amp; vim /etc/apt/sources.list</span><br><span class="line"></span><br><span class="line"># 删除旧源地址，添加以下</span><br><span class="line">deb https://repo.huaweicloud.com/debian bullseye main contrib non-free</span><br><span class="line">deb https://repo.huaweicloud.com/debian bullseye-updates main contrib non-free</span><br><span class="line">deb https://repo.huaweicloud.com/debian-security bullseye-security main</span><br><span class="line">deb https://repo.huaweicloud.com/debian bullseye-backports main contrib non-free</span><br></pre></td></tr></table></figure><h3 id="升级到Debian-11"><a href="#升级到Debian-11" class="headerlink" title="升级到Debian 11"></a>升级到Debian 11</h3><p>更新软件包仓库地址，并进行系统升级</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt update &amp;&amp; apt full-upgrade</span><br></pre></td></tr></table></figure><p>提示是否升级，输入<code>Y</code>表示同意升级系统，<code>n</code>表示退出</p><p><img src="https://img.jinjun.top/images/2022/01/bc5e7917f03e2.png" alt="update"></p><p>升级过程大概10分钟，具体根据机器配置来决定，过程根据提示进行配置。</p><p>如果升级提示apt的提示，如下图，输入<code>q</code>退出继续</p><p><img src="https://img.jinjun.top/images/2022/01/5aa53d6d5e08e.png" alt="apt提示"></p><p>系统上有一些在运行的服务需要特定的软件库（libc、libssl、libpam、chrony等）的升级过程会重新启动，由于重新启动会导致系统服务中断，选择<code>Yes</code> 在软件包升级过程中不经询问直接重启服务。</p><p><img src="https://img.jinjun.top/images/2022/01/e33b429fdb331.png" alt="libc64"></p><p>提示是否更新<code>/etc/sysctl.conf</code>?文件版本，默认为?<code>N</code>，根据你自己的需求选择。</p><p><img src="https://img.jinjun.top/images/2022/01/6c502448281d0.png" alt="sysctl.conf"></p><p>提示是否更新chrony时钟同步配置文件，我选择<code>Keep the local version currently installed</code> 保留当前版本，<strong>服务器安装时钟同步提示，没有安装不会提示</strong></p><p><img src="https://img.jinjun.top/images/2022/01/84a2d4b0e7f65.png" alt="chrony"></p><p>提示是否更新OpenSSH配置文件，我选择<code>Keep the local version currently installed</code> 保留当前版本，如果更改了ssh端口或修改了配置文件，建议保留配置文件。</p><p><img src="https://img.jinjun.top/images/2022/01/9d8c8d4093067.png" alt="openssh"></p><p>完成后，使用<code>reboot</code>进行重启系统。</p><h3 id="验证升级"><a href="#验证升级" class="headerlink" title="验证升级"></a>验证升级</h3><p>重新启动后，查看当前系统版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/os-release</span><br></pre></td></tr></table></figure><p><img src="https://img.jinjun.top/images/2022/01/e2fd439e13730.png" alt="Debian11"></p><p>可以看见系统已经升级Debian 11，我们还要检查一下内核版本。</p><p><img src="https://img.jinjun.top/images/2022/01/6b8a25e326a05.png" alt="debian内核"></p><p>可以看见内核版本也更新到5.10版本。这样就算完成Debian 11的升级。</p><h2 id="如果发现查看版本还是10的版本，已经完成11的升级"><a href="#如果发现查看版本还是10的版本，已经完成11的升级" class="headerlink" title="如果发现查看版本还是10的版本，已经完成11的升级"></a>如果发现查看版本还是10的版本，已经完成11的升级</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 查看可升级的软件</span><br><span class="line">apt list --upgradable -a</span><br><span class="line"></span><br><span class="line"># 执行升级Debian 11软件包</span><br><span class="line">apt upgrade base-files</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Debian </tag>
            
            <tag> 运维教程 </tag>
            
            <tag> 内核 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决Dabian下iptable重启后规则丢失</title>
      <link href="/posts/1e7c7079.html"/>
      <url>/posts/1e7c7079.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->最近折腾完成pve的虚拟机环境后，也部署了几个虚拟机，昨天给软路由升级一下硬盘。升级完成后，重新开机后完成硬盘的分区，并把硬盘虚拟给了群晖。今天发现登录不上群晖的IP，经过好几次排查，检查发现iptebles的规则已经全部没有了。没办法只好重新设置一次，防止下次重启后再丢失NAT规则，我尝试使用以下方法。<h2 id="使用iptables保存机制"><a href="#使用iptables保存机制" class="headerlink" title="使用iptables保存机制"></a>使用iptables保存机制</h2><p>在设置好了iptables规则后，下次重启后还是会被清除，所以我们需要把它保存起来，使用 <code>iptables-save</code> 命令来进行备份。</p><ul><li>保存现有iptables规则到 <code>/etc/iptables-rules</code></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables-save &gt; /etc/iptables-rules</span><br></pre></td></tr></table></figure><ul><li>重启后恢复iptables规则</li></ul><p>修改网卡文件，当网卡重启的时候自动执行恢复命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/network/interfaces</span><br></pre></td></tr></table></figure><ul><li>找到网卡eth0的那一节，在节后末尾加上载入恢复命令</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pre-up iptables-restore &lt; /etc/iptables-rules</span><br></pre></td></tr></table></figure><p><img src="https://img.jinjun.top/images/2021/12/769473f84dc8b.png" alt="pve"></p><ul><li>查看备份规则</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/iptables-rules</span><br></pre></td></tr></table></figure><p><img src="https://img.jinjun.top/images/2021/12/5b00119291083.png" alt="iptables-rules"></p><ul><li>清理当前iptables规则，?? 注意要在已经备份完成的时候进行删除</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">iptables -F</span><br><span class="line">iptables -X</span><br><span class="line">iptables -Z</span><br></pre></td></tr></table></figure><p><img src="https://img.jinjun.top/images/2021/12/d8d35b0a11120.png" alt="iptables"></p><ul><li>重启当前主机，看会不会重置规则</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -L -n --line-numbers</span><br></pre></td></tr></table></figure><p><img src="https://img.jinjun.top/images/2021/12/d01e74f0914bc.png" alt="iptables"></p><p>iptables的规则会在重启或者开机的时候，会自动载入规则，新增iptables规则后建议也执行 <code>iptables-save</code> 。</p><h2 id="直接写在网卡配置文件"><a href="#直接写在网卡配置文件" class="headerlink" title="直接写在网卡配置文件"></a>直接写在网卡配置文件</h2><table><thead><tr><th align="center">表达</th><th align="center">含义</th></tr></thead><tbody><tr><td align="center">pre-up</td><td align="center">网卡启用前的动作</td></tr><tr><td align="center">up</td><td align="center">启用时候的动作</td></tr><tr><td align="center">post-up</td><td align="center">启用后的动作</td></tr><tr><td align="center">pre-down</td><td align="center">关闭前的动作</td></tr><tr><td align="center">down</td><td align="center">关闭时动作</td></tr><tr><td align="center">post-down</td><td align="center">关闭后动作</td></tr></tbody></table><ul><li>编辑网卡文件，在末尾写上相关iptables规则</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/network/interfaces</span><br></pre></td></tr></table></figure><ul><li>直接写在网卡的配置，每次重启的时候就自动加载规则</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">post-up echo 1 &gt; /proc/sys/net/ipv4/ip_forward</span><br><span class="line">post-up iptables -t nat -A POSTROUTING -s &#x27;10.10.10.0/24&#x27; -o esn5 -j MASQUERADE</span><br><span class="line">post-down iptables -t nat -D POSTROUTING -s &#x27;10.10.10.0/24&#x27; -o ens5 -j MASQUERADE</span><br><span class="line"></span><br><span class="line"># iptables NAT</span><br><span class="line"></span><br><span class="line">post-up iptables -t nat -A PREROUTING -p tcp -m multiport --dport 113  -j DNAT --to-destination 10.10.10.10:22</span><br><span class="line">post-up iptables -t nat -A PREROUTING -p tcp -m multiport --dport 1000:1099  -j DNAT --to-destination 10.10.10.10</span><br><span class="line"></span><br><span class="line">post-up iptables -t nat -A PREROUTING -p tcp -m multiport --dport 223  -j DNAT --to-destination 10.10.10.11:22</span><br><span class="line">post-up iptables -t nat -A PREROUTING -p tcp -m multiport --dport 1100:1199  -j DNAT --to-destination 10.10.10.11</span><br></pre></td></tr></table></figure><p><img src="https://img.jinjun.top/images/2021/12/a2f0b33ab23fa.png" alt="iptables"></p><p>这个方法有两个弊端</p><ul><li><p>每条转发规则都要配置2行，分别是post-up时添加规则和post-down时删除规则。好像不写 <code>post-down</code> 也没有事情，应该是防止多条规则覆盖。特别是使用了<code>iptables-persistent</code> 这个软件包。</p></li><li><p>修改转发规则后，必须执行 <code>service networking restart</code> 重启网卡才能使修改生效。而重启网卡会导致整机瞬间断网，如果有需要保持长连接的业务，会受到严重影响。</p></li></ul><p>最终我选择第一个方法，第二个方法在测试的时候，修改了网卡文件然后重启了网卡，但是iptables规则并没有生效，要重启母鸡才可以。</p>]]></content>
      
      
      <categories>
          
          <category> 建站知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Proxmox </tag>
            
            <tag> 服务器 </tag>
            
            <tag> Debian </tag>
            
            <tag> 虚拟机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Debian 10安装Proxmox VE 开NAT机器</title>
      <link href="/posts/9427c43f.html"/>
      <url>/posts/9427c43f.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->在路由器安装了Debian来安装PVE，这里来记录一下关键步骤。<h2 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h2><p>在debian10安装完成后，连接ssh，进行前期pve安装环境配置。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 查看当前主机名</span><br><span class="line">hostname</span><br><span class="line"></span><br><span class="line"># 修改主机名，根据实际情况进行修改</span><br><span class="line">hostnamectl set-hostname debian</span><br><span class="line"></span><br><span class="line"># 查看当前IP</span><br><span class="line">hostname --ip-address</span><br><span class="line"></span><br><span class="line"># 修改/etc/hosts，在前两行修改</span><br><span class="line"></span><br><span class="line">127.0.0.1 localhost.localdomain localhost</span><br><span class="line">192.168.100.100 debian.proxmox.com debian</span><br></pre></td></tr></table></figure><p><code>/etc/hosts</code> 127.0.0.1是本地保留地址，不用理会。<br><code>192.168.100.100</code>是我路由器指定给pve的IP，需要修改为自己的公网IP或内网IP。<br>在主机名修改为<code>pve</code> 那域名也必须要设置为<code>pve.proxmox.com</code>，就相当于<code>主机名.proxmox.xom</code>。</p><h3 id="添加安装源"><a href="#添加安装源" class="headerlink" title="添加安装源"></a>添加安装源</h3><ul><li>添加Debian国内加速源</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo sed -i &#x27;s/deb.debian.org/mirrors.ustc.edu.cn/g&#x27; /etc/apt/sources.list</span><br></pre></td></tr></table></figure><ul><li>添加pve安装库</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 官方安装库</span><br><span class="line">echo &quot;deb http://download.proxmox.com/debian/pve buster pve-no-subscription&quot; &gt; /etc/apt/sources.list.d/pve-install-repo.list</span><br><span class="line"></span><br><span class="line"># pve6.x国内加速源</span><br><span class="line">echo &quot;deb http://mirrors.ustc.edu.cn/proxmox/debian/pve buster pve-no-subscription&quot; &gt;/etc/apt/sources.list.d/pve-install-repo.list</span><br><span class="line"># pve7.x国内加速源</span><br><span class="line">echo &quot;deb http://mirrors.ustc.edu.cn/proxmox/debian/pve bullseye pve-no-subscription&quot; &gt;/etc/apt/sources.list.d/pve-install-repo.list</span><br></pre></td></tr></table></figure><ul><li>添加安装密匙</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget http://download.proxmox.com/debian/proxmox-ve-release-6.x.gpg -O /etc/apt/trusted.gpg.d/proxmox-ve-release-6.x.gpg</span><br><span class="line">chmod +r /etc/apt/trusted.gpg.d/proxmox-ve-release-6.x.gpg  # optional, if you have a non-default umask</span><br></pre></td></tr></table></figure><ul><li>更新系统安装PVE软件包</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 更新存储库和系统</span><br><span class="line">apt update &amp;&amp; apt full-upgrade</span><br><span class="line"></span><br><span class="line"># 安装pve软件包</span><br><span class="line">apt install proxmox-ve postfix open-iscsi</span><br></pre></td></tr></table></figure><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20211125194034.png" alt="pve"></p><p>选择<code>NO</code> 然后进行下一部安装。</p><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20211125194150.png" alt="pve"></p><p>选择local only </p><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20211125194214.png" alt="pve"></p><p>确认域名是否正确，就是主机名那个。</p><p>待安装完成后，进行一波重启。在浏览器打了 <strong><code>https://IP:8006</code></strong> ，注意的是要https协议打开才可以，pve账号密码就是服务器的账号密码</p><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20210521000019.png" alt="pve"></p><p>到这里就完成了，Debian安装pve的操作。接下来进行NAT开小鸡</p><h2 id="开NAT机器"><a href="#开NAT机器" class="headerlink" title="开NAT机器"></a>开NAT机器</h2><p>进入Debian主机，进行设置<code>vmbr0</code>网桥进行桥接第一块网卡。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># 使用vim进行编辑</span><br><span class="line">vim /etc/network/interfaces</span><br><span class="line"></span><br><span class="line"># 添加以下内容</span><br><span class="line">auto vmbr0</span><br><span class="line">iface vmbr0 inet static</span><br><span class="line">  address 10.10.10.1/24</span><br><span class="line">  netmask 255.255.255.0</span><br><span class="line">  bridge_ports none</span><br><span class="line">  bridge_stp off</span><br><span class="line">  bridge_fd 0</span><br><span class="line">  </span><br><span class="line">  post-up echo 1 &gt; /proc/sys/net/ipv4/ip_forward</span><br><span class="line">  post-up iptables -t nat -A POSTROUTING -s &#x27;10.10.10.0/24&#x27; -o ens5 -j MASQUERADE</span><br><span class="line">  post-down iptables -t nat -D POSTROUTING -s &#x27;10.10.10.0/24&#x27; -o ens5 -j MASQUERADE</span><br><span class="line">  post-up   iptables -t raw -I PREROUTING -i fwbr+ -j CT --zone 1</span><br><span class="line">  post-down iptables -t raw -D PREROUTING -i fwbr+ -j CT --zone 1</span><br></pre></td></tr></table></figure><p>更多详细的文档：<a href="https://pve.proxmox.com/wiki/Network_Configuration">https://pve.proxmox.com/wiki/Network_Configuration</a></p><p>创建一个CT容器，前面步骤可以按自己需求来设置，重点是设置网络这里。</p><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20211125204134.png" alt="pve"></p><ul><li>使用静态IP配置 10.10.10.0 网段</li><li>10.10.10.11&#x2F;24 做ip地址，也方便自己记住</li><li>网关设置为10.10.10.1</li></ul><h3 id="设置nat"><a href="#设置nat" class="headerlink" title="设置nat"></a>设置nat</h3><p>在母鸡上运行shell，使用iptables做nat转发</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 添加IP转发规则</span><br><span class="line">iptables -t nat -A PREROUTING -p tcp -m tcp --dport 1122 -j DNAT --to-destination 10.10.10.11:22</span><br><span class="line">iptables -t nat -A PREROUTING -p udp -m tcp --dport 1122 -j DNAT --to-destination 10.10.10.11:22</span><br></pre></td></tr></table></figure><p><strong>PS</strong>：把小鸡的IP <code>10.10.10.11:22</code> 的数据转发到 母鸡IP<code>1122</code>上</p><p>使用ssh进行连接，母鸡IP:转发端口进行连接<br><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20211128202119.png" alt="pve"></p>]]></content>
      
      
      <categories>
          
          <category> 虚拟化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Proxmox </tag>
            
            <tag> 服务器 </tag>
            
            <tag> LXC容器 </tag>
            
            <tag> Debian </tag>
            
            <tag> VNC </tag>
            
            <tag> NAT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux安装dig命令工具和使用方法</title>
      <link href="/posts/16e4b7dd.html"/>
      <url>/posts/16e4b7dd.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->dig命令是常用的域名查询工具，可以用于检查域名系统是否正常工作。可以查询DNS的NS、A、cname、mx等相关的信息记录。<h2 id="了解DNS记录类型"><a href="#了解DNS记录类型" class="headerlink" title="了解DNS记录类型"></a>了解DNS记录类型</h2><table><thead><tr><th align="center">类型</th><th align="center">相关说明</th></tr></thead><tbody><tr><td align="center">A</td><td align="center">指定域名对应的IPv4地址</td></tr><tr><td align="center">CNAME</td><td align="center">别名解析，相当于用子域名来代替ip地址</td></tr><tr><td align="center">AAAA</td><td align="center">解析到对应的IPv6的地址</td></tr><tr><td align="center">NS</td><td align="center">域名服务器记录，如果需要把子域名交给其他 DNS 服务器解析，就需要添加 NS 记录</td></tr><tr><td align="center">MX</td><td align="center">邮件路由记录，如果设置邮箱，需要添加该记录才能发信</td></tr><tr><td align="center">TXT</td><td align="center">可以写任何东西，但是TXT记录大多数时候用于申请SSL、SPF记录</td></tr><tr><td align="center">SOA</td><td align="center">起始授权机构记录，用于NS记录标记那一台是主服务器</td></tr></tbody></table><h2 id="安装DIG命令"><a href="#安装DIG命令" class="headerlink" title="安装DIG命令"></a>安装DIG命令</h2><p>很多系统都精简dig命令，会报错误。这个时候需要安装一个</p><ul><li>Debian&#x2F;Ubuntu</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install dnsutils</span><br></pre></td></tr></table></figure><ul><li>Centos&#x2F;RedHat</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install bind-utils</span><br></pre></td></tr></table></figure><h2 id="dig命令说明"><a href="#dig命令说明" class="headerlink" title="dig命令说明"></a>dig命令说明</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dig img.jinjun.top/images</span><br></pre></td></tr></table></figure><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20211116224433.png" alt="dig"></p><p>dig默认输出信息分为五部分</p><ul><li><p>第一部分显示 dig 命令的版本和输入的参数。可以通过 <code>+[no]cmd</code> 来控制显示</p></li><li><p>第二部分显示服务返回的一些技术详情，比较重要的是 status。如果 status 的值为 NOERROR 则说明本次查询成功结束。可以通过 <code>+[no]comments</code> 来控制显示</p></li><li><p>第三部分中的 “QUESTION SECTION” 显示我们要查询的域名。可以通过 <code>+[no]question</code> 来控制显示</p></li><li><p>第四部分的 “ANSWER SECTION” 是查询到的结果。可以通过 <code>+[no]answer</code> 来控制显示</p></li><li><p>第五部分则是本次查询的一些统计信息，比如用了多长时间，查询了哪个 DNS 服务器，在什么时间进行的查询等等。可以通过 <code>+[no]stats</code> 来控制显示</p></li></ul><h3 id="dig常用命令"><a href="#dig常用命令" class="headerlink" title="dig常用命令"></a>dig常用命令</h3><ul><li>查询域名信息，默认显示全部信息</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dig qq.com</span><br></pre></td></tr></table></figure><ul><li>查询CNAME记录</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dig qq.com cname</span><br></pre></td></tr></table></figure><ul><li>查询MX记录</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dig qq.com mx</span><br></pre></td></tr></table></figure><ul><li>查询NS记录</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dig qq.com ns</span><br></pre></td></tr></table></figure><ul><li><p>查询TTL记录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dig qq.com ttl</span><br></pre></td></tr></table></figure></li><li><p>查询AAAA记录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dig qq.com aaaa</span><br></pre></td></tr></table></figure></li><li><p>查询SOA服务器</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dig qq.com soa</span><br></pre></td></tr></table></figure><ul><li>指定dns查询域名记录</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dig @8.8.8.8 qq.com</span><br></pre></td></tr></table></figure><ul><li><p>追踪完整递归解析过程</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dig +trace qq.com</span><br></pre></td></tr></table></figure></li><li><p>查询dns最终部分</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dig qq.com +nocomments +noquestion +noauthority +noadditional +nostats</span><br></pre></td></tr></table></figure><ul><li><p>显示对应返回结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dig qq.com cname +noall +answer</span><br></pre></td></tr></table></figure></li><li><p>简洁显示结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dig +short qq.com</span><br></pre></td></tr></table></figure></li><li><p>反向查询</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dig -x 8.8.8.8 +shrot</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CentOS </tag>
            
            <tag> Linux </tag>
            
            <tag> Ubuntu </tag>
            
            <tag> dig命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Termux玩转PostgreSQL</title>
      <link href="/posts/99f763c1.html"/>
      <url>/posts/99f763c1.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->## 安装PostgreSQL<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkg install postgresql</span><br></pre></td></tr></table></figure><h3 id="初始化运行"><a href="#初始化运行" class="headerlink" title="初始化运行"></a>初始化运行</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 创建目录</span><br><span class="line">mkdir -p $PREFIX/var/lib/postgresql</span><br><span class="line"></span><br><span class="line"># 初始化</span><br><span class="line">initdb $PREFIX/var/lib/postgresql</span><br></pre></td></tr></table></figure><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20211108220901.png" alt="请输入图片描述"></p><h3 id="运行postpresql"><a href="#运行postpresql" class="headerlink" title="运行postpresql"></a>运行postpresql</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">postgres -D $PREFIX/var/lib/postgresql/</span><br></pre></td></tr></table></figure><p>后台运行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 后台运行</span><br><span class="line">nohup postgres -D $PREFIX/var/lib/postgresql/ &amp;</span><br><span class="line"></span><br><span class="line"># 查看后台任务</span><br><span class="line">jobs</span><br><span class="line"></span><br><span class="line"># 关闭后台命令</span><br><span class="line">kill %&lt;id&gt;</span><br></pre></td></tr></table></figure><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20211108225643.png" alt="请输入图片描述"></p><h3 id="进入数据库"><a href="#进入数据库" class="headerlink" title="进入数据库"></a>进入数据库</h3><ul><li><p>查看用户名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">whoami</span><br></pre></td></tr></table></figure></li><li><p>列出数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">psql -l</span><br></pre></td></tr></table></figure></li></ul><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20211108231612.png" alt="请输入图片描述"></p><ul><li><p>进入命令行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">clear</span><br></pre></td></tr></table></figure></li><li><p>连接数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">psql -U u0_a96 -d postgres </span><br></pre></td></tr></table></figure><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20211108232056.png" alt="请输入图片描述"></p></li></ul><h2 id="创建新用户和数据库"><a href="#创建新用户和数据库" class="headerlink" title="创建新用户和数据库"></a>创建新用户和数据库</h2><p>刚刚完成安装后，会生成一个postpresql的数据库和一个与系统用户名的数据库用户，在一台Debian机器安装的 PostgreSQL 对比发现，会生成postgresql的数据库和用postgresql的数据库用户，也会生成postgresql的Linux系统用户，termux是没有的postgresql用户，是共用系统的用户名。</p><ul><li>使用 CREATE 语法来进行创建用户</li></ul><p>进入psql命令行模式，termux比较奇葩，要连默认接数据库才可以进入psql操作，可能我还没有知道更好的方法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">psql -U u0_a96 -d postgres</span><br></pre></td></tr></table></figure><ul><li>进入后，先创建一个数据库用户并指定一个密码</li></ul><p>这里创建一个username的用户</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create user username with password &#x27;*******&#x27;;</span><br></pre></td></tr></table></figure><p>这里注意，密码需要引号包裹，一定要以英文分号结尾不然会报错。</p><ul><li>创建一个数据库</li></ul><p>这里创建一个pgdata的数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create database pgdata owner username;</span><br></pre></td></tr></table></figure><ul><li>将数据库的全部权限赋予某个用户</li></ul><p>这里将pgdata的所以权全部赋予给useename</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grant all privileges on database pgdata to username;</span><br></pre></td></tr></table></figure><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20211114221934.png" alt="创建用户和数据库"></p><ul><li>查看刚刚创建用户和数据库</li></ul><p>同样在控制台输入,查看是否存在数据库</p><p>查看用户</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\du</span><br></pre></td></tr></table></figure><p>查看数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\l</span><br></pre></td></tr></table></figure><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20211114222109.png" alt="用户与数据库"></p><ul><li>测试连接</li></ul><p>以刚刚创建数据为例，使用username连接pgdata数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">psql -U username -d pgdata -h 127.0.0.1</span><br></pre></td></tr></table></figure><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20211114222242.png" alt="测试连接"></p><h2 id="psql常用命令"><a href="#psql常用命令" class="headerlink" title="psql常用命令"></a>psql常用命令</h2><p>\password ： 设置密码<br>\q ： 退出<br>\h ： 查看SQL命令解释，如<code>\h select</code><br>\? ： 查看psql命令列表<br>\l ： 列出所以数据库<br>\c [table_name] ： 连接其他数据库<br>\d ： 列出当前数据库所有表格<br>\d [table_name] ： 列出某一张表格<br>\du ： 列出所有用户<br>\e ： 打开文本编辑器<br>\connifo ： 列出当前数据库和连接信息<br>select now(); ： 查看时间<br>select version(); ： 查看版本</p><h2 id="数据库操作"><a href="#数据库操作" class="headerlink" title="数据库操作"></a>数据库操作</h2><p>数据库基本操作，就是使用一般的SQL语言。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"># 创建新表</span><br><span class="line">CREATE TABLE user_tbl(name VARCHAR(20), signup_date DATE);</span><br><span class="line"></span><br><span class="line"># 插入数据</span><br><span class="line">INSERT INTO user_tbl(name, signup_date) VALUES(&#x27;张三&#x27;, &#x27;2013-12-22&#x27;);</span><br><span class="line"></span><br><span class="line"># 选择记录</span><br><span class="line">SELECT * FROM user_tbl;</span><br><span class="line"></span><br><span class="line"># 更新数据</span><br><span class="line">UPDATE user_tbl set name = &#x27;李四&#x27; WHERE name = &#x27;张三&#x27;;</span><br><span class="line"></span><br><span class="line"># 删除记录</span><br><span class="line">DELETE FROM user_tbl WHERE name = &#x27;李四&#x27; ;</span><br><span class="line"></span><br><span class="line"># 添加栏位</span><br><span class="line">ALTER TABLE user_tbl ADD email VARCHAR(40);</span><br><span class="line"></span><br><span class="line"># 更新结构</span><br><span class="line">ALTER TABLE user_tbl ALTER COLUMN signup_date SET NOT NULL;</span><br><span class="line"></span><br><span class="line"># 更名栏位</span><br><span class="line">ALTER TABLE user_tbl RENAME COLUMN signup_date TO signup;</span><br><span class="line"></span><br><span class="line"># 删除栏位</span><br><span class="line">ALTER TABLE user_tbl DROP COLUMN email;</span><br><span class="line"></span><br><span class="line"># 表格更名</span><br><span class="line">ALTER TABLE user_tbl RENAME TO backup_tbl;</span><br><span class="line"></span><br><span class="line"># 删除表格</span><br><span class="line">DROP TABLE IF EXISTS backup_tbl;</span><br></pre></td></tr></table></figure><p>部分内容摘自：<a href="https://www.ruanyifeng.com/blog/2013/12/getting_started_with_postgresql.html">阮一峰的网络日志-PostgreSQL新手入门</a></p>]]></content>
      
      
      <categories>
          
          <category> 虚拟化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> mysql </tag>
            
            <tag> Termux </tag>
            
            <tag> PostgreSQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于Termux终端搭建内网web影音方案</title>
      <link href="/posts/3171bb12.html"/>
      <url>/posts/3171bb12.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->之前折腾过Transmission搭建PT下载平台，下载了好多电影，只能在手机播放不怎么方便，突然脑洞大开，利用PHP的H5ai列目录来映射pt的下载目录，从而达到电脑/电视也能播放视频，想法是有，搁了好几天才动手。最近干什么都是一拖再拖，好烦好烦。<ul><li>安卓手机一台</li><li>termux环境</li></ul><h2 id="搭建Nginx环境"><a href="#搭建Nginx环境" class="headerlink" title="搭建Nginx环境"></a>搭建Nginx环境</h2><p>我这里使用Nginx来搭建web环境，Nginx我用得比较多，用起来会更加顺手一点。</p><p>termux安装也很简单，跟安装大部分软件一样，一条命令就可以安装。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkg install nginx</span><br></pre></td></tr></table></figure><p>安装完成后，查看一下配置信息。</p><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20211105192718.png" alt="Nginx"></p><p>验证nginx配置文件是否正确。</p><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20211105193715.png" alt="Nginx"></p><p>现在测试是没有问题的，这个可以用于修改配置文件后验证文件是否正确，第一条有个报错是设置h5ai的运行命令忘记打结尾来。</p><h3 id="启动Nginx"><a href="#启动Nginx" class="headerlink" title="启动Nginx"></a>启动Nginx</h3><p>一条命令就可以启动nginx</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx</span><br></pre></td></tr></table></figure><p>查看nginx的相关进程PID，可以使用<code>pgrep</code>来进行查看</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pgrep nginx</span><br></pre></td></tr></table></figure><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20211105195609.png" alt="nginx"></p><p>这时候nginx启动，默认端口是8080，可以打开<code>127.0.0.1:8080</code>来进行验证访问。</p><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20211105200054.png" alt="nginx"></p><h4 id="常用nginx命令行"><a href="#常用nginx命令行" class="headerlink" title="常用nginx命令行"></a>常用nginx命令行</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># 启动nginx</span><br><span class="line">nginx</span><br><span class="line"></span><br><span class="line"># 验证配置文件</span><br><span class="line">nginx -t</span><br><span class="line"></span><br><span class="line"># 查看配置信息</span><br><span class="line">nginx -V</span><br><span class="line"></span><br><span class="line"># 重启nginx</span><br><span class="line">nginx -s reload</span><br><span class="line"></span><br><span class="line"># 关闭nginx</span><br><span class="line">nginx -s stop</span><br><span class="line"></span><br><span class="line"># 暴力终结nginx</span><br><span class="line">kill -9 `pgrep nginx`</span><br></pre></td></tr></table></figure><h2 id="安装php-fpm"><a href="#安装php-fpm" class="headerlink" title="安装php-fpm"></a>安装php-fpm</h2><p>为什么要安装php-fpm，nginx只能解析静态web的语言，比如html、htm这些静态文件。对于php这类动态语言来说就无能为力，所以要为PHP的解析器搭建一座nginx与php之间桥梁，让它来进行识别PHP语言并交由php解析器进行处理，这个桥梁枢纽就是<code>php-fpm</code></p><p>安装php-fpm会将PHP一同默认安装，termux默认安装的都是最新版本。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkg install php-fpm</span><br></pre></td></tr></table></figure><p>顺手查看一下php-fpm版本信息</p><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20211105202413.png" alt="php-fpm"></p><h3 id="配置-php-fpm"><a href="#配置-php-fpm" class="headerlink" title="配置 php-fpm"></a>配置 php-fpm</h3><p>编辑php-fpm的配置文件，具体路径在<code>/data/data/com.termux/files/usr/etc/php-fpm.d/www.conf </code>不建议使用手机的文本编辑器进行编辑文件，有时候会引发权限问题，尽可能在命令行窗口进行编辑。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim $PREFIX/etc/php-fpm.d/www.conf</span><br></pre></td></tr></table></figure><p>使用vim搜索命令，进行定位搜索 <code>listen =</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">listen = /data/data/com.termux/files/usr/var/run/php-fpm.sock</span><br><span class="line"></span><br><span class="line">修改成以下</span><br><span class="line"></span><br><span class="line">listen = 127.0.0.1:9000</span><br></pre></td></tr></table></figure><p>这里使用php-cgi进行监听，也可以使用socket的方式进行连接。</p><h3 id="配置-Nginx"><a href="#配置-Nginx" class="headerlink" title="配置 Nginx"></a>配置 Nginx</h3><p>编辑nginx配置文件，具体路径在<code> /data/data/com.termux/files/usr/etc/nginx/nginx.conf</code>使用vim修改，同样不建议使用手机编辑器进行修改。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim $PREFIX/etc/nginx/nginx.conf</span><br></pre></td></tr></table></figure><ul><li>添加 <code>index.php</code> 到默认首页规则里面</li></ul><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20211105204153.png" alt="nginx"></p><ul><li>删除 <code>location ~ \.php$</code> 注释，并修改默认nginx网站默认根目录</li></ul><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20211105204734.png" alt="nginx"></p><p>在termux里面nginx默认网站目录在<code>/data/data/com.termux/files/usr/share/nginx/html</code>所以要把<code>/scripts</code>修改成默认的网站目录，并不需要在本地再创建一个文件夹。</p><h2 id="测试PHP解析"><a href="#测试PHP解析" class="headerlink" title="测试PHP解析"></a>测试PHP解析</h2><p>在网站默认目录下，创建一个PHP的检测代码。新建一个 <code>info.php</code> 内容为 <code>&lt;?php phpinfo(); ?&gt;</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &#x27;&lt;?php phpinfo(); ?&gt;&#x27; &gt; $PREFIX/share/nginx/html/info.php</span><br></pre></td></tr></table></figure><h3 id="启动相关服务"><a href="#启动相关服务" class="headerlink" title="启动相关服务"></a>启动相关服务</h3><p>先启动<code>php-fpm</code>再启动<code>nginx</code>，如果启动了nginx则给重启一下就可以<code>nginx -s reload</code><br>。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">php-fpm</span><br><span class="line">nginx</span><br></pre></td></tr></table></figure><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20211105210443.png" alt="php"></p><p>这样就完成了，nginx和php的安装完成。</p><h2 id="安装-H5ai"><a href="#安装-H5ai" class="headerlink" title="安装 H5ai"></a>安装 H5ai</h2><p>这里使用的是loc大佬的魔改版本，带HTML5播放器DPlayer和hls切片播放。</p><p>Github地址：<a href="https://github.com/Pearlulu/h5ai_dplayer">下载地址</a></p><p>下载完成后直接解压到默认根目录下就可以了。</p><p>还要修改一个地方就是前面提到的php的index默认主页。</p><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20211105211446.png" alt="nginx"></p><p>这里修改成以下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">index  index.html  index.php  /_h5ai/public/index.php;</span><br></pre></td></tr></table></figure><p>挂载PT的下载目录到网站目录下</p><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20211105213010.png" alt="ln -s"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 进入网站目录</span><br><span class="line">cd /data/data/com.termux/files/usr/share/nginx/html</span><br><span class="line"></span><br><span class="line"># 创建软连接</span><br><span class="line">ln -s /storage/emulated/0/Download Download</span><br></pre></td></tr></table></figure><p>创建软连接成功，可以在H5ai正常显示出来。</p><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20211105213344.png" alt="h5ai"></p><p>测试网络播放视频</p><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20211105220744.png" alt="H5ai"></p>]]></content>
      
      
      <categories>
          
          <category> 虚拟化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Nginx </tag>
            
            <tag> WEB </tag>
            
            <tag> Termux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决Ubuntu执行add-apt-repository提示command not found</title>
      <link href="/posts/b6032234.html"/>
      <url>/posts/b6032234.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->在ubuntu安装qbittorrent的时候，添加ppa源执行时候发生报错。这个问题在ubuntu有时候也是时不时出现一下。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a96@localhost ~ add-apt-repository ppa:qbittorrent-team/qbittorrent-stable? ? </span><br><span class="line">add-apt-repository: command not found</span><br></pre></td></tr></table></figure><p>在搜索引擎一番搜索，原来是<code>add-apt-repository</code>程序没有安装。执行一下命令就可以解决。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install software-properties-common python-software-properties</span><br></pre></td></tr></table></figure><p>安装完成后，再执行添加源命令，再更新一下软件列表在安装软件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 更新软件列表</span><br><span class="line">apt-get update</span><br><span class="line"></span><br><span class="line"># 安装qbittorrent</span><br><span class="line">apt-get install qbittorrent-nox</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Transmission </tag>
            
            <tag> Ubuntu </tag>
            
            <tag> PT </tag>
            
            <tag> qBittorrent </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Termux 入门到入坑教程</title>
      <link href="/posts/223783a7.html"/>
      <url>/posts/223783a7.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->## Termux 简介<p>Termux是一个安卓手机模拟Linux环境，提供标准的命令行界面，让手机也能变身轻量化的DIY极客工具。软件开源且不需要root权限，可以安装其他Linux发行版，支持pkg、apt软件包管理，可以很方便找到安装软件包，也可以跑Nginx、PHP、MySQL、Python、NodeJS等。</p><h3 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h3><ul><li><a href="https://f-droid.org/packages/com.termux/">F-Deoid 下载</a></li><li><a href="https://play.google.com/store/apps/details?id=com.termux">Google Play 下载</a></li></ul><p>推荐去F-Deoid下载，国内可能下载有点慢可以需要特殊工具进行加速，下载F-Deoid - Google play - 酷安</p><h3 id="WiKi-文档"><a href="#WiKi-文档" class="headerlink" title="WiKi 文档"></a>WiKi 文档</h3><ul><li><a href="https://termux.com/">Termux 官网</a></li><li><a href="https://termux.com/">Github 项目</a></li><li><a href="https://wiki.termux.com/wiki/">Termux 文档</a></li></ul><h2 id="长按屏幕"><a href="#长按屏幕" class="headerlink" title="长按屏幕"></a>长按屏幕</h2><p>长按屏幕会调出显示菜单项（包括复制、粘贴、更多），方便我们进行复制或者粘贴：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">长按屏幕</span><br><span class="line">├── COPY:    # 复制</span><br><span class="line">├── PASTE:   # 粘贴</span><br><span class="line">├── More:    # 更多</span><br><span class="line">   ├── Select URL:             # 提取屏幕所有网址</span><br><span class="line">   └── Share transcipt:        # 分享命令脚本</span><br><span class="line">   └── Reset:                  # 重置</span><br><span class="line">   └── Kill process:           # 杀掉当前会话进程</span><br><span class="line">   └── Style:                  # 风格配色 需要自行安装</span><br><span class="line">   └── Keep screen on:         # 保持屏幕常亮</span><br><span class="line">   └── Help:                   # 帮助文档</span><br></pre></td></tr></table></figure><h2 id="Linux快捷键"><a href="#Linux快捷键" class="headerlink" title="Linux快捷键"></a>Linux快捷键</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Ctrl + A -&gt; 将光标移动到行首</span><br><span class="line">Ctrl + C -&gt; 中止当前进程</span><br><span class="line">Ctrl + D -&gt; 注销终端会话</span><br><span class="line">Ctrl + E -&gt; 将光标移动到行尾</span><br><span class="line">Ctrl + K -&gt; 从光标删除到行尾</span><br><span class="line">Ctrl + U -&gt; 从光标删除到行首</span><br><span class="line">Ctrl + L -&gt; 清除终端</span><br><span class="line">Ctrl + Z -&gt; 挂起（发送SIGTSTP到）当前进程</span><br><span class="line">Ctrl + alt + C -&gt; 打开新会话（仅适用于 黑客键盘）</span><br></pre></td></tr></table></figure><h2 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">echo $HOME</span><br><span class="line">/data/data/com.termux/files/home</span><br><span class="line"></span><br><span class="line">echo $PREFIX</span><br><span class="line">/data/data/com.termux/files/usr</span><br><span class="line"></span><br><span class="line">echo $TMPPREFIX</span><br><span class="line">/data/data/com.termux/files/usr/tmp/zsh</span><br></pre></td></tr></table></figure><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20211014235645.png" alt="目录结构"></p><h2 id="更换国内源"><a href="#更换国内源" class="headerlink" title="更换国内源"></a>更换国内源</h2><h3 id="官方换源"><a href="#官方换源" class="headerlink" title="官方换源"></a>官方换源</h3><p>termux最新版本中，内置<code>termux-change-repo</code> 可以直接更换镜像源，炒鸡方便。</p><p>在SSH输入，选择需要源，回车就完事。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">termux-change-repo</span><br></pre></td></tr></table></figure><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20211014214548.png" alt="repo"><br><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20211014214631.png" alt="repo"></p><h3 id="命令行替换"><a href="#命令行替换" class="headerlink" title="命令行替换"></a>命令行替换</h3><p>这里也是替换为清华大学的源，可以加快软件包下载速度。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sed -i &#x27;s@^\(deb.*stable main\)$@#\1\ndeb https://mirrors.tuna.tsinghua.edu.cn/termux/termux-packages-24 stable main@&#x27; $PREFIX/etc/apt/sources.list</span><br><span class="line"></span><br><span class="line">sed -i &#x27;s@^\(deb.*games stable\)$@#\1\ndeb https://mirrors.tuna.tsinghua.edu.cn/termux/game-packages-24 games stable@&#x27; $PREFIX/etc/apt/sources.list.d/game.list</span><br><span class="line"></span><br><span class="line">sed -i &#x27;s@^\(deb.*science stable\)$@#\1\ndeb https://mirrors.tuna.tsinghua.edu.cn/termux/science-packages-24 science stable@&#x27; $PREFIX/etc/apt/sources.list.d/science.list</span><br><span class="line"></span><br><span class="line">pkg update</span><br></pre></td></tr></table></figure><p>替换源之后，执行<code>pkg update</code>。</p><h3 id="安装基础工具"><a href="#安装基础工具" class="headerlink" title="安装基础工具"></a>安装基础工具</h3><p>替换源，赶紧给系统补全一下常用的系统工具。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkg install nano proot curl wget git tree -y</span><br></pre></td></tr></table></figure><h2 id="软件包管理器"><a href="#软件包管理器" class="headerlink" title="软件包管理器"></a>软件包管理器</h2><p>Termux 除了支持pkg命令安装软件，也可以通过apt来安装，pkg命令向下兼容apt命令，只是运行前会执行一次apt update，保证安装的是最新版本。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">pkg search &lt;query&gt;              # 搜索包</span><br><span class="line">pkg install &lt;package&gt;           # 安装包</span><br><span class="line">pkg uninstall &lt;package&gt;         # 卸载包</span><br><span class="line">pkg reinstall &lt;package&gt;         # 重新安装包</span><br><span class="line">pkg update                      # 更新源</span><br><span class="line">pkg upgrade                     # 升级软件包</span><br><span class="line">pkg list-all                    # 列出可供安装的所有包</span><br><span class="line">pkg list-installed              # 列出已经安装的包</span><br><span class="line">pkg show &lt;package&gt;              # 显示某个包的详细信息</span><br><span class="line">pkg files &lt;package&gt;             # 显示某个包的相关文件夹路径</span><br></pre></td></tr></table></figure><h3 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h3><p>除了pkg&#x2F;apt命令安装软件，也可以使用<code>dpkg</code> 进行安装 <code>.deb</code>的软件包文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">dpkg -i ./package.de         # 安装 deb 包</span><br><span class="line">dpkg --remove [package name] # 卸载软件包</span><br><span class="line">dpkg -l                      # 查看已安装的包</span><br><span class="line">man dpkg                     # 查看详细文档</span><br></pre></td></tr></table></figure><h2 id="访问本机存储"><a href="#访问本机存储" class="headerlink" title="访问本机存储"></a>访问本机存储</h2><p>手机APP默认只能访问自己的数据，如果想要访问手机存储，需要授权一下。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">termux-setup-storage</span><br></pre></td></tr></table></figure><p>执行该命令后，会在<code>home</code>目录下生成<code>storage</code>目录，并生成若干目录，软连接关联外置内存卡的对应目录</p><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20211014223431.png" alt="storage"></p><p>也可以创建一些常用QQ目录这些软连接到<code>storage</code>目录，方便管理文件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">QQ</span><br><span class="line">ln -s /data/data/com.termux/files/home/storage/shared/tencent/QQfile_recv QQ</span><br><span class="line"></span><br><span class="line">TIM</span><br><span class="line">ln -s /data/data/com.termux/files/home/storage/shared/tencent/TIMfile_recv TIM</span><br><span class="line"></span><br><span class="line">微信</span><br><span class="line">ln -s /data/data/com.termux/files/home/storage/shared/Android/data/com.tencent.mm/MicroMsg/Download WX</span><br></pre></td></tr></table></figure><p>这样可以大大提高操作文件的效率。</p><h2 id="超级管理员身份"><a href="#超级管理员身份" class="headerlink" title="超级管理员身份"></a>超级管理员身份</h2><p>termux其实很多操作都是不需要root权限，另外有一些程序会指定root用户才能安装。</p><p>其实很多没有手机没有获取root，这里可以使用<code>proot</code>来模拟一个root环境，可以模拟termux 中的常规 Linux文件系统，并不是真正意义的root。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 安装proot</span><br><span class="line">pkg install proot -y</span><br><span class="line"></span><br><span class="line"># 切换到root用户</span><br><span class="line">termux-chroot</span><br><span class="line"></span><br><span class="line"># 退出root环境</span><br><span class="line">exit</span><br></pre></td></tr></table></figure><h3 id="手机已经获取root"><a href="#手机已经获取root" class="headerlink" title="手机已经获取root"></a>手机已经获取root</h3><p>安装<code>tsu</code>，这是一个<code>su</code>的 Termux 版本，是一个真正的 root 权限，用来在 Termux上替代<code>su</code>，操作不慎可能对手机有安全风险，因为官方封装了，所以安装也很简单：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 安装tsu</span><br><span class="line">pkg install tsu -y</span><br><span class="line"></span><br><span class="line"># 切换到root</span><br><span class="line">tsu</span><br><span class="line"></span><br><span class="line"># 退出root</span><br><span class="line">exit</span><br></pre></td></tr></table></figure><h2 id="开启SSH"><a href="#开启SSH" class="headerlink" title="开启SSH"></a>开启SSH</h2><p>在Termux开启SSH，就可以脱离手机享受多终端连接带来的便利，也是网络时代必不可少的。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># 安装openssh</span><br><span class="line">pkg Install openssh</span><br><span class="line"></span><br><span class="line"># 启动SSH</span><br><span class="line">sshd</span><br><span class="line"></span><br><span class="line"># 关闭SSH</span><br><span class="line">pkill sshd</span><br><span class="line"></span><br><span class="line"># 查看登录用户名</span><br><span class="line">whoami</span><br><span class="line"></span><br><span class="line"># 设置密码</span><br><span class="line">passwd</span><br><span class="line"></span><br><span class="line"># 使用putty连接</span><br><span class="line">ssh root@192.168.1.8 -p 8022</span><br></pre></td></tr></table></figure><p>这里注意，SSH的端口是<code>8022</code>并不是22端口。值得注意的是关闭termux后，ssh进程也需要重新启动一下，或者加入系统自启动。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;sshd&quot; &gt;&gt; ~/.bashrc</span><br></pre></td></tr></table></figure><h2 id="终端配色方案"><a href="#终端配色方案" class="headerlink" title="终端配色方案"></a>终端配色方案</h2><p>tremux的白色配色有点单调，我们使用<code>[termux-ohmyzsh](https://github.com/Cabbagec/termux-ohmyzsh/)</code>来更换主题和字体，如果弹出请求存储授权请允许。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh -c &quot;$(curl -fsSL https://github.com/Cabbagec/termux-ohmyzsh/raw/master/install.sh)&quot;  </span><br></pre></td></tr></table></figure><p>执行脚本命令后，会有两个选项，分别选择<code>色彩样式</code>、<code>字体样式</code>，重启app后生效配置。如果有选择困难症，可以一遍遍选择自己合适的配色和字体方案。</p><p><strong>设置色彩样式</strong>：</p><p>输入<code>chcolor</code>命令更换色彩样式，或者执行<code>~/.termux/colors.sh</code>命令</p><p><strong>设置字体</strong></p><p>运行<code>chfont</code>命令更换字体，或者执行<code>~/.termux/fonts.sh</code>命令</p><p>文章参考：<a href="https://www.sqlsec.com/2018/05/termux.html">Termux 高级终端安装使用配置教程 - 国光</a></p>]]></content>
      
      
      <categories>
          
          <category> 虚拟化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Nginx </tag>
            
            <tag> mysql </tag>
            
            <tag> Termux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux nohup后台保持运行任务</title>
      <link href="/posts/dbf713b5.html"/>
      <url>/posts/dbf713b5.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->一般在运行Linux的程序脚本的时候，在shell终端关闭时候，脚本也会跟着结束。你觉得当前的进程还不能结束，可以使用nohup命令或者使用screen命令，该命令可以在关闭shell终端后继续运行相关进程。<h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup root/test.sh &gt; /dev/null 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><p>运行状态</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[1]6265  #进程ID</span><br><span class="line">$ nohup: ignoring input and appending output to `nohup.out’</span><br></pre></td></tr></table></figure><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20211111225500.png" alt="nohup"></p><p>nohop的使用十分简单，只需要在处理的命令前加上<code>nohup</code>即可，标准输出和标准错误输出重定向到nohup.out文件中。在结尾加上<code>&amp;</code>让命令在后台执行，终端退出命令依旧执行。</p><h3 id="关闭进程"><a href="#关闭进程" class="headerlink" title="关闭进程"></a>关闭进程</h3><p>列出相关进程PID(进程号)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 方法一</span><br><span class="line">jobs -l</span><br><span class="line"></span><br><span class="line"># 方法二</span><br><span class="line">ps -aux|grep test.sh</span><br></pre></td></tr></table></figure><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20211111224503.png" alt="nohup"></p><p>a:显示所有程序<br>u:以用户为主的格式来显示<br>x:显示所有程序，不以终端机来区分</p><p><strong>终结相关进程</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># jobs关闭进程</span><br><span class="line">jobs -l</span><br><span class="line"></span><br><span class="line">kill %PID</span><br></pre></td></tr></table></figure><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20211111224952.png" alt="jobs"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># kill关闭进程</span><br><span class="line">ps -aux|grep test.sh</span><br><span class="line"></span><br><span class="line">kill -9 PID</span><br></pre></td></tr></table></figure><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20211111225420.png" alt="kill"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CentOS </tag>
            
            <tag> Linux </tag>
            
            <tag> Termux </tag>
            
            <tag> nohup </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nginx防止源站泄露IP</title>
      <link href="/posts/4263b0ad.html"/>
      <url>/posts/4263b0ad.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->在安装完成NGINX环境后，通常为了避免攻击，可能会使用一些WAF/CDN来保护源站，但是如果配置不恰当，可能会导致源IP泄露。网络上有提供很多查询解析记录的网站，稍微不注意可能就躺枪，毕竟发动一次DDCC服务实在廉价啦。<h2 id="443端口泄露"><a href="#443端口泄露" class="headerlink" title="443端口泄露"></a>443端口泄露</h2><p>nginx服务器本身存在一个问题，当你没有设置默认网站时，通过IP访问会解析到第一个默认站点，而在加入https访问时，会通过第一个已经配置的SSL站点来连接，导致源站被暴露。可以通过配置一个自签的证书到默认站点来防止。</p><ul><li>在某个目录创建ssl.crt和ssl.key，一份长期有效的自签空白证书</li></ul><h4 id="ssl-crt"><a href="#ssl-crt" class="headerlink" title="ssl.crt"></a>ssl.crt</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">-----BEGIN CERTIFICATE-----</span><br><span class="line">MIIBkjCB/AIJAI3bCYqa39hiMA0GCSqGSIb3DQEBBQUAMA0xCzAJBgNVBAYTAiAg</span><br><span class="line">MCAXDTE4MTEyNDA5MDMzOFoYDzIwOTkxMjMxMDkwMzM4WjANMQswCQYDVQQGEwIg</span><br><span class="line">IDCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA18hepvNcznqDj735Opxircn3</span><br><span class="line">M0Ruv8nkpHHPuurxr6tLPKAe1XAsy5dWHDbK7t4sXpT0ds9c74yqmvfwKofPk7z9</span><br><span class="line">ZBhmyw/5sp454/JftL1c2fr58wB9ETfX6as5aR5hQR0M0NuQLSAB/KVzi9eeNWDd</span><br><span class="line">EzT0QN5B1Ai9BR/ApMMCAwEAATANBgkqhkiG9w0BAQUFAAOBgQBiqHZsuVP09ubT</span><br><span class="line">GzBSlAFEoqbM63sU51nwQpzkVObgGm9v9nnxS8Atid4be0THsz8nVjWcDym3Tydp</span><br><span class="line">lznrhoSrHyqAAlK3/WSMwyuPnDCNM5g1RdsV40TjZXk9/md8xWxGJ6n1MoBdlK8T</span><br><span class="line">H6h2ROkf59bb096TttB8lxXiT0uiDQ==</span><br><span class="line">-----END CERTIFICATE-----</span><br></pre></td></tr></table></figure><h4 id="ssl-key"><a href="#ssl-key" class="headerlink" title="ssl.key"></a>ssl.key</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">-----BEGIN RSA PRIVATE KEY-----</span><br><span class="line">MIICXQIBAAKBgQDXyF6m81zOeoOPvfk6nGKtyfczRG6/yeSkcc+66vGvq0s8oB7V</span><br><span class="line">cCzLl1YcNsru3ixelPR2z1zvjKqa9/Aqh8+TvP1kGGbLD/mynjnj8l+0vVzZ+vnz</span><br><span class="line">AH0RN9fpqzlpHmFBHQzQ25AtIAH8pXOL1541YN0TNPRA3kHUCL0FH8CkwwIDAQAB</span><br><span class="line">AoGAQ4ejh6AV5VCWJ8AOZXdXsofIYzUBa+glNAmiNx8b8BwteZWq0KVAf56nBkFn</span><br><span class="line">lQXW4OrA7wXKUfW11rXNZaIHJePJXv1swkN9+Em18Hon6BrtcqnKAwzAbhok3SzY</span><br><span class="line">IVjI/zrgOABH6+ii77xCRBzI1itVPNN88DAUHC7PYLYiaaECQQD7PSoij37+kMc/</span><br><span class="line">wPeEkl9r3vzU0OrsCsjU8Ev714OaoL/SIuAh6nsiRh9rcbUrrpGSSzIcmsk9HMDa</span><br><span class="line">hXBNkNl5AkEA298yQvssaUc4tbEWxAVfd9DsHJdCdbXfgf9Dy5/tpCzYncY7T0du</span><br><span class="line">VVHqKu3jXWoMc5XlesiCOerU/DIlMM8dGwJBANQn7GLO5iC1xWvS2bF7oVSIMtzL</span><br><span class="line">pvW4jaszWBbNAPccc59RkA9T4LMqn/GtTZ4bhhYRpbl+BB21IC3nrNPzU5ECQG8T</span><br><span class="line">Ln0QDruQs2F2eR3F6RjKfr1i3LxCiQtPPZycypzp2vS5tDS0zVRk8XuGehoy/N9X</span><br><span class="line">lnqU2NURgU92tbsWpokCQQDdc9tU3B/OM/YfzUNwvOLmUVwrJX6PFSFsOn+XHrCC</span><br><span class="line">q9LcGEAHyzaf5GEWje84ee4rkv5oaZcwll3dg4IioBnC</span><br><span class="line">-----END RSA PRIVATE KEY-----</span><br></pre></td></tr></table></figure><ul><li>我现在使用的是宝塔面板，默认路径（&#x2F;www&#x2F;server&#x2F;panel&#x2F;vhost&#x2F;nginx&#x2F;0.default.conf），不同的环境可能位置不同</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">server</span><br><span class="line">&#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name _;</span><br><span class="line">    index index.html;</span><br><span class="line">    root /www/server/nginx/html;  #这里填写web默认目录</span><br><span class="line">    return 444;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">server</span><br><span class="line">&#123;</span><br><span class="line">    listen 443 ssl;</span><br><span class="line">    server_name _;</span><br><span class="line">    ssl_certificate    /xxx/ssl.crt;  #这里填写证书绝对路径</span><br><span class="line">    ssl_certificate_key    /xxx/ssl.key; #这里填写证书绝对路径</span><br><span class="line">    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span><br><span class="line">    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;</span><br><span class="line">    ssl_prefer_server_ciphers on;</span><br><span class="line">    ssl_session_cache shared:SSL:10m;</span><br><span class="line">    ssl_session_timeout 10m;</span><br><span class="line">    index index.html;</span><br><span class="line">    root /www/server/nginx/html;  #这里填写web默认目录</span><br><span class="line">    return 444;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>最后在宝塔面板重载NGINX，这样服务器在收到未绑定域名访问的时候会自己断开链接反会HTTP444，这样就大大降低存在风险，防君子不能放小人</li></ul>]]></content>
      
      
      <categories>
          
          <category> 建站知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Tenginx </tag>
            
            <tag> Nginx </tag>
            
            <tag> IPv4 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>汽车音响标准接线颜色区分</title>
      <link href="/posts/a8820584.html"/>
      <url>/posts/a8820584.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->ANT：收音机天线控制输出信号<p>AMP+B：控制外部设备的开关机信号<br>BATT：汽车电池正极<br>ACC：钥匙上电打火信号，一般可以用来检测开机的信号<br>ILL：背景灯电源，一般与小灯线形成回路<br>一般来说：喇叭线为两条一组，同组线束，带黑色为负极。</p><table><thead><tr><th align="center">符号</th><th align="center">含义</th><th align="center">颜色</th></tr></thead><tbody><tr><td align="center">IGNITION 12v+</td><td align="center">ACC检测</td><td align="center">红色</td></tr><tr><td align="center">BATTERY 12+</td><td align="center">电瓶正极</td><td align="center">黄色</td></tr><tr><td align="center">GROUND 12V-</td><td align="center">接地负极</td><td align="center">黑色</td></tr><tr><td align="center">ILLUMINATION 12V+</td><td align="center">小灯正极</td><td align="center">橙色</td></tr><tr><td align="center">AMP 12V+</td><td align="center">功放控制正极</td><td align="center">蓝白色</td></tr><tr><td align="center">ANT12V+</td><td align="center">收音机天线供电正极</td><td align="center">蓝色</td></tr><tr><td align="center">TELE-MUTE 12V-</td><td align="center">免提听筒负极</td><td align="center">绿色</td></tr><tr><td align="center">LF(+)</td><td align="center">前左声道正</td><td align="center">白色</td></tr><tr><td align="center">LF(-)</td><td align="center">前左声道负</td><td align="center">白黑色</td></tr><tr><td align="center">RF(+)</td><td align="center">前右声道正</td><td align="center">灰色</td></tr><tr><td align="center">RF(-)</td><td align="center">前右声道负</td><td align="center">灰黑色</td></tr><tr><td align="center">LR(+)</td><td align="center">后左声道正</td><td align="center">绿色</td></tr><tr><td align="center">LR(-)</td><td align="center">后左声道负</td><td align="center">绿黑色</td></tr><tr><td align="center">RR(+)</td><td align="center">后右声道正</td><td align="center">紫色</td></tr><tr><td align="center">RR(-)</td><td align="center">后右声道负</td><td align="center">紫黑色</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 工作笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 汽车 </tag>
            
            <tag> 电路检测 </tag>
            
            <tag> 音响 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>腾讯云备案信息整改</title>
      <link href="/posts/ad28ff30.html"/>
      <url>/posts/ad28ff30.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->前几天收到腾讯云的整改通知，收到来北京和上海的腾讯云通知电话，没有接到，来电几秒钟就挂掉了。<p>然后登录腾讯云，看一下工单，原因是首页备案号的链接错了，是很久的备案域名，只是挂了单页就没有管了。</p><h4 id="核查意见"><a href="#核查意见" class="headerlink" title="核查意见"></a>核查意见</h4><blockquote><p>网站首页底部备案号添加错误，请您在网站首页底部添加正确的备案号，备案号并链接至工信部首页。（工信部链接：<a href="https://beian.miit.gov.cn/">https://beian.miit.gov.cn/</a></p></blockquote><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><p>以前填写<code>https://www.beian.miit.gov.cn/</code>改成<code>https://beian.miit.gov.cn/</code>就可以啦。</p>]]></content>
      
      
      <categories>
          
          <category> 钧言钧语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 备案 </tag>
            
            <tag> 工信部 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PVE部署LXC容器内运行Docker</title>
      <link href="/posts/c48b8792.html"/>
      <url>/posts/c48b8792.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->在软路由安装Proxmox后，可以使用LXC容器化安装Docker，来实现无限套娃。就没有必要去使用KVM再去安装一个系统来单独运行Docker。<blockquote><p>Linux Container容器是一种内核虚拟化技术，可以提供轻量级的虚拟化，以便隔离进程和资源。</p></blockquote><p>简单来说，LXC的虚拟化基于宿主机的内核上去运行另外一个操作系统，并将这部分程序隔离，这就和Docker的原理很相似。虚拟机在运行的时候会虚拟化CPU，并在虚拟化的CPU再单独运行一套内核来安装系统，这样会有小小的性能损耗。</p><h2 id="加载内核模块"><a href="#加载内核模块" class="headerlink" title="加载内核模块"></a>加载内核模块</h2><p>Docker需要aufs和overlay的内核模块，LXC运行在宿主机的内核上，所以在宿主机内核加载这两个模块。</p><p>开机自动加载模块</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/modules</span><br><span class="line"></span><br><span class="line"># 添加以下内容</span><br><span class="line"></span><br><span class="line">aufs</span><br><span class="line">overlay</span><br></pre></td></tr></table></figure><p>临时解决办法，但是重启后需要重新加载</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">modprobe aufs &amp;&amp; modprobe overlay</span><br></pre></td></tr></table></figure><h3 id="创建CT容器"><a href="#创建CT容器" class="headerlink" title="创建CT容器"></a>创建CT容器</h3><p>点击右上角创建CT</p><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20210919124946.png" alt="LXC容器"></p><p>系统选择CentOS。然后一步步指引完成创建容器。</p><p>由于LXC的一些设定，会导致docker运行会报权限不足，所以要开启套娃模式。</p><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20210919125034.png" alt="LXC容器"></p><p>勾选按键和嵌套然后点击OK</p><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20210919125058.png" alt="LXC设定"></p><p>这时候容器创建完毕，可以开机安装docker。</p><h2 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h2><p>安装相关依赖</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y yum-utils device-mapper-persistent-data lvm2</span><br></pre></td></tr></table></figure><p>添加国内安装源</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure><p>安装Docker-ce</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure><p>开启docker服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable docker</span><br><span class="line">systemctl start docker</span><br></pre></td></tr></table></figure><p>安装docker完成后，验证是否安装成功，运行<code>docker run hello-world</code></p><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20210919135648.png" alt="Docker"></p><p>没有报错，说明docker的环境构建完成，可以愉快的玩耍啦。</p>]]></content>
      
      
      <categories>
          
          <category> 虚拟化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Proxmox </tag>
            
            <tag> LXC容器 </tag>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用“一证通查”查询名下所有运营商电话卡</title>
      <link href="/posts/8e412cfb.html"/>
      <url>/posts/8e412cfb.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->![一证通查][1]<h2 id="查询名下所有电话卡"><a href="#查询名下所有电话卡" class="headerlink" title="查询名下所有电话卡"></a>查询名下所有电话卡</h2><p>全国移动电话卡“一证通查”是由工信部指导，工信部反诈中心（中国信通院）、中国电信、中国移动、中国联通及移动通信转售企业共同推出的公益性查询服务，可以为用户提供本人在各个运营商通过居民身份证办理的所有处于在网状态的移动电话卡数量。</p><ul><li>来自工信部官方出品！并非乱七八糟的地址，不放心可以检查一下备案信息。</li></ul><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20210915223507.png" alt="工信部"></p><ul><li>打开地址输入你的对应信息 -&gt; 获取验证码 -&gt; 输入验证码点击查询 -&gt; 不到一分钟时间就会收到查询短信</li></ul><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20210915224405.png" alt="查询结果"></p><p>如果对检查有疑问，可以通过线下营业厅或者线上客服进行咨询，如果不是本人在用可以进行注销或者进行申诉。</p><ul><li><p>查询地址：<a href="https://getsimnum.caict.ac.cn/#/">https://getsimnum.caict.ac.cn/#/</a> </p></li><li><p>支付宝搜索小程序：一证通查</p></li><li><p>微信搜索公众号：中国信通院CAICT</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 资源分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 中国移动 </tag>
            
            <tag> 中国联通 </tag>
            
            <tag> 中国电信 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>百度直连免流IP</title>
      <link href="/posts/23a2b584.html"/>
      <url>/posts/23a2b584.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->免流服务器IP查询：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cloudnproxy.baidu.com</span><br></pre></td></tr></table></figure><h3 id="百度直连联通免流IP"><a href="#百度直连联通免流IP" class="headerlink" title="百度直连联通免流IP"></a>百度直连联通免流IP</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">南京：112.80.255.21</span><br><span class="line">北京：123.125.142.40</span><br><span class="line">广州：163.177.151.162</span><br></pre></td></tr></table></figure><h3 id="百度直连电信免流IP"><a href="#百度直连电信免流IP" class="headerlink" title="百度直连电信免流IP"></a>百度直连电信免流IP</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">南京：180.97.104.45</span><br><span class="line">北京：220.181.43.12</span><br><span class="line">广州：14.215.177.73</span><br></pre></td></tr></table></figure><h3 id="百度直连移动免流IP"><a href="#百度直连移动免流IP" class="headerlink" title="百度直连移动免流IP"></a>百度直连移动免流IP</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">南京：36.152.45.80</span><br><span class="line">北京：112.34.116.40</span><br><span class="line">广州：183.232.232.223</span><br></pre></td></tr></table></figure><p>##百度直连tiny免流参数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">listen_port=65080;</span><br><span class="line">worker_proc=0;</span><br><span class="line">uid=3004;</span><br><span class="line">mode=net;</span><br><span class="line">daemon=on;</span><br><span class="line"></span><br><span class="line">http_ip=221.176.66.101;</span><br><span class="line">http_port=80;</span><br><span class="line">http_del=&quot;Host,X-Online-Host&quot;;</span><br><span class="line">http_first=&quot;[M] http://[H][U] [V]\r</span><br><span class="line">Host:[H]\r&quot;;</span><br><span class="line"></span><br><span class="line">https_connect=on;</span><br><span class="line">https_ip=180.97.104.45;</span><br><span class="line">https_port=443;</span><br><span class="line">https_del=&quot;Host,X-Online-Host&quot;;</span><br><span class="line">https_first=&quot;[M] [H] [V]\r&quot;;</span><br><span class="line"></span><br><span class="line">dns_tcp=http;</span><br><span class="line">dns_listen_port=65053;</span><br><span class="line">dns_url=&quot;119.29.29.29&quot;;</span><br></pre></td></tr></table></figure><p>参数2：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">mode=wap;</span><br><span class="line">listen_port=65080;</span><br><span class="line">daemon=on;</span><br><span class="line">worker_proc=0;</span><br><span class="line">uid=0;</span><br><span class="line"></span><br><span class="line">http_ip=112.80.255.21;</span><br><span class="line">http_port=443;</span><br><span class="line">http_del=&quot;&quot;;</span><br><span class="line">http_first=&quot;[M] http://[H][U] [V]\r\nX-T5-Auth: 88888888\r\n&quot;;</span><br><span class="line"></span><br><span class="line">https_connect=on;</span><br><span class="line">https_ip=112.80.255.21;</span><br><span class="line">https_port=443;</span><br><span class="line">https_del=&quot;&quot;;</span><br><span class="line">https_first=&quot;[M] [H] [V]\r\nX-T5-Auth: 88888888\r\n&quot;;</span><br><span class="line"></span><br><span class="line">dns_tcp=http;</span><br><span class="line">dns_listen_port=65053;</span><br><span class="line">dns_url=&quot;119.29.29.29&quot;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 资源分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 广东电信 </tag>
            
            <tag> 免流 </tag>
            
            <tag> 互联网卡 </tag>
            
            <tag> TinyProxy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>旧手机折腾termux安装transmission 玩转PT下载</title>
      <link href="/posts/a1af2cf.html"/>
      <url>/posts/a1af2cf.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->最近家里退役一台360 N7，配置还行6+128，挂海鲜鱼也不值多少钱，就当做废物循环利用动手搭建一些有趣的东西玩一下。虽然pt文件普遍文件较大，但是128的配置也足够下载几部大片下班回去投屏欣赏一下，也不必要使用动辄就开启NAS来进行下载存储。<h2 id="准备工具"><a href="#准备工具" class="headerlink" title="准备工具"></a>准备工具</h2><p>安卓手机<br>termux</p><h2 id="安装Termux"><a href="#安装Termux" class="headerlink" title="安装Termux"></a>安装Termux</h2><p>termux官方下载：<a href="https://termux.com/">Termux</a></p><p>下载安装，然后安装</p><p>官方源在海外速度很慢，替换官方源地址为国内的清华源，来加速软件包的下载速度。</p><h3 id="自动替换软件源"><a href="#自动替换软件源" class="headerlink" title="自动替换软件源"></a>自动替换软件源</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">sed -i &#x27;s@^\(deb.*stable main\)$@#\1\ndeb https://mirrors.tuna.tsinghua.edu.cn/termux/termux-packages-24 stable main@&#x27; $PREFIX/etc/apt/sources.list</span><br><span class="line"></span><br><span class="line">sed -i &#x27;s@^\(deb.*games stable\)$@#\1\ndeb https://mirrors.tuna.tsinghua.edu.cn/termux/game-packages-24 games stable@&#x27; $PREFIX/etc/apt/sources.list.d/game.list</span><br><span class="line"></span><br><span class="line">sed -i &#x27;s@^\(deb.*science stable\)$@#\1\ndeb https://mirrors.tuna.tsinghua.edu.cn/termux/science-packages-24 science stable@&#x27; $PREFIX/etc/apt/sources.list.d/science.list</span><br><span class="line"></span><br><span class="line"># 更新源</span><br><span class="line">pkg update</span><br><span class="line"></span><br><span class="line"># 升级软件包</span><br><span class="line">pkg upgrade</span><br></pre></td></tr></table></figure><h2 id="安装Transmission"><a href="#安装Transmission" class="headerlink" title="安装Transmission"></a>安装Transmission</h2><p>在Termux命令行输入以下进行安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkg install transmission</span><br></pre></td></tr></table></figure><h3 id="配置settings-json"><a href="#配置settings-json" class="headerlink" title="配置settings.json"></a>配置settings.json</h3><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20210831214155.png" alt="transmission"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi ~/.config/transmission-daemon/settings.json</span><br></pre></td></tr></table></figure><p>主要修改配置参数为以下这些</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&quot;rpc-whitelist&quot;：&quot;*&quot;</span><br><span class="line">&quot;rpc-authentication-required&quot;：&quot;true&quot;</span><br><span class="line">&quot;rpc-bind-address&quot;: &quot;0.0.0.0&quot;</span><br><span class="line">&quot;rpc-enable&quot;：&quot;true&quot;</span><br><span class="line">&quot;rpc-username&quot;：&quot;用户名&quot;</span><br><span class="line">&quot;rpc-password&quot;：&quot;密码&quot;</span><br></pre></td></tr></table></figure><h3 id="建立软路径和启动"><a href="#建立软路径和启动" class="headerlink" title="建立软路径和启动"></a>建立软路径和启动</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 建立软连接目录</span><br><span class="line">termux-setup-storage</span><br><span class="line"></span><br><span class="line"># 结束进程</span><br><span class="line">killall transmission-daemon</span><br><span class="line"></span><br><span class="line"># 启动进程 -T表示不需要验证</span><br><span class="line">transmission-daemon -T</span><br></pre></td></tr></table></figure><p><strong>PS</strong>：修改配置文件的时候一定要先结束进程，不然修改的配置文件无法正常使用。</p><h3 id="连接Transmission"><a href="#连接Transmission" class="headerlink" title="连接Transmission"></a>连接Transmission</h3><p>手机浏览器打开：<code>127.0.0.1:9091/transmission/web/</code><br>电脑访问：<code>路由器IP:9091/transmission/web/</code></p><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20210831221113.png" alt="transmission"></p><h5 id="配置下载目录"><a href="#配置下载目录" class="headerlink" title="配置下载目录"></a>配置下载目录</h5><p>如果不正确配置下载目录将无法正常下载</p><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20210927224346.png" alt="下载路径"></p><p>手机下载内置路径 <code>/data/data/com.termux/files/home/storage/downloads</code></p><h2 id="美化Ui界面"><a href="#美化Ui界面" class="headerlink" title="美化Ui界面"></a>美化Ui界面</h2><h4 id="WEB路径"><a href="#WEB路径" class="headerlink" title="WEB路径"></a>WEB路径</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/data/data/com.termux/files/usr/share/transmission/web</span><br></pre></td></tr></table></figure><p>使用<code>transmission-web-control</code>来进行美化</p><h4 id="获取root权限"><a href="#获取root权限" class="headerlink" title="获取root权限"></a>获取root权限</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 安装proot</span><br><span class="line">pkg install proot</span><br><span class="line"></span><br><span class="line"># 进入root模式</span><br><span class="line">termux-chroot</span><br><span class="line"></span><br><span class="line"># 退出root模式</span><br><span class="line">exit</span><br></pre></td></tr></table></figure><h3 id="美化ui需要root模式下才能进行安装"><a href="#美化ui需要root模式下才能进行安装" class="headerlink" title="美化ui需要root模式下才能进行安装"></a>美化ui需要root模式下才能进行安装</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://gitee.com/culturist/transmission-web-control/raw/master/release/install-tr-control-gitee.sh</span><br><span class="line">bash install-tr-control-gitee.sh</span><br></pre></td></tr></table></figure><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20210831223231.png" alt="transmission"></p><h2 id="手机管理transmission"><a href="#手机管理transmission" class="headerlink" title="手机管理transmission"></a>手机管理transmission</h2><p>Github下载：<a href="https://github.com/equeim/tremotesf-android">https://github.com/equeim/tremotesf-android</a></p><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20210831224657.png" alt="transmission"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>下载PT种子后并不能挂上传，因为没有公网IP，抢不到上传。所以分享率这种东西就随缘啦～～或许可以通过FRP等等内网穿透这类工具来进行操作。</p>]]></content>
      
      
      <categories>
          
          <category> 虚拟化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Transmission </tag>
            
            <tag> Termux </tag>
            
            <tag> PT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker配置国内镜像加速源</title>
      <link href="/posts/7e715475.html"/>
      <url>/posts/7e715475.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->由于要从Docker拉取某个镜像，但是通过默认的源地址拉取镜像的时间很长而且下载缓慢。我们可以通过切换国内加速源来达到加速的目的。<h3 id="国内加速地址"><a href="#国内加速地址" class="headerlink" title="国内加速地址"></a>国内加速地址</h3><table><thead><tr><th>名称</th><th>加速源地址</th></tr></thead><tbody><tr><td>腾讯云镜像</td><td><a href="https://mirror.ccs.tencentyun.com/">https://mirror.ccs.tencentyun.com</a></td></tr><tr><td>网易163镜像</td><td><a href="https://hub-mirror.c.163.com/">https://hub-mirror.c.163.com</a></td></tr><tr><td>中科大镜像</td><td><a href="https://docker.mirrors.ustc.edu.cn/">https://docker.mirrors.ustc.edu.cn</a></td></tr><tr><td>阿里云镜像</td><td>https:&#x2F;&#x2F;[ID].mirror.aliyuncs.com</td></tr><tr><td>DaoCloud镜像</td><td>http:&#x2F;&#x2F;[ID].m.daocloud.io</td></tr></tbody></table><p><strong>PS</strong>：使用阿里云镜像加速说明</p><p>访问：<a href="https://cr.console.aliyun.com/#/accelerator">https://cr.console.aliyun.com/#/accelerator</a></p><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20210827230109.png" alt="docker"></p><p><strong>PS</strong>：DaoCloud镜像加速器</p><p>??访问：<a href="https://www.daocloud.io/">https://www.daocloud.io/</a></p><h4 id="配置镜像加速说明"><a href="#配置镜像加速说明" class="headerlink" title="配置镜像加速说明"></a>配置镜像加速说明</h4><p>使用环境是：<code>CentOS 7</code><br>使用docker版本：<code>1.7.1</code></p><ul><li>修改<code>/etc/docker/daemon.json</code>配置文件</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/docker/daemon.json</span><br></pre></td></tr></table></figure><ul><li>配置daemon配置文件</li></ul><p><strong>PS</strong>：要保证文件符合josn规范，不然可能会导致bug</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 替换内容</span><br><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [</span><br><span class="line">    &quot;https://mirror.ccs.tencentyun.com&quot;,</span><br><span class="line">    &quot;https://hub-mirror.c.163.com&quot;,</span><br><span class="line">    &quot;https://docker.mirrors.ustc.edu.cn&quot;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 退出编辑并保存</span><br><span class="line">:wq</span><br></pre></td></tr></table></figure><ul><li>重启docker服务使配置生效</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure><ul><li>查看更新源</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker info</span><br></pre></td></tr></table></figure><p>配置完成后重新查询pull</p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CentOS </tag>
            
            <tag> Linux </tag>
            
            <tag> 镜像加速 </tag>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Typecho 启用 Service Workers 浏览器缓存加速首屏访问</title>
      <link href="/posts/ae932d90.html"/>
      <url>/posts/ae932d90.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->![Ser?vice Work?ers][1]<p>提到网站访问速度，很大一部分原因要归功于 VOID 主题作者在这款主题中运用 PJAX 无刷新访问技术、Lazy?load 图片懒加载以及 Ser?vice Work?ers 浏览器缓存，这些技术的加持大大提升了网站的访问体验。</p><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20210814212914.png" alt="Ser?vice Work?ers"></p><p>在了解关于 Ser?vice Worker 的实现方式后，这里就大概的介绍一下如何在自己的博客 &#x2F; 网站中启用 ?Ser?vice Worker 这项技术来达到减少服务器请求的负担压力。（ Ser?vice Worker 并非专门为缓存而设计，它还可以解决 Web 应用推送、后台长计算等问题 ）</p><h3 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h3><blockquote><p>Ser?vice Work?ers 要求必须在 HTTPS 下才能运行，这是大前提。</p></blockquote><p>1、下载保存?<a href="https://cdn.jsdelivr.net/gh/GoogleChromeLabs/sw-toolbox/sw-toolbox.js">sw-toolbox.js</a>?文件到主题目录下（静态文件存放的目录），例如?<code>assets</code>?目录之下。</p><p>2、创建缓存规则，保存为?<code>serviceworker.js</code>?并存放到网站根目录。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">&#x27;use strict&#x27;;</span><br><span class="line"></span><br><span class="line">(function () &#123;</span><br><span class="line">    &#x27;use strict&#x27;;</span><br><span class="line">    /**</span><br><span class="line">    * Service Worker Toolbox caching</span><br><span class="line">    */</span><br><span class="line"></span><br><span class="line">    var cacheVersion = &#x27;-toolbox-v1&#x27;;</span><br><span class="line">    var dynamicVendorCacheName = &#x27;dynamic-vendor&#x27; + cacheVersion;</span><br><span class="line">    var staticVendorCacheName = &#x27;static-vendor&#x27; + cacheVersion;</span><br><span class="line">    var staticAssetsCacheName = &#x27;static-assets&#x27; + cacheVersion;</span><br><span class="line">    var contentCacheName = &#x27;content&#x27; + cacheVersion;</span><br><span class="line">    var maxEntries = 200;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    self.importScripts(&#x27;usr/themes/VOID/assets/sw-toolbox.js&#x27;);</span><br><span class="line"></span><br><span class="line">    self.toolbox.options.debug = false;</span><br><span class="line"></span><br><span class="line">    // 缓存本站静态文件</span><br><span class="line">    self.toolbox.router.get(&#x27;/usr/(.*)&#x27;, self.toolbox.cacheFirst, &#123;</span><br><span class="line">        cache: &#123;</span><br><span class="line">            name: staticAssetsCacheName,</span><br><span class="line">            maxEntries: maxEntries</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    // 缓存 Gravatar 头像</span><br><span class="line">    self.toolbox.router.get(&#x27;/avatar/(.*)&#x27;, self.toolbox.cacheFirst, &#123;</span><br><span class="line">        origin: /(secure\.gravatar\.com)/,</span><br><span class="line">        cache: &#123;</span><br><span class="line">            name: staticVendorCacheName,</span><br><span class="line">            maxEntries: maxEntries</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    // 缓存 Google 字体</span><br><span class="line">    self.toolbox.router.get(&#x27;/(.*)&#x27;, self.toolbox.cacheFirst, &#123;</span><br><span class="line">        origin: /(fonts\.googleapis\.com)/,</span><br><span class="line">        cache: &#123;</span><br><span class="line">            name: staticVendorCacheName,</span><br><span class="line">            maxEntries: maxEntries</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    self.toolbox.router.get(&#x27;/(.*)&#x27;, self.toolbox.cacheFirst, &#123;</span><br><span class="line">        origin: /(fonts\.gstatic\.com)/,</span><br><span class="line">        cache: &#123;</span><br><span class="line">            name: staticVendorCacheName,</span><br><span class="line">            maxEntries: maxEntries</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    // immediately activate this serviceworker</span><br><span class="line">    self.addEventListener(&#x27;install&#x27;, function (event) &#123;</span><br><span class="line">        return event.waitUntil(self.skipWaiting());</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    self.addEventListener(&#x27;activate&#x27;, function (event) &#123;</span><br><span class="line">        return event.waitUntil(self.clients.claim());</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><p>这里需要说明的是：1、Ser?vice Worker 不适用于缓存头为 <code>Cache-control: no-store</code> 或者 <code>no-cache</code> 的文件；2、 typecho 涉及到的主题及插件都集中存放在 <code>usr</code> 目录，因此上面的缓存规则针对 <code>usr</code> 目录下的所有文件。大家可以依据自己情况调整。</p><p>3、在主题的 <code>footer.php</code> 文件闭合标签 </body> 之前加入下面的代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    var serviceWorkerUri = &#x27;/serviceworker.js&#x27;;</span><br><span class="line">    if (&#x27;serviceWorker&#x27; in navigator) &#123;</span><br><span class="line">        navigator.serviceWorker.register(serviceWorkerUri).then(function() &#123;</span><br><span class="line">            if (navigator.serviceWorker.controller) &#123;</span><br><span class="line">                console.log(&#x27;Service woker is registered and is controlling.&#x27;);</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                console.log(&#x27;Please reload this page to allow the service worker to handle network operations.&#x27;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).catch(function(error) &#123;</span><br><span class="line">            console.log(&#x27;ERROR: &#x27; + error);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        console.log(&#x27;Service workers are not supported in the current browser.&#x27;);</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>4、取消对?<code>serviceworker.js</code>?文件启用缓存</p><p>为了防止在浏览器需要请求新版本的?<code>serviceworker.js</code>?文件时，而文件自身被缓存的尴尬局面。这里可以给?<code>serviceworker.js</code>?文件单独指定缓存头?<code>Cache-control: no-store</code>?或?<code>no-cache</code>。</p><p>Ng?inx 配置在?<code>server &#123;</code>?区域内追加内容如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># serviceworker.js 不设置缓存</span><br><span class="line"></span><br><span class="line">location ~* /(.*)/serviceworker\.js &#123;</span><br><span class="line">    add_header Cache-Control no-cache;</span><br><span class="line">    add_header Pragma no-cache;</span><br><span class="line">    add_header Expires 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重启一下 Ng?inx</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart nginx.service</span><br></pre></td></tr></table></figure><h2 id="查看-Service-Workers-状态"><a href="#查看-Service-Workers-状态" class="headerlink" title="查看 Service Workers 状态"></a>查看 Service Workers 状态</h2><p>打开浏览器 F12 进入浏览器开发者模式，在 Ap?pli?ca?tion 应该就能找到 Ser?vice Work?ers。</p><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20210814213600.png" alt="Ser?vice Work?ers"></p><h2 id="查看-Service-Workers-效果"><a href="#查看-Service-Workers-效果" class="headerlink" title="查看 Service Workers 效果"></a>查看 Service Workers 效果</h2><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20210814213707.png" alt="Ser?vice Work?ers"></p><p>具体效果表现在：二次访问页面，符合缓存条件的文件请求会优先从 Ser?vice Worker 读取。本文主要介绍 Ser?vice Worker 功能的部分实现过程，它作为一款 Google 黑科技更多功能还是需要自己去挖掘 –&gt;?<a href="https://www.moewah.com/go/aHR0cHM6Ly9kZXZlbG9wZXJzLmdvb2dsZS5jb20vd2ViL2Z1bmRhbWVudGFscy9wcmltZXJzL3NlcnZpY2Utd29ya2Vycw==">了解更多</a></p><p>本文转载：<a href="https://www.moewah.com/archives/4489.html">喵斯基部落</a></p>]]></content>
      
      
      <categories>
          
          <category> Typecho </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typecho </tag>
            
            <tag> Javascript </tag>
            
            <tag> 懒加载 </tag>
            
            <tag> 浏览器 </tag>
            
            <tag> PWA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kangle利用自定义IP做云端黑名单 防止恶意访客访问</title>
      <link href="/posts/1c00a547.html"/>
      <url>/posts/1c00a547.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->最近博客经常收到海外一些IP刷评论，就想屏蔽这些恶意的IP扫描和评论。在逛小樱论坛的时候，发现一个可以利用ipip数据库来屏蔽海外访问来防御CC的帖子，稍加改造也适合屏蔽恶意IP和防御CC。<ul><li>在服务器创建一个txt文本，用来记录恶意IP。</li></ul><p>[card-default width&#x3D;”100%” label&#x3D;”IP文件制作”]kangle版本要在3.5.10以上<br>IP文件制作一共三行<br>第一行，签名，如果签名不变，自动更新文件不会生效。例如写2017-9-12<br>第二行ip段，多个ip段用|分割<br>第三行，空<br>[&#x2F;card-default]</p><ul><li>kangle操作步骤</li></ul><p>请求控制 》 目标：拒绝 》 匹配模块：cloud_ip 》url：txt地址 》 flush_time(second)：196000 》非：不勾选</p><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20210807232508.png" alt="kangle"></p><p><code>flush_time(second)</code> 填写1296000，两个星期更新一次IP数据库。</p><p>不勾选非，那么就是拒绝黑名单的IP访问。同理，通过访客的IP访问，就会提示403状态无法访问。</p><h3 id="屏蔽海外访问"><a href="#屏蔽海外访问" class="headerlink" title="屏蔽海外访问"></a>屏蔽海外访问</h3><p>这里使用小樱的IP库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://github.itzmx.com/1265578519/kangle/master/ipip/china_ip_list.txt</span><br></pre></td></tr></table></figure><p>3311请求控制，cloud_ip模块，目标拒绝，填写，勾选非，flush_time(second)填写1296000，两个星期更新一次IP数据库</p><p>这里比较推荐ipip，教程也使用了ipip，毕竟精准度高</p><p>IPIP数据库免费项目地址：<a href="https://github.com/17mon/china_ip_list">https://github.com/17mon/china_ip_list</a></p><p>anrip数据库项目地址<a href="https://github.com/anrip/IpAreaRoute">https://github.com/anrip/IpAreaRoute</a></p><p>参考：<a href="https://bbs.itzmx.com/forum.php?mod=viewthread&tid=15837&highlight=kangle">小樱论坛</a><br>参考：<a href="https://bbs.itzmx.com/thread-18799-1-1.html">小樱论坛</a></p>]]></content>
      
      
      <categories>
          
          <category> 建站知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> kangle </tag>
            
            <tag> IPv6 </tag>
            
            <tag> IPv4 </tag>
            
            <tag> 静态IP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>广东电信福利活动</title>
      <link href="/posts/719b10e.html"/>
      <url>/posts/719b10e.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->### 每月10G通用<p>编辑短信 <code>68464</code> 到 <code>10001</code></p><p>回复 <code>Y</code> 进行确认</p><h3 id="免费5G白金会员权益包"><a href="#免费5G白金会员权益包" class="headerlink" title="免费5G白金会员权益包"></a>免费5G白金会员权益包</h3><p>5G网速提升至500Mbps，在不加包的情况下，使用5G网络，网速限制300Mbps</p><p>编辑短信 <code>68250</code> 到 <code>10001</code></p><p>回复 <code>Y</code> 进行确认</p><p><strong>PS</strong>：貌似只有广州、深圳测试成功，我开通不成功</p><h3 id="星卡可选包"><a href="#星卡可选包" class="headerlink" title="星卡可选包"></a>星卡可选包</h3><p>8G通用流量+100分钟国内语音</p><p>编辑短信 <code>68470</code> 到 <code>10001</code></p><p>回复 <code>Y</code> 进行确认</p><h3 id="流量达人"><a href="#流量达人" class="headerlink" title="流量达人"></a>流量达人</h3><p>限制只能副卡用户开通，使用1G流量加10G流量</p><p>编辑短信 <code>68393</code> 到 <code>10001</code></p><p>回复 <code>Y</code> 进行确认</p><h3 id="9元升级5G活动"><a href="#9元升级5G活动" class="headerlink" title="9元升级5G活动"></a>9元升级5G活动</h3><p>9元包10G 开通500M速率</p><p>用户范围：仅限广东省27周岁及以下在校学生用户受理。</p><p>活动地址：<a href="https://gd.189.cn/hd/2021/act/ssinfo.html#/5G">https://gd.189.cn/hd/2021/act/ssinfo.html#/5G</a></p><h3 id="充值100送100G流量"><a href="#充值100送100G流量" class="headerlink" title="充值100送100G流量"></a>充值100送100G流量</h3><p>预存100元话费，成功办理后预存款立即到账，可抵扣所有费用；定向流量当月账期起6个月内有效，所含流量为全国定向流量</p><p>预存领1200G豪礼：<a href="http://gd.189.cn/hd/yewu/ssinfo.html?cmpid=LY3">http://gd.189.cn/hd/yewu/ssinfo.html?cmpid=LY3</a></p>]]></content>
      
      
      <categories>
          
          <category> 资源分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 中国电信 </tag>
            
            <tag> 广东电信 </tag>
            
            <tag> 领取流量 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SATA硬盘数据/电源接口定义</title>
      <link href="/posts/c6e043f3.html"/>
      <url>/posts/c6e043f3.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->最近在折腾我家云硬改方案，记录一下SATA接口的定义。<blockquote><p>SATA是Serial ATA（Serial Advanced Technology Attachment）亦称串行ATA，是由Intel、IBM、Dell、APT、Maxtor和Seagate公司共同提出的硬盘接口规范。SATA接口分为1.0、2.0、3.0三个大版本，大版本下面还有3.3、3.4这些，版本号越大，出现的时间就越晚；性能就越好，主要是数据传输速率更快。SATA接口的版本是向下兼容的，高版本的SATA接口兼容低版本的SATA接口。</p></blockquote><p>2.5寸和3.5寸的SATA供电&#x2F;数据接口都一样，区别在于尺寸不一样，但是2.5寸的机械盘比较矫情。</p><h2 id="SATA数据接口"><a href="#SATA数据接口" class="headerlink" title="SATA数据接口"></a>SATA数据接口</h2><p>SATA数据线（7针）对应硬盘的数据接口（7针）</p><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20210725213028.jpeg" alt="SATA"></p><table><thead><tr><th align="center">针脚</th><th align="center">信号</th><th align="center">定义</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">GND Ground</td><td align="center">接地，一般和负极相连</td></tr><tr><td align="center">2</td><td align="center">A Transmit</td><td align="center">数据发送正极信号接口</td></tr><tr><td align="center">3</td><td align="center">A- Transmit</td><td align="center">数据发送负极信号接口</td></tr><tr><td align="center">4</td><td align="center">GND Ground</td><td align="center">接地，一般和负极相连</td></tr><tr><td align="center">5</td><td align="center">B- Receive</td><td align="center">数据接收负极信号接口</td></tr><tr><td align="center">6</td><td align="center">B Receive</td><td align="center">数据接收正极信号接口</td></tr><tr><td align="center">7</td><td align="center">GND Ground</td><td align="center">接地，一般和负极相连</td></tr></tbody></table><h2 id="SATA电源接口"><a href="#SATA电源接口" class="headerlink" title="SATA电源接口"></a>SATA电源接口</h2><p>SATA电源接口(15针)对应硬盘的电源接口（15针）</p><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20210725214252.jpeg" alt="SATA"></p><table><thead><tr><th align="center">针脚</th><th align="center">信号</th><th align="center">定义</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">+3.3VDC</td><td align="center">直流 3.3v 正极电源针脚</td></tr><tr><td align="center">2</td><td align="center">+3.3VDC</td><td align="center">直流 3.3V 正极电源针脚</td></tr><tr><td align="center">3</td><td align="center">+3.3VDC</td><td align="center">直流 3.3V 正极电源针脚,预充电,与第二路配对</td></tr><tr><td align="center">4</td><td align="center">GND</td><td align="center">接地，一般和负极相连，与第1路配对</td></tr><tr><td align="center">5</td><td align="center">GND</td><td align="center">接地，一般和负极相连，与第2路配对</td></tr><tr><td align="center">6</td><td align="center">GND</td><td align="center">接地，一般和负极相连。与第3路配对</td></tr><tr><td align="center">7</td><td align="center">+5VDC</td><td align="center">直流 5V 正极电源针脚，预充电，与第二路配对</td></tr><tr><td align="center">8</td><td align="center">+5VDC</td><td align="center">直流 5V 正极电源针脚</td></tr><tr><td align="center">9</td><td align="center">+5VDC</td><td align="center">直流 5V 正极电源针脚</td></tr><tr><td align="center">10</td><td align="center">GND</td><td align="center">接地，一般和负极相连，与第2路配对</td></tr><tr><td align="center">11</td><td align="center">Optional</td><td align="center">保留的针脚</td></tr><tr><td align="center">12</td><td align="center">GND</td><td align="center">接地，一般和负极相连，与第一路配对</td></tr><tr><td align="center">13</td><td align="center">+12VDC</td><td align="center">直流 12V 正极电源针脚。预充电，与第二路配对</td></tr><tr><td align="center">14</td><td align="center">+12VDC</td><td align="center">直流 12V 正极电源针脚</td></tr><tr><td align="center">15</td><td align="center">+12VDC</td><td align="center">直流 12V 正极电源针脚</td></tr></tbody></table><p>一般也可以线颜色去区分，3.3V 为橙色、GND 为黑色、5V 为红色、12V 为黄色。</p>]]></content>
      
      
      <categories>
          
          <category> 资源分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> SATA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Rocky Linux/CentOS8 管理网卡命令</title>
      <link href="/posts/7faf237f.html"/>
      <url>/posts/7faf237f.html</url>
      
        <content type="html"><![CDATA[<!--markdown--> 最近尝鲜安装Rocky Linux系统，配置好网卡信息后，执行 `systemctl?start?network` 提示找不到network，由于一直在使用的是centos7，不知道管理网卡的命令变化了，一顿恶补知识后，Rocky与Centos8的管理网卡新命令改变成了`nmcli`。<h3 id="查看网卡名称"><a href="#查看网卡名称" class="headerlink" title="查看网卡名称"></a>查看网卡名称</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ip a</span><br><span class="line">ip addr</span><br><span class="line">ifconfig</span><br></pre></td></tr></table></figure><h3 id="nmcli命令大全"><a href="#nmcli命令大全" class="headerlink" title="nmcli命令大全"></a>nmcli命令大全</h3><blockquote><p>使用简化命令，connection 和 c 都可以执行</p></blockquote><ul><li>显示运行状态和网卡配置信息</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmcli</span><br></pre></td></tr></table></figure><ul><li>重启网卡</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmcli c reload</span><br></pre></td></tr></table></figure><ul><li>开启网卡</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmcli c up ens160</span><br></pre></td></tr></table></figure><ul><li>关闭网卡</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmcli c down ens160</span><br></pre></td></tr></table></figure><ul><li>查看网卡状态</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmcli device status</span><br></pre></td></tr></table></figure><ul><li>查看所有网卡详细信息</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmcli device show</span><br></pre></td></tr></table></figure><ul><li>查看ens160网卡详细信息</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmcli device show ens160</span><br></pre></td></tr></table></figure><ul><li>添加新网卡</li></ul><p>创建一个动态获取IP的连接，con-name是指创建连接的名称，ifname是指网络接口</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmcli c add type eth con-name ens160 ifname ens66</span><br></pre></td></tr></table></figure><ul><li>设置网卡自启动</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmcli c modify ens160 connection.autoconnect yes</span><br></pre></td></tr></table></figure><ul><li>删除连接网卡ens160</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmcli c delete ens160</span><br></pre></td></tr></table></figure><ul><li>添加&#x2F;删除一个IP地址和网关</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nmcli c modify ens160 +ipv4.address 192.168.0.3/24  #添加ip</span><br><span class="line">nmcli c modify ens160 -ipv4.address 192.168.0.3/24  #删除ip</span><br><span class="line">nmcli c modify ens160 ipv4.gateway 192.168.0.1  #设置网关</span><br></pre></td></tr></table></figure><ul><li>设置DNS</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nmcli c modify ens160 ipv4.dns 8.8.8.8  #添加DNS</span><br><span class="line">nmcli c modify ens160 -ipv4.dns 8.8.8.8  #删除DNS</span><br></pre></td></tr></table></figure><ul><li>设置IP获取方式</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nmcli connection modify ens160 ipv4.method manual  #手动设置</span><br><span class="line">nmcli connection modify ens160 ipv4.method auto  #DHCP获取</span><br></pre></td></tr></table></figure><h3 id="生效修改配置"><a href="#生效修改配置" class="headerlink" title="生效修改配置"></a>生效修改配置</h3><ul><li>重新加载网卡配置文件，每一次修改文件都建议执行。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmcli connection reload</span><br></pre></td></tr></table></figure><ul><li>立即生效网卡配置，不用重启系统。推荐使用第一个，怎么简单怎么来。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nmcli c up ens160</span><br><span class="line">nmcli device connect ens160</span><br><span class="line">nmcli device reapply ens160</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 建站知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CentOS </tag>
            
            <tag> Linux </tag>
            
            <tag> Rocky </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阿里云org续费折腾记录</title>
      <link href="/posts/9a7a6cf0.html"/>
      <url>/posts/9a7a6cf0.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->![阿里云][1]<p>最早的时候是在hostloc看见这个公告，刚刚想起我也有一个org域名托管在阿里云上。</p><p>阿里云官方公告：<a href="https://help.aliyun.com/noticelist/articleid/1060864985.html">点击进入查看</a></p><p>我尝试，点续费也续费不了</p><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20210711161518.png" alt="阿里云"></p><blockquote><p>相关的域名是：<br>.org&#x2F;.name&#x2F;.win&#x2F;.bid&#x2F;.date&#x2F;.party&#x2F;.trade&#x2F;.science&#x2F;.vc&#x2F;.loan&#x2F;.help&#x2F;.gift&#x2F;.lol&#x2F;.photo&#x2F;.men&#x2F;.mom&#x2F;.click&#x2F;.software&#x2F;.pics&#x2F;.pw&#x2F;.lawyer&#x2F;.engineer&#x2F;.rocks&#x2F;.game&#x2F;.bar&#x2F;.so&#x2F;.me&#x2F;.hk&#x2F;.tel<br>具体的会给您发送通知邮件，以您收到邮件的信息为准</p></blockquote><p>来自客服的原话，意思就是如果托管在阿里云上的这些后缀的域名如果不在限定时间内迁出，阿里云将会把你的域名迁移到阿里云国际版上，到时候发邮件让你认领。</p><p>经过和阿里云交谈，客服也给到原话如果你的域名有备案那就可以和提交工单申请，让阿里云给你的域名添加白名单，你就可以在阿里云国内继续续费域名。</p><p>我通过工单申请后，阿里云也发邮件通知可以正常续费org域名了。</p>]]></content>
      
      
      <categories>
          
          <category> 钧言钧语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 域名 </tag>
            
            <tag> 互联网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS 图片添加高斯模糊渐变特效</title>
      <link href="/posts/be64ebe4.html"/>
      <url>/posts/be64ebe4.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->看见一个挺不错的特效。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">@-webkit-keyframes blur &#123;</span><br><span class="line">    0% &#123; -webkit-filter: blur(10px); /* Chrome, Opera */ -moz-filter: blur(10px); -ms-filter: blur(10px); filter: blur(10px); &#125;</span><br><span class="line">    50% &#123; -webkit-filter: blur(5px); -moz-filter: blur(5px); -ms-filter: blur(5px); filter: blur(5px); &#125;</span><br><span class="line">    100% &#123; -webkit-filter: blur(0px); -moz-filter: blur(0px); -ms-filter: blur(0px); filter: blur(0px); &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.div img &#123;</span><br><span class="line">border-radius: 4px; /*圆角*/</span><br><span class="line">box-shadow: 10px 7px 13px #888885; /*立体感 阴影*/ </span><br><span class="line">-webkit-animation-name: blur; /*动画名称*/ </span><br><span class="line">-webkit-animation-duration: 3s; /*动画持续时间*/ </span><br><span class="line">-webkit-animation-iteration-count: 1; /*动画次数*/ </span><br><span class="line">-webkit-animation-delay: 0s; /*延迟时间*/</span><br><span class="line">&#125;</span><br><span class="line">.div img:hover  &#123;</span><br><span class="line">-webkit-filter: grayscale(100%); /*鼠标经过变黑白*/</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>白嫖大佬的文章：<a href="https://www.abcio.cn/F/517.html">清墨的橙</a></p>]]></content>
      
      
      <categories>
          
          <category> 资源分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初试frp内网穿透</title>
      <link href="/posts/e84f2bd.html"/>
      <url>/posts/e84f2bd.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->简单记录一下frp的部署和使用方法，第一次尝试部署使用<p>用途：安卓 <code>Linux Deploy</code> 安装 <code>CentOS</code> 搭建学习环境</p><p>记得很多年之前使用花生壳、3322动态域名这一类服务，到后来的路由器DDNS，倒是挺怀念上学的时候去网吧倒腾这些。</p><h3 id="frp简介"><a href="#frp简介" class="headerlink" title="frp简介"></a>frp简介</h3><blockquote><p>frp 是一个专注于内网穿透的高性能的反向代理应用，支持 TCP、UDP、HTTP、HTTPS 等多种协议。可以将内网服务以安全、便捷的方式通过具有公网 IP 节点的中转暴露到公网。</p></blockquote><p>frp开源地址：<a href="https://github.com/fatedier/frp">https://github.com/fatedier/frp</a><br>官方文档：<a href="https://gofrp.org/">https://gofrp.org</a></p><h3 id="部署frp服务端"><a href="#部署frp服务端" class="headerlink" title="部署frp服务端"></a>部署frp服务端</h3><p>frp分为服务端和客户端，frp服务端、frp客户端。frp服务端是部署在公网机器上，frp客户端是部署在需要内网穿透的机器上。这个要区分好！！！</p><p>在一台有公网IP的机器centos部署frp，这里使用线路是清凉云</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 安装screen</span><br><span class="line">yum install screen</span><br><span class="line"># 创建frp守护</span><br><span class="line">screen -S frp</span><br><span class="line"># 部署frp</span><br><span class="line">cd</span><br><span class="line">wget https://github.com/fatedier/frp/releases/download/v0.37.0/frp_0.37.0_linux_arm64.tar.gz</span><br><span class="line">tar -xzvf frp_0.37.0_linux_arm64.tar.gz</span><br><span class="line">mv frp_0.37.0_linux_arm64 frp</span><br><span class="line">cd frp</span><br></pre></td></tr></table></figure><p>编辑服务端配置文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim frps.ini</span><br></pre></td></tr></table></figure><p>写入自己的修改文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line"># 通信端口</span><br><span class="line">bind_port = 7000</span><br><span class="line"></span><br><span class="line"># 后台管理端口</span><br><span class="line">dashboard_port = 7500</span><br><span class="line"></span><br><span class="line"># 身份验证令牌</span><br><span class="line">token = 12345678</span><br><span class="line"></span><br><span class="line"># 后台账号/密码</span><br><span class="line">dashboard_user = admin</span><br><span class="line">dashboard_pwd = admin</span><br><span class="line"></span><br><span class="line"># HTTP/HTTPS</span><br><span class="line">vhost_http_port = 10080</span><br><span class="line">vhost_https_port = 10443</span><br></pre></td></tr></table></figure><p>启动服务端</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 赋予frp文件夹权限</span><br><span class="line">chmod +x /root/frp</span><br><span class="line"># 启动服务</span><br><span class="line">./frps -c ./frps.ini</span><br><span class="line"># 后台运行</span><br><span class="line">./frps -c ./frps.ini &amp;</span><br></pre></td></tr></table></figure><p>启动后会出现回显</p><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20210626215323.png" alt="frp"></p><h3 id="部署客户端"><a href="#部署客户端" class="headerlink" title="部署客户端"></a>部署客户端</h3>]]></content>
      
      
      <categories>
          
          <category> 钧言钧语 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Transmission 禁用IPV4外网访问</title>
      <link href="/posts/b0ee7ee8.html"/>
      <url>/posts/b0ee7ee8.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->最近在挂P站的时候，意外在pt站个人详情发现来了ipv4的连接地址，一般来有ipv6可以不再使用ipv4进行tracker通讯。为了减少公网IP泄露的风险，Transmission设置IP黑名单进行过滤掉ipv4的地址，只允许ipv6下载。<p>进入transmission目录查找<code>settings.json</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@nas:～# find / -name settings.json</span><br><span class="line">/opt/etc/transmission/settings.json</span><br></pre></td></tr></table></figure><p>修改配置文件<code>settings.json</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /opt/etc/transmission/settings.json</span><br></pre></td></tr></table></figure><p>修改<code>&quot;blocklist-enabled&quot;: false,</code> 为 <code>&quot;blocklist-enabled&quot;: true,</code> 开启黑名单功能</p><p>同样在transmission文件夹找到 <code>blocklists</code> 文件夹，这个文件是存放黑名单配置文件，文件夹中有<code>blocklist.bin</code> 也可以编辑这个，也可以重新创建一个</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/etc/transmission/blocklists</span><br><span class="line"># 创建一个ip.bin</span><br><span class="line">vim ip.bin</span><br></pre></td></tr></table></figure><p>填入以下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Ipv4:0.0.0.0-255.255.255.255</span><br></pre></td></tr></table></figure><p>保存文件。</p><p>重新启动Transmission，在WEB管理查看是否激活黑名单列表。</p><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20210625203007.png" alt="transmission"></p><p>查看种子的连接用户，是否还存在ipv4连接</p><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20210625205848.png" alt="transmission"></p>]]></content>
      
      
      <categories>
          
          <category> 资源分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Transmission </tag>
            
            <tag> IPv6 </tag>
            
            <tag> IPv4 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux安装BT/PT下载工具-Transmission</title>
      <link href="/posts/ccc76ca9.html"/>
      <url>/posts/ccc76ca9.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->最近盆友向我推荐了pt开放注册，赶紧注册了一个账号，这也是第一次接触PT站，为了账号不被封掉,需要挂机做种来维持。刚刚手上有个Linux的瘦身机，就拿它来安装`Transmission`来进行挂种。<h2 id="Transmission介绍"><a href="#Transmission介绍" class="headerlink" title="Transmission介绍"></a>Transmission介绍</h2><blockquote><p>Transmission是一种BitTorrent客户端，特点是一个跨平台的后端和其上的简洁的用户界面。Transmission以MIT许可证和GNU通用公共许可证双许可证授权，因此是一款自由软件。支持包括Linux、Mac OS X等多种操作系统（也有爱好者制作的windows安装包），以及Synology、威联通等多种NAS设备。支持GTK+、命令行、Web等多种界面。</p></blockquote><p>相对于Aria2等下载工具，主要是兼容架构广、开源、无广告、硬件资源消耗极低、界面简洁，支持BT种子&#x2F;PT种子和磁力链接、远程控制、WEB界面管理等，即是客户端也可以发布资源。</p><h3 id="安装Transmission"><a href="#安装Transmission" class="headerlink" title="安装Transmission"></a>安装Transmission</h3><p>使用硬件&#x2F;系统：树莓派、Debian、1T硬盘</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># CentOS/RedHat</span><br><span class="line"># 安装EPEL扩展库</span><br><span class="line">yum -y install epel-release</span><br><span class="line"># 更新系统</span><br><span class="line">yum -y update</span><br><span class="line"># 安装transmission</span><br><span class="line">yum install transmission-daemon</span><br><span class="line"></span><br><span class="line"># Debian/ubuntu</span><br><span class="line">sudo apt-get install transmission-daemon</span><br></pre></td></tr></table></figure><p>安装时候过程会附带Transmission-cli安装上，安装完毕后，多了一些命令行工具</p><p><code>transmission-cli</code>：独立的命令行客户端。<br><code>transmission-create</code>：用来建立.torrent种子文件的命令行工具。<br><code>transmission-daemon</code>：后台守护程序。<br><code>transmission-edit</code>：用来修改.torrent种子文件的announce URL。<br><code>transmission-remote</code>：控制daemon的程序。<br><code>transmission-show</code>：查看.torrent文件的信息。</p><h3 id="配置transmission"><a href="#配置transmission" class="headerlink" title="配置transmission"></a>配置transmission</h3><p>安装完成后，在SSH输入 <code>service transmission-daemon start</code> 即可启动Transmission。使用浏览器打开WEB管理(<code>http://IP地址:9091</code>)会发现提示“403:Forbidden”。这时候会生成json配置文件，这个时候需要关闭Transmission进程修改配置json文件。<em>PS</em>：如果开启Transmission服务修改配置文件再重启服务，配置会恢复到之前重启的内容。</p><p>常用的检查命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo service transmission-daemon start</span><br><span class="line">sudo service transmission-daemon stop</span><br><span class="line">sudo service transmission-daemon status</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 停止服务</span><br><span class="line">systemctl stop transmission-daemon</span><br><span class="line"># 编辑文件</span><br><span class="line">vim /var/lib/transmission-daemon/info/settings.json</span><br></pre></td></tr></table></figure><p>配置文件的参数有很多，可以按照自己需求来修改。以下是我一些配置，后期大部分选项都可以在WEB管理上进行DIY定制。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># 改成下载目录的绝对路径</span><br><span class="line">&quot;download-dir&quot;:&quot;/HDD/nas1/pt&quot;,</span><br><span class="line"># 是否开启DHT来发现节点</span><br><span class="line">&quot;dht-enabled&quot;: false,</span><br><span class="line"># 远程RPC控制验证 </span><br><span class="line">&quot;rpc-authentication-required&quot;: true,</span><br><span class="line"># 启用RPC密码验证</span><br><span class="line">&quot;rpc-enabled&quot;: true,</span><br><span class="line">#允许任何IP通过RPC协议访问</span><br><span class="line">“rpc-bind-address”: “0.0.0.0”,</span><br><span class="line"># WEB管理密码</span><br><span class="line">&quot;rpc-password&quot;: &quot;管理密码&quot;,</span><br><span class="line"># WEB管理账号</span><br><span class="line">&quot;rpc-username&quot;: &quot;管理用户名&quot;,</span><br><span class="line"># 启用IP认证模式，开启后只能白名单IP登录</span><br><span class="line">&quot;rpc-whitelist-enabled&quot;: false,</span><br><span class="line"># 网页GUI的端口号，可自行修改，需要防火墙开放端口</span><br><span class="line">&quot;rpc-port&quot;:  9091,</span><br></pre></td></tr></table></figure><p>保存配置文件后，开启Transmission</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">service transmission-daemon start</span><br><span class="line">iptables -I INPUT -p tcp --dport 9091 -j ACCEPT</span><br></pre></td></tr></table></figure><p>在端口开放后，在浏览器打开 <code>http://IP地址:9091</code> 输入账号密码即可。</p><h2 id="Transmission-WEB客户端美化"><a href="#Transmission-WEB客户端美化" class="headerlink" title="Transmission WEB客户端美化"></a>Transmission WEB客户端美化</h2><p>这里使用transmission-web-control开源的工具来美化WEB面板，且管理功能更加犀利一点</p><p>开源地址：<a href="https://github.com/ronggang/transmission-web-control">transmission-web-control</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/ronggang/transmission-web-control/raw/master/release/install-tr-control.sh</span><br><span class="line">bash install-tr-control.sh</span><br></pre></td></tr></table></figure><p>安装完成后，清理浏览器缓存，重新进入 <code>IP:9091</code> 即可进入一个强大而美观的Transmission的WEB客户端。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 下载 </tag>
            
            <tag> Transmission </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Typecho支持webp图片格式解析</title>
      <link href="/posts/64a8cfbb.html"/>
      <url>/posts/64a8cfbb.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->webp是谷歌提供的有损压缩与无损压缩的图片格式，能大幅度降低图片压缩比例同时不丢失图片的清晰度。至于兼容性，主流的浏览器基本都支持。typecho目前还不支持webp的图片格式，如果上传系统会认为是文件格式而不是一张图片，插入文章最终会呈现出链接的形式。<p>目前可以通过修改代码的格式，添加对图片的处理。</p><ul><li>在<code>var/Widget/Themes/List.php</code>的70行左右修改，添加webp图片格式</li></ul><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20210608221138.png" alt="webp"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">return preg_match(&quot;/screenshot\.(jpg|png|gif|bmp|jpeg|webp)$/i&quot;, $path);</span><br></pre></td></tr></table></figure><ul><li>在<code>var/Widget/Abstract/Contents.php</code>的686行左右，添加webp图片格式</li></ul><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20210608221454.png" alt="webp"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$value[&#x27;attachment&#x27;]-&gt;isImage = in_array($content[&#x27;type&#x27;], array(&#x27;jpg&#x27;, &#x27;jpeg&#x27;, &#x27;gif&#x27;, &#x27;png&#x27;, &#x27;tiff&#x27;, &#x27;bmp&#x27;, &#x27;webp&#x27;));</span><br></pre></td></tr></table></figure><ul><li>在typecho后台 - 基本设置 - 允许上传都文件类型 - 添加“webp”格式</li></ul><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20210608221950.png" alt="webp"></p>]]></content>
      
      
      <categories>
          
          <category> Typecho </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typecho </tag>
            
            <tag> webp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Proxmox ve 设置国内镜像加速源</title>
      <link href="/posts/5ce8c180.html"/>
      <url>/posts/5ce8c180.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->PVE安装完后，在尝试下载镜像的时候，下载的速度实在不能忍受，虽然路由器已经连接55R还是很卡。在网上搜索一下，可以进行换源。<p>换成国内源后下载立马起飞，再也不用忍受蜗牛的速度。汇集一下网络资源记录一下。</p><h4 id="proxmox-ve国内源"><a href="#proxmox-ve国内源" class="headerlink" title="proxmox ve国内源"></a>proxmox ve国内源</h4><p>目前在互联网搜索到到基本上就是这两个源，中科大、proxmox中文社区，这里推荐使用中科大的源。</p><p>中科大镜像源：<a href="http://mirrors.ustc.edu.cn/">http://mirrors.ustc.edu.cn</a><br>清华大学镜像源：<a href="https://mirrors4.tuna.tsinghua.edu.cn/proxmox/">https://mirrors4.tuna.tsinghua.edu.cn/proxmox/</a><br>proxmox中文社区：<a href="http://download.proxmox.wiki/">http://download.proxmox.wiki</a></p><h2 id="proxmox社区源"><a href="#proxmox社区源" class="headerlink" title="proxmox社区源"></a>proxmox社区源</h2><h5 id="中科大proxmox源"><a href="#中科大proxmox源" class="headerlink" title="中科大proxmox源"></a>中科大proxmox源</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">删除企业源</span></span><br><span class="line">rm -rf /etc/apt/sources.list.d/pve-enterprise.list</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">下载秘钥</span></span><br><span class="line">wget http://mirrors.ustc.edu.cn/proxmox/debian/proxmox-ve-release-6.x.gpg -O /etc/apt/trusted.gpg.d/proxmox-ve-release-6.x.gpg</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">添加社区源</span></span><br><span class="line">echo &quot;deb http://mirrors.ustc.edu.cn/proxmox/debian/pve stretch pve-no-subscription&quot; &gt;/etc/apt/sources.list.d/pve-install-repo.list</span><br></pre></td></tr></table></figure><h5 id="proxmox中文社区源"><a href="#proxmox中文社区源" class="headerlink" title="proxmox中文社区源"></a>proxmox中文社区源</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">删除企业源</span></span><br><span class="line">rm -rf /etc/apt/sources.list.d/pve-enterprise.list</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">下载秘钥</span></span><br><span class="line">wget http://download.proxmox.com/debian/proxmox-ve-release-5.x.gpg -O /etc/apt/trusted.gpg.d/proxmox-ve-release-5.x.gpg</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">添加社区源</span></span><br><span class="line">echo &quot;deb http://download.proxmox.wiki/debian/pve buster pve-no-subscription&quot; &gt;/etc/apt/sources.list.d/pve-install-repo.list</span><br></pre></td></tr></table></figure><h2 id="更换华为云debian源"><a href="#更换华为云debian源" class="headerlink" title="更换华为云debian源"></a>更换华为云debian源</h2><p>这里可以使用华为云、阿里云、163等国内Debian源，可以根据自己的需求去选择。</p><p>连接SSH，使用命令 编辑 <code>/etc/apt/sources.list</code> 文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt install vim</span><br><span class="line">vim /etc/apt/sources.list</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"># 注释文件全部内容</span><br><span class="line">#deb http://ftp.debian.org/debian buster main contrib</span><br><span class="line">#deb http://ftp.debian.org/debian buster-updates main contrib</span><br><span class="line">#security updates</span><br><span class="line">#deb http://security.debian.org buster/updates main contrib</span><br><span class="line"># </span><br><span class="line"># 追加以下内容</span><br><span class="line"># user custom Huawei source</span><br><span class="line">deb https://repo.huaweicloud.com/debian/ buster main non-free contrib</span><br><span class="line">deb https://repo.huaweicloud.com/debian/ buster-updates main non-free contrib</span><br><span class="line">deb https://repo.huaweicloud.com/debian/ buster-backports main non-free contrib</span><br><span class="line">deb https://repo.huaweicloud.com/debian-security/ buster/updates main non-free contrib</span><br><span class="line"></span><br><span class="line">deb-src https://repo.huaweicloud.com//debian/ buster main non-free contrib</span><br><span class="line">deb-src https://repo.huaweicloud.com/debian/ buster-updates main non-free contrib</span><br><span class="line">deb-src https://repo.huaweicloud.com/debian/ buster-backports main non-free contrib</span><br><span class="line">deb-src https://repo.huaweicloud.com/debian-security/ buster/updates main non-free contrib</span><br><span class="line"></span><br><span class="line"># proxmox source</span><br><span class="line">deb https://mirrors.ustc.edu.cn/proxmox/debian/pve buster pve-no-subscription</span><br></pre></td></tr></table></figure><p>保存并退出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:wq</span><br></pre></td></tr></table></figure><p>更新软件包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt update</span><br></pre></td></tr></table></figure><h2 id="LXC模板国内加速"><a href="#LXC模板国内加速" class="headerlink" title="LXC模板国内加速"></a>LXC模板国内加速</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp /usr/share/perl5/PVE/APLInfo.pm /usr/share/perl5/PVE/APLInfo.pm_back</span><br><span class="line">sed -i &#x27;s|http://download.proxmox.com|https://mirrors.tuna.tsinghua.edu.cn/proxmox|g&#x27; /usr/share/perl5/PVE/APLInfo.pm</span><br></pre></td></tr></table></figure><h2 id="ceph源更换"><a href="#ceph源更换" class="headerlink" title="ceph源更换"></a>ceph源更换</h2><p>这个功能对我暂时还没有什么用，组不起集群环境</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim  /etc/apt/sources.list.d/ceph.list</span><br></pre></td></tr></table></figure><p>改成国内ceph源</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#deb http://download.proxmox.com/debian/ceph-nautilus buster main</span><br><span class="line">deb http://mirrors.ustc.edu.cn/proxmox/debian/ceph-nautilus buster main</span><br></pre></td></tr></table></figure><h2 id="更新PVE"><a href="#更新PVE" class="headerlink" title="更新PVE"></a>更新PVE</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt update -y</span><br><span class="line"># 升级pve，则执行下面的命令</span><br><span class="line">apt update&amp;&amp;apt dist-upgrade -y</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 虚拟化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Proxmox </tag>
            
            <tag> 镜像加速 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开源虚拟化环境KVM/LXC搭建 ：Proxmox VE</title>
      <link href="/posts/8eda5b16.html"/>
      <url>/posts/8eda5b16.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->## Proxmox VE简介<p>Proxmox VE(Proxmox Virtual Environment)是一款套开源的虚拟化管理软件，用户可通过网页WEB的方式来管理服务器上使用<code>kvm</code>以及<code>lxc</code>技术运行的虚拟机。同时提供了一些先进功能的支持，如集群、HA等。</p><p>PVE是基于成熟的Debian构建。轻量、功能丰富和不挑硬件是PVE相比ESXi、Hyper-V最大的优势，只后面配置虚拟机的过程中需要使用一些命令行，但是坑比EXSi少很多，总体过程轻松愉快，家用环境强烈推荐PVE。</p><h2 id="安装需求"><a href="#安装需求" class="headerlink" title="安装需求"></a>安装需求</h2><p>PVE硬件最低64位CPU，内存1G以上，附加分配给虚拟机所需的RAM。需要BIOS开启虚拟化技术。</p><ul><li>CPU：64bit</li><li>lntel VT-D&#x2F;lntel VT-X&#x2F;AMD-V</li><li>RAM：1GB</li></ul><h2 id="安装前提"><a href="#安装前提" class="headerlink" title="安装前提"></a>安装前提</h2><p>官方网站下载：<a href="https://www.proxmox.com/en/downloads%EF%BC%8C%E9%80%89%E6%8B%A9ISO%E7%A4%BE%E5%8C%BA%E7%89%88%E6%9C%AC%E8%BF%9B%E8%A1%8C%E4%B8%8B%E8%BD%BD%E3%80%82">https://www.proxmox.com/en/downloads，选择ISO社区版本进行下载。</a></p><p>使用<code>UltralISO</code>打开刚刚下载ISO镜像，<code>启动</code>》<code>写入硬盘镜像</code>》<code>选择需要写入U盘</code>》<code>选择写入方式“RAW”</code>》<code>写入</code></p><p>也可以使用Debian镜像添加镜像源进行安装。</p><h2 id="安装PVE"><a href="#安装PVE" class="headerlink" title="安装PVE"></a>安装PVE</h2><p>插入PVE安装U盘，打开电脑设置U盘引导启动，选择install Proxmox VE，进行安装</p><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20210520230420.png" alt="Proxmox"></p><p>单击“l agree”同意协议，进入下一步。</p><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20210520230623.png" alt="proxmox"></p><p>选择要安装的硬盘或者U盘，单击“Options”可以选择磁盘格式或者安装到RAID磁盘阵列。单击“NexT”继续</p><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20210520231450.png" alt="proxmox"></p><p>输入国家选择时区，这里国家需要在键盘输入“China”，单击“NexT”继续</p><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20210520231936.png" alt="proxmox"></p><p>输入ROOT密码和电子邮件，单击“NexT”继续</p><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20210520232229.png" alt="proxmox"></p><p>选择连接的网卡，输入PVE节点的服务器名、IP地址、网关和DNS地址，如果连接到网络，网络信息会自动获取。单击“NexT”继续</p><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20210520234001.png" alt="proxmox"></p><p>确认安装信息，点击“install”确定，如果信息不对点“Previous”返回修改再执行安装。</p><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20210520233209.png" alt="proxmox"></p><p>确认安装信息，点击“install”安装，如果信息不对点“Previous”返回修改再执行安装。安装会格式化安装的磁盘，注意要确保磁盘没有重要数据。</p><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20210520234244.png" alt="proxmox"></p><p>安装很快，大概需要几分钟，如果是SSD安装更快。安装完成后点击“Reboot”，拔掉安装U盘并进入Bios更改启动项。</p><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20210520235449.png" alt="proxmox"></p><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20210520235521.png" alt="proxmox"></p><p>使用浏览器访问PVE管理地址，地址栏输入<code>IP:8006</code>，输入root用户名和密码，单击“登录”</p><p>语言有中文可选，PVE汉化支持很好。</p><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20210521000019.png" alt="proxmox"></p><p>这样就完成安装，可以进行虚拟机的配置和安装</p>]]></content>
      
      
      <categories>
          
          <category> 虚拟化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 虚拟化 </tag>
            
            <tag> Proxmox </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用腾讯云CDN反代Gravatar镜像实现自建头像加速</title>
      <link href="/posts/c12fdd12.html"/>
      <url>/posts/c12fdd12.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->很多博客在安装来wp、typecho等博客程序，由于Gravarar头像在国内访问很慢，网上很多教程都是利用Nginx进行反代，其实利用七牛、阿里、腾讯CDN也可以反代。<h3 id="常见的Gravatar加速"><a href="#常见的Gravatar加速" class="headerlink" title="常见的Gravatar加速"></a>常见的Gravatar加速</h3><p>常见的国内的Gravatar这些加速，可以大幅度降低访问延迟。</p><p>Gravatar的secure源：<a href="https://secure.gravatar.com/avatar/">https://secure.gravatar.com/avatar/</a><br>Gravatar的cn源：<a href="https://cn.gravatar.com/avatar/">https://cn.gravatar.com/avatar/</a><br>V2EX：<a href="https://cdn.v2ex.com/gravatar/">https://cdn.v2ex.com/gravatar/</a><br>极客族：<a href="https://sdn.geekzu.org/avatar/">https://sdn.geekzu.org/avatar/</a><br>loli：<a href="https://gravatar.loli.net/avatar/">https://gravatar.loli.net/avatar/</a></p><h3 id="利用腾讯云CDN反代"><a href="#利用腾讯云CDN反代" class="headerlink" title="利用腾讯云CDN反代"></a>利用腾讯云CDN反代</h3><p>这里使用腾讯云为例，理论使用上适用于各大国内CDN服务商。但是腾讯CDN有免费的流量，不用白不用</p><p>这里主要注意是，回源选择协议跟随，回源HOST也填写当前域名。</p><p><img src="https://img.jinjun.top/images/usr/uploads/2021/03/QQ20210515-203757.png" alt="腾讯云CDN"></p><p>这里选择缓存全站，因为缓存图片 不需要考虑其他的动态内容，这里也可以设置一下浏览器端缓存规则，可以有效的降低回源率。</p><p><img src="https://img.jinjun.top/images/usr/uploads/2021/03/QQ20210515-210412.png" alt="腾讯云CDN"></p><p>打开分片回源设置(Range)，301&#x2F;302跟随</p><p>主要是为了不让强制转跳到Gravatar自己的CDN，导致自建CDN无效</p><p><img src="https://img.jinjun.top/images/usr/uploads/2021/03/QQ20210515-211028.png" alt="腾讯云CDN"></p><p>这里设置就差不多就可以使用了，可以按需开启<code>HTTPS配置</code>，<code>宽带封顶限制</code>，<code>防盗链（Referer）</code>，<code>IP黑白名单</code>，<code>IP访问限频</code>这些安全设置。</p><p>如果是自己使用，记得加白名单。不然被盗刷就GG了</p>]]></content>
      
      
      <categories>
          
          <category> 建站知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typecho </tag>
            
            <tag> Gravtar </tag>
            
            <tag> 腾讯云 </tag>
            
            <tag> 防盗链 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Yum安装MariaDB</title>
      <link href="/posts/5de58624.html"/>
      <url>/posts/5de58624.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->CenttOS7.9安装MariaDB数据库，从CentOS7就已经使用MariaDB来替代MySQL数据库，使用基本和MySQL一致，主要由开源社区维护。<h2 id="安装与卸载"><a href="#安装与卸载" class="headerlink" title="安装与卸载"></a>安装与卸载</h2><p>通过yum命令安装就可以了。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install mariadb mariadb-server mariadb-libs</span><br></pre></td></tr></table></figure><p>卸载mariadb</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum remove mariadb mariadb-server mariadb-libs</span><br></pre></td></tr></table></figure><h2 id="启动、停止、查看状态"><a href="#启动、停止、查看状态" class="headerlink" title="启动、停止、查看状态"></a>启动、停止、查看状态</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 启动服务</span><br><span class="line">systemctl start mariadb</span><br><span class="line"># 关闭服务</span><br><span class="line">systemctl stop mariadb</span><br><span class="line"># 设置开机自启</span><br><span class="line">systemctl enable mariadb</span><br><span class="line"># 查看状态</span><br><span class="line">ststemctl status mariadb</span><br></pre></td></tr></table></figure><h2 id="初始化MariaDB"><a href="#初始化MariaDB" class="headerlink" title="初始化MariaDB"></a>初始化MariaDB</h2><p>进行数据库首次配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql_secure_installation</span><br></pre></td></tr></table></figure><p>设置root密码和参数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">NOTE: RUNNING ALL PARTS OF THIS SCRIPT IS RECOMMENDED FOR ALL MariaDB</span><br><span class="line">      SERVERS IN PRODUCTION USE!  PLEASE READ EACH STEP CAREFULLY!</span><br><span class="line"></span><br><span class="line">In order to log into MariaDB to secure it, we&#x27;ll need the current</span><br><span class="line">password for the root user.  If you&#x27;ve just installed MariaDB, and</span><br><span class="line">you haven&#x27;t set the root password yet, the password will be blank,</span><br><span class="line">so you should just press enter here.</span><br><span class="line"># 输入数据库root用户密码，第一次进入还没有设置密码，直接回车</span><br><span class="line">Enter current password for root (enter for none): </span><br><span class="line">OK, successfully used password, moving on...</span><br><span class="line"></span><br><span class="line">Setting the root password ensures that nobody can log into the MariaDB</span><br><span class="line">root user without the proper authorisation.</span><br><span class="line"></span><br><span class="line">You already have a root password set, so you can safely answer &#x27;n&#x27;.</span><br><span class="line"># 修改root密码，输入y</span><br><span class="line">Change the root password? [Y/n] y</span><br><span class="line"># 输入新密码</span><br><span class="line">New password:</span><br><span class="line"># 确认新密码 </span><br><span class="line">Re-enter new password: </span><br><span class="line">Password updated successfully!</span><br><span class="line">Reloading privilege tables..</span><br><span class="line"> ... Success!</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">By default, a MariaDB installation has an anonymous user, allowing anyone</span><br><span class="line">to log into MariaDB without having to have a user account created for</span><br><span class="line">them.  This is intended only for testing, and to make the installation</span><br><span class="line">go a bit smoother.  You should remove them before moving into a</span><br><span class="line">production environment.</span><br><span class="line"># 删除匿名用户，输入y</span><br><span class="line">Remove anonymous users? [Y/n] y</span><br><span class="line"> ... Success!</span><br><span class="line"></span><br><span class="line">Normally, root should only be allowed to connect from &#x27;localhost&#x27;.  This</span><br><span class="line">ensures that someone cannot guess at the root password from the network.</span><br><span class="line"># 拒绝root用户远程登录，输入y</span><br><span class="line">Disallow root login remotely? [Y/n] y</span><br><span class="line"> ... Success!</span><br><span class="line"></span><br><span class="line">By default, MariaDB comes with a database named &#x27;test&#x27; that anyone can</span><br><span class="line">access.  This is also intended only for testing, and should be removed</span><br><span class="line">before moving into a production environment.</span><br><span class="line"># 删除test数据库，输入y</span><br><span class="line">Remove test database and access to it? [Y/n] y</span><br><span class="line"> - Dropping test database...</span><br><span class="line"> ... Success!</span><br><span class="line"> - Removing privileges on test database...</span><br><span class="line"> ... Success!</span><br><span class="line"></span><br><span class="line">Reloading the privilege tables will ensure that all changes made so far</span><br><span class="line">will take effect immediately.</span><br><span class="line"># 刷新权限表，输入y</span><br><span class="line">Reload privilege tables now? [Y/n] y</span><br><span class="line"> ... Success!</span><br><span class="line"></span><br><span class="line">Cleaning up...</span><br><span class="line"></span><br><span class="line">All done!  If you&#x27;ve completed all of the above steps, your MariaDB</span><br><span class="line">installation should now be secure.</span><br><span class="line"></span><br><span class="line">Thanks for using MariaDB!</span><br></pre></td></tr></table></figure><h2 id="文件参数调优"><a href="#文件参数调优" class="headerlink" title="文件参数调优"></a>文件参数调优</h2><p>MariaDB的配置文件位于 <code>/etc/my.cnf</code></p><p>可能你在<code>/etc</code>中找不到<code>my. cnf</code>文件，可以查找一下是否存在<code>my-huge.cnf 、my-large.cnf 、my-medium.cnf、my-small.cnf</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp /usr/share/mysql/my-medium.cnf /etc/my.cnf</span><br></pre></td></tr></table></figure><p>下面是优化过配置，可以根据自己的需求自己去调试。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line"># 数据库存放目录</span><br><span class="line">datadir=/var/lib/mysql</span><br><span class="line">socket=/var/lib/mysql/mysql.sock</span><br><span class="line"># Disabling symbolic-links is recommended to prevent assorted security risks</span><br><span class="line">symbolic-links=0</span><br><span class="line"># Settings user and group are ignored when systemd is used.</span><br><span class="line"># If you need to run mysqld under a different user or group,</span><br><span class="line"># customize your systemd unit file for mariadb according to the</span><br><span class="line"># instructions in http://fedoraproject.org/wiki/Systemd</span><br><span class="line"></span><br><span class="line">#symbolic-links=0</span><br><span class="line"># 该项为禁止TCP/IP远程连接</span><br><span class="line">skip-external-locking</span><br><span class="line"># 设置索引块缓存大小</span><br><span class="line">key_buffer_size = 8M</span><br><span class="line"># 通信缓冲大小</span><br><span class="line">max_allowed_packet = 1M</span><br><span class="line"># table高速缓存数量</span><br><span class="line">table_open_cache = 4</span><br><span class="line"># 读查询操作能使用缓存大小</span><br><span class="line">sort_buffer_size = 64K</span><br><span class="line"># 顺序读写数据缓冲区使用内存</span><br><span class="line">read_buffer_size = 256K</span><br><span class="line"># 随机读取数据缓冲区使用内存</span><br><span class="line">read_rnd_buffer_size = 256K</span><br><span class="line"># 每个客户端连接时。用于维持连接缓冲</span><br><span class="line">net_buffer_length = 2K</span><br><span class="line"># 每个连接分配内存</span><br><span class="line">thread_stack = 240K</span><br><span class="line"># AIO异步IO，提升性能</span><br><span class="line">#innodb_use_native_aio = 0</span><br><span class="line"># InnoDB使用一个缓冲池来保存索引和原始数据, 这里你设置越大,你在存取表里面数据时所需要的磁盘I/O越少.</span><br><span class="line">innodb_buffer_pool_size=2M</span><br><span class="line"># 检测的表对象的最大数目</span><br><span class="line">performance_schema_max_table_instances=50</span><br><span class="line"># 控制表定义缓存的个数</span><br><span class="line">table_definition_cache=50</span><br><span class="line"># MariaDB允许的最大连接进程数</span><br><span class="line">max_connections=50</span><br><span class="line"># 限制用户最大连接数</span><br><span class="line">max_user_connections=35</span><br><span class="line"># 一个请求的最大连接时间</span><br><span class="line">wait_timeout=10</span><br><span class="line"># mysql关闭交互式连接前等待的秒数</span><br><span class="line">interactive_timeout=15</span><br><span class="line"># 慢查询阀值</span><br><span class="line">long_query_time=5</span><br><span class="line"># 主要用于收集数据库服务器性能参数</span><br><span class="line">performance_schema = off</span><br><span class="line"># Disabling symbolic-links is recommended to prevent assorted security risks</span><br><span class="line"># 符号链接数据库或表可以存储在my.cnf中指定datadir之外的分区或目录</span><br><span class="line">symbolic-links=0</span><br><span class="line"># 开启bin-log日志</span><br><span class="line">#log-bin=mysql-bin</span><br><span class="line"># Recommended in standard MySQL setup</span><br><span class="line"># mysql严格模式</span><br><span class="line">sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES</span><br><span class="line"># 新创建数据表默认引擎</span><br><span class="line">default_storage_engine = InnoDB</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[mysqld_safe]</span><br><span class="line">log-error=/var/log/mariadb/mariadb.log</span><br><span class="line">pid-file=/var/run/mariadb/mariadb.pid</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># include all files from the config directory</span><br><span class="line">#</span><br><span class="line">!includedir /etc/my.cnf.d</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 建站知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> mysql </tag>
            
            <tag> Mariadb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP环境安全配置php.ini</title>
      <link href="/posts/6585980f.html"/>
      <url>/posts/6585980f.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->在新编译PHP环境中，php.ini文件都没有完全设置了安全机制，需要自己对修改配置文件php.ini对安全产生威胁的一些函数或者没用模块进行禁用或者关闭。只有重视网络安全问题，设立有效的安全防御，才能更好保障用户的体验和服务的稳定性。<h3 id="软件版本"><a href="#软件版本" class="headerlink" title="软件版本"></a>软件版本</h3><p>PHP版本应该与官方的最新版本保持一致，最新版本修复了BUG，注意不建议使用beta版本。</p><p>推荐在PHP的官网下载：<a href="http://www.php.net/downloads.php">http://www.php.net/downloads.php</a></p><h3 id="启用PHP安全模式"><a href="#启用PHP安全模式" class="headerlink" title="启用PHP安全模式"></a>启用PHP安全模式</h3><p>PHP 环境提供的安全模式是一个非常重要的内嵌安全机制，PHP 安全模式能有效控制一些 PHP 环境中的函数（例如system()函数），对大部分的文件操作函数进行权限控制，同时不允许对某些关键文件进行修改（例如 &#x2F;etc&#x2F;passwd）。 <font style="color:#F00">PHP5.4以后的版本，安全模式已经被弃用，这里随笔记录一下</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">safe_mode = on</span><br></pre></td></tr></table></figure><h3 id="安全模式下执行程序主目录"><a href="#安全模式下执行程序主目录" class="headerlink" title="安全模式下执行程序主目录"></a>安全模式下执行程序主目录</h3><p>如果启用了安全模式后，想要执行某些程序的时候，可以指定需要执行程序的主目录，例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">safe_mode_exec_dir = /usr/bin</span><br></pre></td></tr></table></figure><p>一般情况下，如果不需要执行什么程序，建议您不要指定执行系统程序的目录。您可以指定一个目录，然后把需要执行的程序拷贝到这个目录即可，例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">safe_mode_exec_dir = /temp/cmd</span><br></pre></td></tr></table></figure><p>但是，更推荐您不要执行任何程序。这种情况下，只需要将执行目录指向网页目录即可：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">safe_mode_exec_dir = /usr/www</span><br></pre></td></tr></table></figure><p>注意：执行目录的路径以您实际操作系统目录路径为准。</p><h3 id="安全模式下包含文件"><a href="#安全模式下包含文件" class="headerlink" title="安全模式下包含文件"></a>安全模式下包含文件</h3><p>如果您需要在安全模式下包含某些公共文件，您只需要修改以下选项即可：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">safe_mode_include_dir = /usr/www/include/</span><br></pre></td></tr></table></figure><p>一般情况下，PHP 脚本中包含的文件都是在程序已经写好的，可以根据您的具体需要进行设置。</p><h3 id="控制-PHP-脚本能访问的目录"><a href="#控制-PHP-脚本能访问的目录" class="headerlink" title="控制 PHP 脚本能访问的目录"></a>控制 PHP 脚本能访问的目录</h3><p>使用open_basedir选项能够控制PHP脚本只能访问指定的目录，这样能够避免 PHP 脚本访问不应该访问的文件，一定程度下降低了phpshell的危害。一般情况下，可以设置为只能访问网站目录：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">open_basedir = /usr/www</span><br></pre></td></tr></table></figure><h3 id="禁用使用PHP危险函数"><a href="#禁用使用PHP危险函数" class="headerlink" title="禁用使用PHP危险函数"></a>禁用使用PHP危险函数</h3><p>如果您启用了安全模式，那么可以不需要设置函数禁止，但为了安全考虑。例如，您不希望执行包括system()等在内的执行命令的PHP函数，以及能够查看PHP信息的phpinfo()等函数，那么您可以通过以下设置禁止这些函数：</p><table><thead><tr><th align="center">函数名称</th><th>函数功能</th><th>危险级别</th></tr></thead><tbody><tr><td align="center">chgrp()</td><td>改变文件或目录所属的用户组</td><td>高</td></tr><tr><td align="center">chown()</td><td>改变文件或目录的所有者</td><td>高</td></tr><tr><td align="center">chroot()</td><td>可改变当前进程的工作根目录，仅当系统支持CLI模式时PHP才能工作，且该函数不适用于Windows系统</td><td>高</td></tr><tr><td align="center">dl()</td><td>在PHP运行过程当中（而非启动时）加载一个PHP外部模块</td><td>高</td></tr><tr><td align="center">exec()</td><td>允许执行一个外部程序（如UNIX Shell或CMD命令等）</td><td>高</td></tr><tr><td align="center">ini_alter()</td><td>时ini_set()函数的一个别名函数，功能与ini_set()相同</td><td>高</td></tr><tr><td align="center">ini_restore()</td><td>可用于将PHP环境配置参数恢复为初始值</td><td>高</td></tr><tr><td align="center">ini_set()</td><td>可用于修改、设置PHP环境配置参数</td><td>高</td></tr><tr><td align="center">passthru()</td><td>允许执行一个外部程序并回显输出，类似于exec()</td><td>高</td></tr><tr><td align="center">pfsockopen()</td><td>建立一个Internet或UNIX域的socket持久连接</td><td>高</td></tr><tr><td align="center">phpinfo()</td><td>输出PHP环境信息以及相关的模块、web环境等信息</td><td>高</td></tr><tr><td align="center">popen()</td><td>可通过popen()的参数传递一条命令，并对popen()所打开的文件进行执行</td><td>高</td></tr><tr><td align="center">proc_get_status()</td><td>获取使用proc_open()所打开进程的信息</td><td>高</td></tr><tr><td align="center">proc_open()</td><td>执行一个命令并打开文件指针用于读取以及写入</td><td>高</td></tr><tr><td align="center">putenv()</td><td>用于在PHP运行时改变系统字符集环境。在低于5.2.6版本的PHP中，可利用该函数。修改系统字符集环境后，利用sendmail指令发送特殊参数执行系统Shell命令</td><td>高</td></tr><tr><td align="center">shell_exec()</td><td>可通过Shell执行命令，并将执行结果作为字符串返回</td><td>高</td></tr><tr><td align="center">symlink()</td><td>对已有的target建立一个名为link的符号链接</td><td>高</td></tr><tr><td align="center">system()</td><td>允许执行一个外部程序并回显输出，类型于passthru()</td><td>高</td></tr><tr><td align="center">readlink()</td><td>返回符号连接指向的目标文件内容</td><td>中</td></tr><tr><td align="center">scandir()</td><td>列出指定路径中的文件和目录</td><td>中</td></tr><tr><td align="center">stream_socket_server()</td><td>建立一个Internet或UNIX服务器连接</td><td>中</td></tr><tr><td align="center">syslog()</td><td>可调用UNIX系统的系统层syslog()函数</td><td>中</td></tr></tbody></table><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">disable_functions = system,passthru,exec,shell_exec,popen,phpinfo,escapeshellarg,escapeshellcmd,proc_close,proc_open,dl</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">disable_functions = eval,passthru,exec,system,chroot,chgrp,chown,shell_exec,proc_open,proc_get_status,ini_alter,ini_restore,dl,pfsockopen,openlog,syslog,readlink,symlink,popepassthru,stream_socket_server,disk_total_space,disk_free_space,error_log,putenv,popen,ini_set,chmod,assert,pcntl_exec,phpfunc;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">disable_functions = pcntl_alarm,pcntl_fork,pcntl_waitpid,pcntl_wait,pcntl_wifexited,pcntl_wifstopped,pcntl_wifsignaled,pcntl_wexitstatus,pcntl_wtermsig,pcntl_wstopsig,pcntl_signal,pcntl_signal_dispatch,pcntl_get_last_error,pcntl_strerror,pcntl_sigprocmask,pcntl_sigwaitinfo,pcntl_sigtimedwait,pcntl_exec,pcntl_getpriority,pcntl_setpriority,eval,popen,passthru,exec,system,shell_exec,proc_open,proc_get_status,chroot,chgrp,chown,ini_alter,ini_restore,dl,pfsockopen,openlog,syslog,readlink,symlink,popepassthru,stream_socket_server,fsocket,chdir,eval,passthru,exec,system,chroot,chgrp,chown,shell_exec,proc_open,proc_get_status,ini_alter,ini_restore,dl,pfsockopen,openlog,syslog,readlink,symlink,popepassthru,stream_socket_server,disk_total_space,disk_free_space,error_log,putenv,popen,ini_set,chmod,assert,pcntl_exec,phpfunc;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">disable_functions = passthru,chroot,chgrp,chown,shell_exec,popen,ini_alter,ini_restore,dl,openlog,syslog,readlink,symlink,popepassthru,phpinfo,eval,pfsockopen,stream_socket_server,fsocket,fsockopen,system,exec,shell_exec,proc_open,proc_close, proc_get_status,checkdnsrr,getmxrr,getservbyname,getservbyport,popen,show_source,highlight_file,dl,socket_listen,socket_create,socket_bind,socket_accept,socket_connect,stream_socket_server, stream_socket_accept,stream_socket_client,ftp_connect,ftp_login,ftp_pasv,ftp_get,sys_getloadavg,disk_total_space,disk_free_space,posix_ctermid,posix_get_last_error,posix_getcwd,posix_getegid,posix_geteuid,posix_getgid,posix_getgrgid,posix_getgrnam,posix_getgroups,posix_getlogin,posix_getpgid,posix_getpgrp,posix_getpid,posix_getppid,posix_getpwnam,posix_getpwuid,posix_getrlimit,posix_getsid,posix_getuid,posix_isatty,posix_kill,posix_mkfifo,posix_setegid,posix_seteuid,posix_setgid,posix_setpgid,posix_setsid,posix_setuid,posix_strerror,posix_times,posix_ttyname,posix_uname</span><br></pre></td></tr></table></figure><p>如果您想要禁止对于任何文件和目录的操作，那么您可以关闭以下文件相关操作。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">disable_functions = chdir,chroot,dir,getcwd,opendir,readdir,scandir,fopen,unlink,delete,copy, mkdir,rmdir,rename,file,file_get_contents,fputs,fwrite,chgrp,chmod,chown</span><br></pre></td></tr></table></figure><p><strong>注意</strong>： 以上设置中只列举了部分比较常用的文件处理函数，您也可以将上面的执行命令函数和这些文件处理函数相结合，就能给抵制大部分的 phpshell 威胁。</p><h3 id="用户组安全"><a href="#用户组安全" class="headerlink" title="用户组安全"></a>用户组安全</h3><p>启用安全模式后，如果<code>safe_mode_gid</code>选项被关闭，PHP 脚本能够对文件进行访问，且相同用户组的用户也能够对该文件进行访问。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">safe_mode_gid = off</span><br></pre></td></tr></table></figure><h3 id="禁用运程执行代码"><a href="#禁用运程执行代码" class="headerlink" title="禁用运程执行代码"></a>禁用运程执行代码</h3><p>通过file_get_content或者fopen函数，可以从远程获取数据，如果使用不当，没有对返回数据进行过滤，此方法就会造成安全漏洞。要解决此问题，可以禁用allow_url_fopen配置项：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">allow_url_fopen=Off</span><br></pre></td></tr></table></figure><p>除了这个，还建议禁用allow_url_include配置下以提高系统的安全性:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">allow_url_include=Off</span><br></pre></td></tr></table></figure><h3 id="关闭PHP版本HTTP头信息泄露"><a href="#关闭PHP版本HTTP头信息泄露" class="headerlink" title="关闭PHP版本HTTP头信息泄露"></a>关闭PHP版本HTTP头信息泄露</h3><p>默认PHP在HTTP Response Header中会添加版本号声明（X-Powered-By)，为了防止获取服务器中PHP版本的信息，您可以禁止该信息在HTTP头部内容中泄露：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">expose_php = off</span><br></pre></td></tr></table></figure><p>这样设置之后，在执行telnet <domain> 80尝试连接您的服务器的时候，将无法看到 PHP 的版本信息。</p><h3 id="错误信息控制和错误日志"><a href="#错误信息控制和错误日志" class="headerlink" title="错误信息控制和错误日志"></a>错误信息控制和错误日志</h3><p>一般 PHP 环境在没有连接到数据库或者其他情况下会有错误提示信息，错误信息中可能包含 PHP 脚本当前的路径信息或者查询的 SQL 语句等信息，这类信息如果暴露给黑客是不安全的，因此建议您禁止该错误提示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">;生产环境下，设定为Off</span><br><span class="line">display_errors = Off</span><br><span class="line"></span><br><span class="line">;开启错误日志记录</span><br><span class="line">log_errors = On</span><br><span class="line"></span><br><span class="line">;指定日志写入路径</span><br><span class="line">error_log=/var/log/php/error_log.log</span><br></pre></td></tr></table></figure><h3 id="资源限制优化"><a href="#资源限制优化" class="headerlink" title="资源限制优化"></a>资源限制优化</h3><p>为了提高系统的稳定性，强烈建议设置每个脚本解析请求数据所花费的时间和脚本可能消耗的最大内存量。正确的配置这些参数可以防止PHP任何脚本消耗太多的资源或是内存，从而避免系统不安全或降低安全系数。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 每个脚本最大执行时间，0 表示不限制。</span><br><span class="line">max_execution_time = 30</span><br><span class="line"># 每个脚本等待解析时间，-1 表示不限制。</span><br><span class="line">max_input_time = 30</span><br><span class="line"># 每个脚本最大消耗内存，-1 表示不限制。</span><br><span class="line">memory_limit = 40M</span><br><span class="line"># 上传文件最大许可大小</span><br><span class="line">upload_max_filesiz = 50M;</span><br></pre></td></tr></table></figure><h3 id="Cookie安全"><a href="#Cookie安全" class="headerlink" title="Cookie安全"></a>Cookie安全</h3><h5 id="Cookie-的-HttpOnly"><a href="#Cookie-的-HttpOnly" class="headerlink" title="Cookie 的 HttpOnly"></a>Cookie 的 HttpOnly</h5><p>HttpOnly可以让Cookie在浏览器中不可见，开启HttpOnly可以防止JavaScript脚本通过document对象获取 Cookie</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">;开启 HttpOnly</span><br><span class="line">session.cookie_httponly=On</span><br></pre></td></tr></table></figure><h5 id="Cookie-的-Secure"><a href="#Cookie-的-Secure" class="headerlink" title="Cookie 的 Secure"></a>Cookie 的 Secure</h5><p>如果web传输协议使用的是HTTPS，则应开启cookie_secure，当Secure属性设置为true时，Cookie只有在HTTPS下才能上传到服务器，防止Cookie被窃取</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">session.cookie_secure=On</span><br></pre></td></tr></table></figure><h3 id="减少PHP无用模块"><a href="#减少PHP无用模块" class="headerlink" title="减少PHP无用模块"></a>减少PHP无用模块</h3><p>减少PHP中不常用的模块，来达到增强性能和安全性，可以通过命令来查看安装模块</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php -m</span><br></pre></td></tr></table></figure><p>一些没有用的内置模块，可以通过修改PHP配置文件，将相对应的模块注释掉</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">;extension=sqlite3</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 建站知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> mysql </tag>
            
            <tag> PHP </tag>
            
            <tag> PHP扩展 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kangle访问控制模块wiki文档</title>
      <link href="/posts/84b854b0.html"/>
      <url>/posts/84b854b0.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->##### 模块分类<p>kangle访问控制模块，按功能分为匹配模块和标记模块，按位置分为请求控制模块和回应控制模块。匹配模块只用来匹配相关数据，而不修改，标记模块就有可能修改，或特殊目的。</p><p>每个模块，都可以加上or&#x3D;’0|1’ revers&#x3D;’0|1’ 两个属性。<br>or表示和下一个模块是或的关系，默认是与(AND)的关系。(kangle 3.1.7开始支持)<br>revers表示逻辑反转，默认不反转。</p><h5 id="请求控制和回应控制"><a href="#请求控制和回应控制" class="headerlink" title="请求控制和回应控制"></a>请求控制和回应控制</h5><p>Kangle的访问控制分为请求控制和回应控制。 请求控制在最前面，用户发送请求过来时即进行请求控制。 回应控制发生在数据发送给用户之前，即进行回应控制。</p><p>每个控制由一张或多张表加一个默认目标组成，其中BEGIN表是系统内建表，所有控制从BEGIN开始。 每张表可以定义若干条“链”，在一张表中控制按顺序从上到下对规则链进行匹配。 规则链由一个目标和任意个匹配模块和任意个标记模块组成。 在表中，用户可以按需要随意添加、删除、编辑或反转规则链。</p><p>在”请求控制”内有一个系统表：”BEGIN表”。 在”回应控制”内有两个系统表”BEGIN表”和”POSTMAP表”。 “POSTMAP表”完成url到物理文件的映射。用户使用”POSTMAP表”，需要自行创建。 例如：对文件进行管理、禁止文件被下载（日志文件不允许被下载）等可用”POSTMAP表”。</p><p>kangle如果发现用户的请求匹配了一个规则链中的匹配模块，则进入标记模块对请求做简单的处理，之后就按该条规则链指定的目标处理。如果目标是继续，则还要进行下一条规则链处理，否则就返回控制，按控制“目标”进行处理。 如果目标是“继续”，则还要进行下一条规则链的处理。 如果目标是“默认”，则控制按默认目标处理（默认目标有：拒绝、回写数据、服务器、虚拟主机等）。 如果目标是“拒绝”，则将对用户的请求拒绝并发送错误信息给用户，之后中断连接。 如果目标是“虚拟主机”，则将对用户请求使用虚拟主机处理。 如果目标是“服务器”，则用户使用的是反代。 如果目标是“回写数据”，则将对用户的请求拒绝，并发送管理员设定的原始数据给用户。</p><table><thead><tr><th align="center">模 块 名 称</th><th>作 用</th><th>模 块 说 明</th></tr></thead><tbody><tr><td align="center">url</td><td>请求控制和回应控制</td><td>匹配用户url网址,网址可以使用正则表达式。</td></tr><tr><td align="center">reg_path</td><td>请求控制和回应控制</td><td>匹配路径。可以使用正则表达式匹配路径。</td></tr><tr><td align="center">reg_param</td><td>请求控制和回应控制</td><td>可用正则表达式进行url参数匹配</td></tr><tr><td align="center">path</td><td>请求控制和回应控制</td><td>匹配路径</td></tr><tr><td align="center">dst_port</td><td>请求控制和回应控制</td><td>匹配目标端口</td></tr><tr><td align="center">meth</td><td>请求控制和回应控制</td><td>匹配http请求方法（如get 、 post ）</td></tr><tr><td align="center">file_ext</td><td>请求控制和回应控制</td><td>匹配一个或多个文件扩展名</td></tr><tr><td align="center">host</td><td>请求控制和回应控制</td><td>匹配一个或多个主机头</td></tr><tr><td align="center">wide_host</td><td>请求控制和回应控制</td><td>泛域名匹配</td></tr><tr><td align="center">map_host</td><td>请求控制和回应控制</td><td>匹配一个或多个主机头。与“host”的区别：map_host是以文件形式来存放主机头进行匹配</td></tr><tr><td align="center">header</td><td>请求控制和回应控制</td><td>匹配http头</td></tr><tr><td align="center">self</td><td>请求控制和回应控制</td><td>匹配当前连接的服务器ip</td></tr><tr><td align="center">sefl_port</td><td>请求控制和回应控制</td><td>匹配当前连接的服务器端口</td></tr><tr><td align="center">src</td><td>请求控制和回应控制</td><td>匹配源地址（ip或者ip段）</td></tr><tr><td align="center">time</td><td>请求控制和回应控制</td><td>匹配当前时间，格式为：“crontab”</td></tr><tr><td align="center">ssl_serial</td><td>请求控制和回应控制</td><td>匹配证书序列号</td></tr><tr><td align="center">auth_user</td><td>请求控制和回应控制</td><td>匹配http论证的用户</td></tr><tr><td align="center">referer</td><td>请求控制和回应控制</td><td>url来源</td></tr></tbody></table><h3 id="请求控制匹配模块"><a href="#请求控制匹配模块" class="headerlink" title="请求控制匹配模块"></a>请求控制匹配模块</h3><h4 id="url"><a href="#url" class="headerlink" title="url"></a>url</h4><p>说明：匹配用户url网址。网址可以使用正则表达式<br>范围: 请求控制和回应控制<br>语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;acl_url &gt;&lt;![CDATA[url地址]]&gt;&lt;/acl_url&gt;</span><br></pre></td></tr></table></figure><p>使用例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;acl_url &gt;&lt;![CDATA[[www.test.com](http://www.test.com/)]]&gt;&lt;/acl_url&gt;</span><br></pre></td></tr></table></figure><h4 id="reg-path"><a href="#reg-path" class="headerlink" title="reg_path"></a>reg_path</h4><p>说明：匹配路径。可以使用正则表达式匹配路径<br>范围: 请求控制和回应控制<br>语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;acl_reg_path??path=&#x27;路径&#x27; raw=&#x27;原始的&#x27; nc=&#x27;不区分大小写&#x27;&gt;&lt;/acl_reg_path&gt;</span><br></pre></td></tr></table></figure><p>使用例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;acl_reg_path??path=&#x27;^/admin/&#x27;&gt;&lt;/acl_reg_path&gt;</span><br></pre></td></tr></table></figure><h4 id="reg-param"><a href="#reg-param" class="headerlink" title="reg_param"></a>reg_param</h4><p>说明：可用正则表达式进行url参数匹配<br>范围: 请求控制和回应控制<br>语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;acl_reg_param??param=&#x27;url参数&#x27;&gt;&lt;/acl_reg_param&gt;</span><br></pre></td></tr></table></figure><p>使用例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;acl_reg_param??param=&#x27;^[http://www.kanglesoft.com/&#x27;](http://www.kanglesoft.com/)&gt;&lt;/acl_reg_param&gt;</span><br></pre></td></tr></table></figure><h4 id="path"><a href="#path" class="headerlink" title="path"></a>path</h4><p>说明：匹配路径<br>范围: 请求控制和回应控制<br>语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;acl_path??path=&#x27;路径&#x27;&gt;&lt;/acl_path&gt;</span><br></pre></td></tr></table></figure><p>使用例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;acl_path??path=&#x27;/admin/&#x27;&gt;&lt;/acl_path&gt;</span><br></pre></td></tr></table></figure><h4 id="dst-port"><a href="#dst-port" class="headerlink" title="dst_port"></a>dst_port</h4><p>说明：匹配目标端口<br>范围: 请求控制和回应控制<br>语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;acl_dst_port &gt;端口&lt;/acl_dst_port&gt;</span><br></pre></td></tr></table></figure><p>使用例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;acl_dst_port &gt;80&lt;/acl_dst_port&gt;</span><br></pre></td></tr></table></figure><h4 id="meth"><a href="#meth" class="headerlink" title="meth"></a>meth</h4><p>说明：匹配http请求方法（如get 、post)<br>范围: 请求控制和回应控制<br>语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;acl_meth &gt;参数&lt;/acl_meth&gt;</span><br></pre></td></tr></table></figure><p>使用例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;acl_meth &gt;GET&lt;/acl_meth&gt;</span><br></pre></td></tr></table></figure><h4 id="file-ext"><a href="#file-ext" class="headerlink" title="file_ext"></a>file_ext</h4><p>说明：匹配一个或多个文件扩展名<br>范围: 请求控制和回应控制<br>语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;acl_file_ext??split=&#x27;|&#x27;&gt;文件扩展名&lt;/acl_file_ext&gt;</span><br></pre></td></tr></table></figure><p>使用例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;acl_file_ext??split=&#x27;|&#x27;&gt;html|js|php&lt;/acl_file_ext&gt;</span><br></pre></td></tr></table></figure><h4 id="host"><a href="#host" class="headerlink" title="host"></a>host</h4><p>说明：匹配一个或多个主机头<br>范围: 请求控制和回应控制<br>语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;acl_host??split=&#x27;|&#x27;&gt;主机头地址&lt;/acl_host&gt;</span><br></pre></td></tr></table></figure><p>使用例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;acl_host??split=&#x27;|&#x27;&gt;www.test.com|[www.ttt.com](http://www.ttt.com/)&lt;/acl_host&gt;</span><br></pre></td></tr></table></figure><h4 id="wide-host"><a href="#wide-host" class="headerlink" title="wide_host"></a>wide_host</h4><p>说明：泛域名匹配<br>范围: 请求控制和回应控制<br>语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;acl_wide_host??v=&#x27;域名1|域名2&#x27;&gt;&lt;/acl_wide_host&gt;</span><br></pre></td></tr></table></figure><p>使用例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;acl_wide_host??v=&#x27;abc.com|*.abc.com&#x27;&gt;&lt;/acl_wide_host&gt;</span><br></pre></td></tr></table></figure><h4 id="map-host"><a href="#map-host" class="headerlink" title="map_host"></a>map_host</h4><p>说明：匹配一个或多个主机头与”host”的区别：map_host是以文件形式来存放主机头进行匹配<br>范围: 请求控制和回应控制<br>语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;acl_map_host??file=&#x27;文件名&#x27;&gt;&lt;/acl_map_host&gt;</span><br></pre></td></tr></table></figure><p>使用例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;acl_map_host??file=&#x27;host.txt&#x27;&gt;&lt;/acl_map_host&gt;</span><br></pre></td></tr></table></figure><p>注：在文件中域名一行写一个</p><h4 id="header"><a href="#header" class="headerlink" title="header"></a>header</h4><p>说明:匹配http头<br>范围:请求控制和回应控制<br>语法:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;acl_header header=&#x27;http头&#x27; regex=&#x27;1&#x27;&gt;&lt;![CDATA[参数]]&gt;&lt;/acl_header&gt;</span><br></pre></td></tr></table></figure><p>使用例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;acl_header header=&#x27;content-type&#x27; regex=&#x27;1&#x27;&gt;&lt;![CDATA[text/html]]&gt;&lt;/acl_header&gt;</span><br></pre></td></tr></table></figure><h4 id="self"><a href="#self" class="headerlink" title="self"></a>self</h4><p>说明:匹配当前连接的服务器ip<br>范围:请求控制和回应控制<br>语法:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;acl_self &gt;ip地址&lt;/acl_self&gt;</span><br></pre></td></tr></table></figure><p>使用例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;acl_self &gt;192.168.1.203&lt;/acl_self&gt;</span><br></pre></td></tr></table></figure><h4 id="selfs"><a href="#selfs" class="headerlink" title="selfs"></a>selfs</h4><p>说明:匹配多个本机ip地址<br>范围:请求控制和回应控制<br>语法:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;acl_selfs??split=&#x27;|&#x27;&gt;ip地址&lt;/acl_selfs&gt;</span><br></pre></td></tr></table></figure><p>使用例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;acl_selfs??split=&#x27;|&#x27;&gt;192.168.1.203|192.168.1.205&lt;/acl_selfs&gt;</span><br></pre></td></tr></table></figure><h4 id="sefl-port"><a href="#sefl-port" class="headerlink" title="sefl_port"></a>sefl_port</h4><p>说明:匹配当前连接的服务器端口<br>范围:请求控制和回应控制<br>语法:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;acl_self_port &gt;端口号&lt;/acl_self_port&gt;</span><br></pre></td></tr></table></figure><p>使用例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;acl_self_port &gt;80&lt;/acl_self_port&gt;</span><br></pre></td></tr></table></figure><h4 id="self-ports"><a href="#self-ports" class="headerlink" title="self_ports"></a>self_ports</h4><p>说明:匹配多个本机端口<br>范围:请求控制和回应控制<br>语法:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;acl_self_ports??split=&#x27;|&#x27;&gt;端口号&lt;/acl_self_ports&gt;</span><br></pre></td></tr></table></figure><p>使用例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;acl_self_ports??split=&#x27;|&#x27;&gt;80|3320&lt;/acl_self_ports&gt;</span><br></pre></td></tr></table></figure><h4 id="src"><a href="#src" class="headerlink" title="src"></a>src</h4><p>说明:匹配源地址（ip或者ip段）<br>范围:请求控制和回应控制<br>语法:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;acl_src &gt;ip或ip段&lt;/acl_src&gt;</span><br></pre></td></tr></table></figure><p>使用例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;acl_src &gt;203.168.1.0/24&lt;/acl_src&gt;</span><br></pre></td></tr></table></figure><h4 id="srcs"><a href="#srcs" class="headerlink" title="srcs"></a>srcs</h4><p>说明:多ip段<br>范围:请求控制和回应控制<br>语法:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;acl_srcs??split=&#x27;|&#x27;&gt;ip段地址&lt;/acl_srcs&gt;</span><br></pre></td></tr></table></figure><p>使用例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;acl_srcs??split=&#x27;|&#x27;&gt;203.158.0.|203.168.1.&lt;/acl_srcs&gt;</span><br></pre></td></tr></table></figure><h4 id="time"><a href="#time" class="headerlink" title="time"></a>time</h4><p>说明:匹配当前时间，格式为：”crontab”<br>范围:请求控制和回应控制<br>参数格式:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">*　 *　??*　 *　 *</span><br><span class="line">分　时　日　月　周</span><br></pre></td></tr></table></figure><p>语法:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;acl_time??time=&#x27;参数&#x27;&gt;&lt;/acl_time&gt;</span><br></pre></td></tr></table></figure><p>使用例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;acl_time??time=&#x27;30 21 * * *&#x27;&gt;&lt;/acl_time&gt;</span><br></pre></td></tr></table></figure><p>例子表示每晚的21:30执行</p><h4 id="ssl-serial"><a href="#ssl-serial" class="headerlink" title="ssl_serial"></a>ssl_serial</h4><p>说明:匹配证书序列号<br>范围:请求控制和回应控制<br>语法:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;acl_ssl_serial??icase=&#x27;1&#x27; split=&#x27;|&#x27;&gt;证书序列号&lt;/acl_ssl_serial&gt;</span><br></pre></td></tr></table></figure><p>使用例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;acl_ssl_serial??icase=&#x27;1&#x27; split=&#x27;|&#x27;&gt;df48a548cef576bb4ae7a726b693842&lt;/acl_ssl_serial&gt;</span><br></pre></td></tr></table></figure><h4 id="auth-user"><a href="#auth-user" class="headerlink" title="auth_user"></a>auth_user</h4><p>说明:匹配http认证用户<br>范围:请求控制和回应控制<br>语法:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;acl_auth_user??split=&#x27;|&#x27;&gt;用户名1|用户名2&lt;/acl_auth_user&gt;</span><br></pre></td></tr></table></figure><p>例匹配用户名是usera和用户名为userb</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;acl_auth_user??split=&#x27;|&gt;usera|userb&lt;/acl_auth_user&gt;</span><br></pre></td></tr></table></figure><h4 id="referer"><a href="#referer" class="headerlink" title="referer"></a>referer</h4><p>说明:url来源<br>范围:请求控制和回应控制<br>参数：<br>Null:匹配为空<br>NotNull:匹配不为空<br>EqHost:来源的域名和访问的域名相同<br>语法:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;acl_referer??referer=&#x27;参数&#x27;&gt;&lt;/acl_referer&gt;</span><br></pre></td></tr></table></figure><p>使用例子:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;acl_referer??referer=&#x27;NotNull&#x27;&gt;&lt;/acl_referer&gt;</span><br></pre></td></tr></table></figure><h4 id="ip-rate"><a href="#ip-rate" class="headerlink" title="ip_rate"></a>ip_rate</h4><p>说明:ip访问频率<br>范围:请求控制和回应控制<br>语法:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;acl_ip_rate request=&#x27;次数&#x27; second=&#x27;时间单位秒&#x27;&gt;&lt;/acl_ip_rate&gt;</span><br></pre></td></tr></table></figure><p>使用例子:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;acl_ip_rate request=&#x27;20&#x27; second=&#x27;10&#x27;&gt;&lt;/acl_ip_rate&gt;</span><br></pre></td></tr></table></figure><p>设置匹配每ip10秒内可以访问20次</p><h4 id="mark"><a href="#mark" class="headerlink" title="mark"></a>mark</h4><p>说明：印记模块<br>范围:请求控制和回应控制<br>参数：<br>eq是等于<br>lt是小于<br>gt是大于<br>语法:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;acl_mark op=&#x27;eq&#x27; v=&#x27;参数&#x27;&gt;&lt;/acl_mark&gt;</span><br></pre></td></tr></table></figure><p>参数可以设置在0-255范围内,mark可以将请求控制和回应控制中的模块通过印记模块串连起来</p><p>使用例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;acl_mark op=&#x27;eq&#x27; v=&#x27;100&#x27;&gt;&lt;/acl_mark&gt;</span><br></pre></td></tr></table></figure><h4 id="per-ip"><a href="#per-ip" class="headerlink" title="per_ip"></a>per_ip</h4><p>说明：匹配每ip连接数<br>范围:请求控制和回应控制<br>语法:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;acl_per_ip??max=&#x27;数值&#x27;&gt;&lt;/acl_per_ip&gt;</span><br></pre></td></tr></table></figure><p>使用例子:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;acl_per_ip??max=&#x27;100&#x27;&gt;&lt;/acl_per_ip&gt;</span><br></pre></td></tr></table></figure><p>匹配每ip 100连接数</p><h4 id="worker"><a href="#worker" class="headerlink" title="worker"></a>worker</h4><p>说明：检测队列类型<br>范围:请求控制和回应控制<br>参数：<br>rq:请求队列<br>io:io队列<br>dns:dns工作数<br>语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;acl_worker??type=&#x27;队列类型&#x27; max=&#x27;达到匹配的设定参数就返回成功&#x27;&gt;&lt;/acl_worker&gt;</span><br></pre></td></tr></table></figure><p>使用例子:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;acl_worker??type=&#x27;rq&#x27; max=&#x27;20&#x27;&gt;&lt;/acl_worker&gt;</span><br></pre></td></tr></table></figure><p>###请求控制标记模块</p><h4 id="speed-limit"><a href="#speed-limit" class="headerlink" title="speed_limit"></a>speed_limit</h4><p>说明：单连接限速只针对当前连接<br>speed_limit模块使用方法请参考</p><h4 id="gspeed-limit"><a href="#gspeed-limit" class="headerlink" title="gspeed_limit"></a>gspeed_limit</h4><p>说明：分组限速针对所有连接<br>gspeed_limit模块使用方法请参考</p><h4 id="ip-speed-limit"><a href="#ip-speed-limit" class="headerlink" title="ip_speed_limit"></a>ip_speed_limit</h4><p>说明：每ip限速,限速针对每ip<br>ip_speed_limit模块使用方法请参考</p><h4 id="flag"><a href="#flag" class="headerlink" title="flag"></a>flag</h4><p>说明：对用户请求作不缓存、不过滤内容及不防cc攻击标记<br>范围：请求控制<br>参数：<br>clear flag(clear):清除设置<br>不缓存(no_cache):不缓存<br>多节点忽略宕机切换(mserver_noswitch):勾选后多节点宕机不会自动切换<br>忽略网络错误(ignore_error):勾选后做多节点cdn源机出现问题，cdn节点仍可以访问<br>上流短连接(upstream_noka):上游使用短链接<br>原始url代理:(raw_proxy)<br>double_cache_expire:双倍过期时间<br>x_cache:插入x-cache<br>via:插入via<br>no_x_forwared_for:不插入x_forwared_for（如果没有勾选，默认是插入x_forwared_for）<br>x_real_ip: 插入真实ip<br>no_buffer: 不使用缓冲<br>语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;mark_flag??no_cache=&#x27;参数&#x27; &gt;&lt;/mark_flag&gt;</span><br></pre></td></tr></table></figure><p>使用例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;mark_flag??no_cache=&#x27;1&#x27; &gt;&lt;/mark_flag&gt;</span><br></pre></td></tr></table></figure><p>例子说明：不缓存</p><h4 id="rewrite"><a href="#rewrite" class="headerlink" title="rewrite"></a>rewrite</h4><p>说明：url重写<br>范围：请求控制<br>参数：<br>prefix：前缀<br>path：路径<br>rewrite to:重写到<br>code:状态码<br>internal:内部的<br>no case:忽略大小写<br>qsappend:附加的url参数<br>语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;mark_rewrite? ?path=&#x27;路径&#x27; dst=&#x27;重写到&#x27; internal=&#x27;0&#x27; nc=&#x27;1&#x27; qsa=&#x27;1&#x27; code=&#x27;重写代码&#x27;&gt;&lt;/mark_rewrite&gt;</span><br></pre></td></tr></table></figure><p>使用例子</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;mark_rewrite? ?path=&#x27;(.*)&#x27; dst=&#x27;http://t.com$1&#x27; internal=&#x27;0&#x27; nc=&#x27;1&#x27; qsa=&#x27;1&#x27; code=&#x27;301&#x27;&gt;&lt;/mark_rewrite&gt;</span><br></pre></td></tr></table></figure><h4 id="redirect"><a href="#redirect" class="headerlink" title="redirect"></a>redirect</h4><p>说明：url重定向<br>范围：请求控制<br>语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;mark_redirect? ?dst=&#x27;重定向到的地址&#x27; internal=&#x27;内部的&#x27; code=&#x27;状态码&#x27;&gt;&lt;/mark_redirect&gt;</span><br></pre></td></tr></table></figure><p>使用例子:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;acl_host??split=&#x27;|&#x27;&gt;www.php.com&lt;/acl_host&gt;</span><br><span class="line">&lt;mark_redirect? ?dst=&#x27;http://127.0.0.100/&#x27; internal=&#x27;1&#x27; code=&#x27;301&#x27;&gt;&lt;/mark_redirect&gt;</span><br></pre></td></tr></table></figure><h4 id="auth"><a href="#auth" class="headerlink" title="auth"></a>auth</h4><p>说明：http认证<br>范围：请求控制<br>参数：<br>file:文件名<br>crypt_type:加密类型<br>auth_type:论证类型<br>realm:一般使用默认的<br>require:验证使用的帐户名是否被允许使用kangle服务器<br>语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;mark_auth? ?file=&#x27;文件名&#x27; crypt_type=&#x27;加密类型&#x27; auth_type=&#x27;论证类型&#x27; realm=&#x27;kangle&#x27; require=&#x27;*&#x27;&gt;&lt;/mark_auth&gt;</span><br></pre></td></tr></table></figure><p>使用例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;mark_auth? ?file=&#x27;fly.txt&#x27; crypt_type=&#x27;plain&#x27; auth_type=&#x27;Basic&#x27; realm=&#x27;kangle&#x27; require=&#x27;*&#x27;&gt;&lt;/mark_auth&gt;</span><br></pre></td></tr></table></figure><h4 id="host-rewrite"><a href="#host-rewrite" class="headerlink" title="host_rewrite"></a>host_rewrite</h4><p>说明：主机重写<br>范围：请求控制<br>语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;mark_host_rewrite? ?reg_host=&#x27;需重定向域名&#x27; host=&#x27;www.php.com&#x27; port=&#x27;80&#x27; proxy=&#x27;0或1(1是反代)&#x27; rewrite=&#x27;0或1(1是重写)&#x27; life_time=&#x27;生存时间&#x27;&gt;</span><br><span class="line">&lt;/mark_host_rewrite&gt;</span><br></pre></td></tr></table></figure><p>使用例子:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;mark_host_rewrite? ?reg_host=&#x27;(.*)&#x27; host=&#x27;www.php.com&#x27; port=&#x27;80&#x27; proxy=&#x27;0&#x27; rewrite=&#x27;1&#x27; life_time=&#x27;0&#x27;&gt;&lt;/mark_host_rewrite&gt;</span><br></pre></td></tr></table></figure><p>本例是所有域名访问重定向到<a href="http://www.php.com/">www.php.com</a></p><h4 id="anti-cc"><a href="#anti-cc" class="headerlink" title="anti_cc"></a>anti_cc</h4><p>说明：防CC模块<br>范围：请求控制<br>参数：<br>wl（white list）:1代表勾选白名单，0表示不勾选白名单，白名单时间有效时间以你的设置为准，可在kangle–》配置–》资源限制–》白名单有效期<br>fix_url： 勾选后，如触发了防CC，在地址栏不会显示一串长长的字符，这样让地址栏显得更友好<br>skip_cache：勾选后，如果是缓存了的内容，就会跳过防CC规则<br>语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;mark_anti_cc? ?request=&#x27;次数&#x27; second=&#x27;时间/秒&#x27; wl=&#x27;白名单&#x27;&gt;&lt;![CDATA[防CC代码]]&gt;&lt;/mark_anti_cc&gt;</span><br></pre></td></tr></table></figure><p>使用例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;mark_anti_cc? ?request=&#x27;20&#x27; second=&#x27;10&#x27; wl=&#x27;1&#x27;&gt;&lt;![CDATA[HTTP/1.1 200 OK</span><br><span class="line">??Content-Type: text/html; charset=utf-8</span><br><span class="line">??Connection: close</span><br><span class="line">&lt;html&gt;&lt;body&gt;&lt;script language=&quot;javascript&quot;&gt;window.location=&quot;&#123; &#123;murl&#125;&#125;&quot;;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;]]&gt;&lt;/mark_anti_cc&gt;</span><br></pre></td></tr></table></figure><p>注：{ {murl}}左右两边的大括号在写配置文件时中间不要有空格</p><h4 id="extend-flag"><a href="#extend-flag" class="headerlink" title="extend_flag"></a>extend_flag</h4><p>说明：是否启用扩展卡<br>范围: 请求控制和回应控制<br>语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;mark_extend_flag? ?no_extend=&#x27;参数&#x27;&gt;&lt;/mark_extend_flag&gt;</span><br></pre></td></tr></table></figure><p>使用例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;mark_extend_flag? ?no_extend=&#x27;1&#x27;&gt;&lt;/mark_extend_flag&gt;</span><br></pre></td></tr></table></figure><p>勾选了无扩展，全部文件以源文件形式显示,(这个模块在回应控制中要添加在POSTMAP表里面，因为在回应控制的BEGIN表里面，数据已经产生所以没有效果。如果在回应控制里没有POSTMAP表可以手动添加这个表)</p><h4 id="host-1"><a href="#host-1" class="headerlink" title="host"></a>host</h4><p>说明：主机头<br>范围：请求控制<br>参数：<br>host:主机头<br>port:端口<br>life_time:生存时间<br>rewrite:重写<br>语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;mark_host? ?host=&#x27;主机头&#x27; port=&#x27;端口号&#x27; proxy=&#x27;反代&#x27;&gt;&lt;/mark_host&gt;</span><br></pre></td></tr></table></figure><p>使用例子:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;mark_host? ?host=&#x27;test986.com&#x27; port=&#x27;80&#x27; proxy=&#x27;1&#x27;&gt;&lt;/mark_host&gt;</span><br></pre></td></tr></table></figure><h4 id="replace-ip"><a href="#replace-ip" class="headerlink" title="replace_ip"></a>replace_ip</h4><p>说明：ip替换<br>范围：请求控制<br>语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;mark_replace_ip? ?header=&#x27;参数&#x27;&gt;&lt;/mark_replace_ip&gt;</span><br></pre></td></tr></table></figure><p>使用例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;mark_replace_ip? ?header=&#x27;X-Real-Ip&#x27;&gt;&lt;/mark_replace_ip&gt;</span><br></pre></td></tr></table></figure><h4 id="param"><a href="#param" class="headerlink" title="param"></a>param</h4><p>说明：参数过滤<br>范围：请求控制<br>语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;mark_param? ?name=&#x27;命名&#x27; value=&#x27;需要过滤的参数&#x27; get=&#x27;0或1&#x27;??post=&#x27;0或1&#x27;??icase=&#x27;0或1（1是忽略大小写）&#x27;??charset=&#x27;编码&#x27;&gt;&lt;/mark_param&gt;</span><br></pre></td></tr></table></figure><p>使用例子:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;mark_param? ?name=&#x27;name&#x27; value=&#x27;&#x27;.*[; ]?((or)|(insert)|(select)|(union)|(update)|(delete)|(replace)|</span><br><span class="line">(create)|(drop)|(alter)|(grant)|(load)|(show)|(exec))[\s(]&#x27; get=&#x27;1&#x27;??post=&#x27;1&#x27;??icase=&#x27;1&#x27;??charset=&#x27;utf-8&#x27;&gt;</span><br><span class="line">&lt;/mark_param&gt;</span><br></pre></td></tr></table></figure><p>本例是防SQL注入攻击</p><h4 id="post-file"><a href="#post-file" class="headerlink" title="post_file"></a>post_file</h4><p>说明：上传文件过滤<br>范围：请求控制<br>语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;mark_post_file? ?filename=&#x27;参数&#x27; icase=&#x27;0或1（1是忽略大小写）&#x27;&gt;&lt;/mark_post_file&gt;</span><br></pre></td></tr></table></figure><p>使用例子:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;mark_post_file? ?filename=&#x27;\.((php)|(htm)|(html))$&#x27; icase=&#x27;1&#x27;&gt;&lt;/mark_post_file&gt;</span><br></pre></td></tr></table></figure><p>本例是防上传木马示例</p><h4 id="mark-1"><a href="#mark-1" class="headerlink" title="mark"></a>mark</h4><p>请参考请求控制匹配模块的mark模块</p><h4 id="black-list"><a href="#black-list" class="headerlink" title="black_list"></a>black_list</h4><p>说明：插入到黑名单<br>范围：请求控制和回应控制<br>语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;mark_black_list??&gt;&lt;/mark_black_list&gt;</span><br></pre></td></tr></table></figure><p>这个模块只要这样添加了就可以了</p><h4 id="check-black-list"><a href="#check-black-list" class="headerlink" title="check_black_list"></a>check_black_list</h4><p>说明：检查黑名单<br>范围：请求控制<br>语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;mark_check_black_list??time_out=&#x27;加入黑名单后限制时间&#x27;&gt;&lt;/mark_check_black_list&gt;</span><br></pre></td></tr></table></figure><p>使用例子:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;mark_check_black_list??time_out=&#x27;1800&#x27;&gt;&lt;/mark_check_black_list&gt;</span><br></pre></td></tr></table></figure><p>是黑名单就拒绝 ,check_black_list模块一般加在black_list模块前面</p><h4 id="flow"><a href="#flow" class="headerlink" title="flow"></a>flow</h4><p>说明:流量统计<br>范围：请求控制和回应控制<br>参数：<br>reset：重置 (如果勾选了reset这个选项，重新点提交后，统计就会重新计算,此选项需要3311的flow访问控制模块里设置)<br>语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;mark_flow??flow=&#x27;0&#x27; cache=&#x27;0&#x27; &gt;&lt;/mark_flow&gt;</span><br></pre></td></tr></table></figure><h4 id="param-count"><a href="#param-count" class="headerlink" title="param_count"></a>param_count</h4><p>说明：防hash攻击<br>范围：请求控制和回应控制<br>语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;mark_param_count? ?get=&#x27;1&#x27;??post=&#x27;1&#x27;??max_count=&#x27;允许的参数数量&#x27; &gt;&lt;/mark_param_count&gt;</span><br></pre></td></tr></table></figure><p>使用例子:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;mark_param_count? ?get=&#x27;1&#x27;??post=&#x27;1&#x27;??max_count=&#x27;1000&#x27; &gt;&lt;/mark_param_count&gt;</span><br></pre></td></tr></table></figure><p>上例主要是防hash攻击，max_count&#x3D;1000是最多允许的参数数量</p><h4 id="path-sign"><a href="#path-sign" class="headerlink" title="path_sign"></a>path_sign</h4><p>说明：签名防盗链<br>范围：请求控制<br>参数：<br>sign：签名<br>expire：有效期<br>key：密钥<br>说明：以上三个参数需要和您程序上的参数吻合才行<br>语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;mark_path_sign??sign=&#x27;签名&#x27; expire=&#x27;有效期&#x27; key=&#x27;密钥&#x27;&gt;&lt;/mark_path_sign&gt;</span><br></pre></td></tr></table></figure><p>使用例子:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;mark_path_sign??sign=&#x27;_KS&#x27; expire=&#x27;_KE&#x27; key=&#x27;dfsdfsdfse&#x27;&gt;&lt;/mark_path_sign&gt;</span><br></pre></td></tr></table></figure><h4 id="remove-header"><a href="#remove-header" class="headerlink" title="remove_header"></a>remove_header</h4><p>说明：删除http头<br>范围: 回应控制<br>语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;mark_remove_header? ?attr=&#x27;属性&#x27; val=&#x27;值&#x27; &gt;&lt;/mark_remove_header&gt;</span><br></pre></td></tr></table></figure><p>使用例子:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;mark_remove_header? ?attr=&#x27;http-header&#x27; val=&#x27;text&#x27; &gt;&lt;/mark_remove_header&gt;</span><br></pre></td></tr></table></figure><h4 id="remove-param"><a href="#remove-param" class="headerlink" title="remove_param"></a>remove_param</h4><p>说明：删除参数<br>范围：请求控制和回应控制<br>语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;mark_remove_param??params=&#x27;参数&#x27; raw=&#x27;原始的&#x27; nc=&#x27;不区分大小写&#x27;&gt;&lt;/mark_remove_param&gt;</span><br></pre></td></tr></table></figure><p>使用例子:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;mark_remove_param??params=&#x27;thread-1493962&#x27; raw=&#x27;0&#x27; nc=&#x27;1&#x27;&gt;&lt;/mark_remove_param&gt;</span><br></pre></td></tr></table></figure><h4 id="self-ip"><a href="#self-ip" class="headerlink" title="self_ip"></a>self_ip</h4><p>说明：指定出口ip<br>范围：请求控制<br>语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;mark_self_ip? ?ip=&#x27;指定出口ip&#x27;&gt;&lt;/mark_self_ip&gt;</span><br></pre></td></tr></table></figure><p>使用例子:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;mark_self_ip? ?ip=&#x27;192.168.1.20&#x27;&gt;&lt;/mark_self_ip&gt;</span><br></pre></td></tr></table></figure><p>反向代理时指定哪个ip连接源机，如果为空时进来哪个ip就哪个ip去连接</p><h4 id="temp-file"><a href="#temp-file" class="headerlink" title="temp_file"></a>temp_file</h4><p>说明：临时文件<br>范围：请求控制<br>语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;mark_temp_file? ?tf=&#x27;0或1&#x27;&gt;&lt;/mark_temp_file&gt;</span><br></pre></td></tr></table></figure><p>使用例子:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;mark_temp_file? ?tf=&#x27;1&#x27;&gt;&lt;/mark_temp_file&gt;</span><br><span class="line">````</span><br><span class="line">1是on 表示使用临时文件, 0是off 表示使用内存缓存, 设置了这个模块就会忽略全局里的设置，优先使用这里</span><br><span class="line"></span><br><span class="line">upload_progress</span><br><span class="line">upload_progress模块使用方法请参考</span><br><span class="line">#### url_rewrite</span><br><span class="line">说明：url重写</span><br><span class="line">范围：请求控制</span><br><span class="line">语法：</span><br></pre></td></tr></table></figure><p>&lt;mark_url_rewrite??url&#x3D;’重写url’ dst&#x3D;’url地址’ icase&#x3D;’1（1是忽略大小写）’&gt;<br></mark_url_rewrite></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用例子:</span><br></pre></td></tr></table></figure><p>&lt;mark_url_rewrite??url&#x3D;’<a href="http://www.php22.com/vhost/(.*)$">http://www.php22.com/vhost/(.*)$</a>‘ dst&#x3D;’<a href="http://www.php22.com/vhost/?c=session&a=loginForm">http://www.php22.com/vhost/?c=session&amp;a=loginForm</a>‘ icase&#x3D;’1’&gt;<br></mark_url_rewrite></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">kangle的url_rewrite重写带协议，比如是http的就在地址前面写上http</span><br><span class="line"></span><br><span class="line">### 回应控制匹配模块</span><br><span class="line"></span><br><span class="line">#### file</span><br><span class="line">说明：匹配一个或多个文件</span><br><span class="line">范围：回应控制</span><br><span class="line">语法：</span><br></pre></td></tr></table></figure><p>&lt;acl_file??split&#x3D;’|’&gt;匹配文件</acl_file></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用例子</span><br></pre></td></tr></table></figure><p>&lt;acl_file??split&#x3D;’|’&gt;D:\project\eeee\test2\index.html</acl_file></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">匹配的路径要写具体的路径，像reg_file可使用正则就不需要写具体的路径</span><br><span class="line"></span><br><span class="line">#### filename</span><br><span class="line">说明：匹配一个或多个文件名</span><br><span class="line">范围：回应控制</span><br><span class="line">语法：</span><br></pre></td></tr></table></figure><p>&lt;acl_filename??split&#x3D;’|’&gt;匹配文件名</acl_filename></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用例子:</span><br></pre></td></tr></table></figure><p>&lt;acl_filename??split&#x3D;’|’&gt;index.html|test.php</acl_filename></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#### dir</span><br><span class="line">说明：匹配多个目录下的文件。按目录匹配</span><br><span class="line">范围：回应控制</span><br><span class="line">语法：</span><br></pre></td></tr></table></figure><p>&lt;acl_dir??split&#x3D;’|’&gt;匹配文件目录名</acl_dir></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用例子:</span><br></pre></td></tr></table></figure><p>&lt;acl_dir??split&#x3D;’|’&gt;D:\project\eeee\test2</acl_dir></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">#### reg_file</span><br><span class="line">说明：匹配一个或多个文件。可用正则表达式表示</span><br><span class="line">范围：回应控制</span><br><span class="line">语法：</span><br></pre></td></tr></table></figure><p>&lt;acl_reg_file??file&#x3D;’匹配文件’&gt;</acl_reg_file></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用例子:</span><br></pre></td></tr></table></figure><p>&lt;acl_reg_file??file&#x3D;’(D:\project\eeee\test2(.*))|D:\project\eeee\test(.*)’&gt;</acl_reg_file></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br></pre></td><td class="code"><pre><span class="line">上例是匹配test2和test这两个目录里的所有文件名</span><br><span class="line"></span><br><span class="line">#### reg_filename</span><br><span class="line">说明：匹配一个或多个文件名。可用正则表达式表示</span><br><span class="line">范围：回应控制</span><br><span class="line">语法：</span><br><span class="line">```</span><br><span class="line">&lt;acl_reg_filename??filename=&#x27;匹配文件名&#x27;&gt;&lt;/acl_reg_filename&gt;</span><br><span class="line">```</span><br><span class="line">使用例子:</span><br><span class="line">```</span><br><span class="line">&lt;acl_reg_filename??filename=&#x27;(index\.html)|(php\.php)&#x27;&gt;&lt;/acl_reg_filename&gt;</span><br><span class="line">```</span><br><span class="line"></span><br><span class="line">#### content_length</span><br><span class="line">说明：配置内容大小</span><br><span class="line">范围：回应控制</span><br><span class="line">语法：</span><br><span class="line">```</span><br><span class="line">&lt;acl_content_length??min=&#x27;匹配内容起始大小&#x27; max=&#x27;匹配内容最大大小&#x27; content_range=&#x27;返回内容范围&#x27;&gt;&lt;/acl_content_length&gt;</span><br><span class="line">```</span><br><span class="line">使用例子:</span><br><span class="line">```</span><br><span class="line">&lt;acl_content_length??min=&#x27;1&#x27; max=&#x27;100K&#x27; content_range=&#x27;1&#x27;&gt;&lt;/acl_content_length&gt;</span><br><span class="line">```</span><br><span class="line">参数的单位是字节，也可以在参数后面写单位,上例中是对1字节到100K的内容大小进行匹配</span><br><span class="line"></span><br><span class="line">#### mark</span><br><span class="line">请参考请求控制匹配模块的mark模块</span><br><span class="line">#### obj_flag</span><br><span class="line">说明：检测网页的状态</span><br><span class="line">范围：回应控制</span><br><span class="line">语法：</span><br><span class="line">```</span><br><span class="line">&lt;acl_obj_flag??flag=&#x27;参数&#x27;&gt;&lt;/acl_obj_flag&gt;</span><br><span class="line">```</span><br><span class="line">使用例子:</span><br><span class="line">```</span><br><span class="line">&lt;acl_obj_flag??flag=&#x27;nocache,&#x27;&gt;&lt;/acl_obj_flag&gt;</span><br><span class="line">```</span><br><span class="line">上例意思是：检测回应里面是否有不允许缓存的标识</span><br><span class="line"></span><br><span class="line">#### status_code</span><br><span class="line">说明：状态码</span><br><span class="line">范围：回应控制</span><br><span class="line">参数：</span><br><span class="line">eq是等于</span><br><span class="line">lt是小于</span><br><span class="line">gt是大于</span><br><span class="line">语法：</span><br><span class="line">```</span><br><span class="line">&lt;acl_status_code op=&#x27;参数&#x27; code=&#x27;状态码&#x27;&gt;&lt;/acl_status_code&gt;</span><br><span class="line">```</span><br><span class="line">使用例子:</span><br><span class="line">```</span><br><span class="line">&lt;acl_status_code op=&#x27;gt&#x27; code=&#x27;301&#x27;&gt;&lt;/acl_status_code&gt;</span><br><span class="line">```</span><br><span class="line"></span><br><span class="line">#### worker</span><br><span class="line">请参考请求控制匹配模块的worker模块</span><br><span class="line">回应控制标记模块</span><br><span class="line">#### cache_control</span><br><span class="line">说明：缓存标记</span><br><span class="line">范围: 回应控制</span><br><span class="line">参数：</span><br><span class="line">static：强制缓存静态化</span><br><span class="line">last_modified: 当勾选static这个选项后，勾选last-modified才会有用，勾选后会生成一个last-modified的头给浏览器(就是最后修改时间)</span><br><span class="line">soft: 勾选后就不会发送maxage给浏览器头</span><br><span class="line">语法：</span><br><span class="line">```</span><br><span class="line">&lt;mark_cache_control? ?max_age=&#x27;设置时间&#x27; static=&#x27;强制缓存静态化&#x27;&gt;&lt;/mark_cache_control&gt;</span><br><span class="line">```</span><br><span class="line">使用例子：</span><br><span class="line">```</span><br><span class="line">&lt;mark_cache_control? ?max_age=&#x27;120&#x27; static=&#x27;1&#x27;&gt;&lt;/mark_cache_control&gt;</span><br><span class="line">```</span><br><span class="line"></span><br><span class="line">#### content??</span><br><span class="line">说明：内容过滤（可以使用正则表达式进行内容过滤）</span><br><span class="line">范围: 回应控制</span><br><span class="line">语法：</span><br><span class="line">```</span><br><span class="line">&lt;mark_content? ?charset=&#x27;编码&#x27;&gt;&lt;![CDATA[过滤的内容]]&gt;&lt;/mark_content&gt;</span><br><span class="line">```</span><br><span class="line">使用例子：</span><br><span class="line">```</span><br><span class="line">&lt;mark_content? ?charset=&#x27;utf-8&#x27;&gt;&lt;![CDATA[(html)|(网站控制面板)]]&gt;&lt;/mark_content&gt;</span><br><span class="line">```</span><br><span class="line"></span><br><span class="line">#### response_flag</span><br><span class="line">说明：对回应给用户的请求作标记</span><br><span class="line">范围: 回应控制</span><br><span class="line">参数：</span><br><span class="line">nogzip: 不使用gzip压缩</span><br><span class="line">gzip: 启用gzip压缩</span><br><span class="line">nocache: 不缓存</span><br><span class="line">cache: 缓存</span><br><span class="line">nodiskcache: 不启用磁盘缓存</span><br><span class="line">语法：</span><br><span class="line">```</span><br><span class="line">&lt;mark_response_flag? ?flagvalue=&#x27;参数&#x27;&gt;&lt;/mark_response_flag&gt;</span><br><span class="line">```</span><br><span class="line">使用例子：</span><br><span class="line">```</span><br><span class="line">&lt;mark_response_flag? ?flagvalue=&#x27;gzip,&#x27;&gt;&lt;/mark_response_flag&gt;</span><br><span class="line">```</span><br><span class="line"></span><br><span class="line">#### add_header</span><br><span class="line">说明：增加自定义头</span><br><span class="line">范围: 回应控制</span><br><span class="line">语法：</span><br><span class="line">```</span><br><span class="line">&lt;mark_add_header? ?attr=&#x27;属性&#x27; val=&#x27;参数&#x27;&gt;&lt;/mark_add_header&gt;</span><br><span class="line">```</span><br><span class="line">使用例子:</span><br><span class="line">```</span><br><span class="line">&lt;mark_add_header? ?attr=&#x27;http-header&#x27; val=&#x27;kangle&#x27;&gt;&lt;/mark_add_header&gt;</span><br><span class="line">```</span><br><span class="line"></span><br><span class="line">#### remove_header</span><br><span class="line">请参考请求控制标记模块的remove_header模块</span><br><span class="line">#### replace_header</span><br><span class="line">说明：替换http头(注：用于反代或cdn，替换源的http头)</span><br><span class="line">范围: 回应控制</span><br><span class="line">语法：</span><br><span class="line">```</span><br><span class="line">&lt;mark_replace_header? ?attr=&#x27;http头名&#x27; val=&#x27;原始名&#x27; replace=&#x27;替换后名&#x27;&gt;&lt;/mark_replace_header&gt;</span><br><span class="line">```</span><br><span class="line">使用例子：</span><br><span class="line">```</span><br><span class="line">&lt;mark_replace_header? ?attr=&#x27;http-header&#x27; val=&#x27;test&#x27; replace=&#x27;test2&#x27;&gt;&lt;/mark_replace_header&gt;</span><br><span class="line">```</span><br><span class="line"></span><br><span class="line">#### footer</span><br><span class="line">说明：插入内容在前面或者后面</span><br><span class="line">范围: 回应控制</span><br><span class="line">参数：</span><br><span class="line">head：插入内空在头部</span><br><span class="line">replace: 选中后会替换页面的所有内容</span><br><span class="line">语法：</span><br><span class="line">```</span><br><span class="line">&lt;mark_footer??head=&#x27;插入广告在头部&#x27;&gt;&lt;![CDATA[插入的内容]]&gt;&lt;/mark_footer&gt;</span><br><span class="line">```</span><br><span class="line">使用例子：</span><br><span class="line">```</span><br><span class="line">&lt;mark_footer??head=&#x27;1&#x27;&gt;&lt;![CDATA[ad-test]]&gt;&lt;/mark_footer&gt;</span><br><span class="line">```</span><br><span class="line"></span><br><span class="line">#### extend_flag</span><br><span class="line">请参考请求控制标记模块的extend_flag模块</span><br><span class="line">http_only</span><br><span class="line">说明：防XSS跨站脚本攻击</span><br><span class="line">范围: 回应控制</span><br><span class="line">语法：</span><br><span class="line">```</span><br><span class="line">&lt;mark_http_only? ?cookie=&#x27;参数&#x27;&gt;&lt;/mark_http_only&gt;</span><br><span class="line">```</span><br><span class="line">使用例子：</span><br><span class="line">```</span><br><span class="line">&lt;mark_http_only? ?cookie=&#x27;.&#x27;&gt;&lt;/mark_http_only&gt;</span><br><span class="line">```</span><br><span class="line">.是匹配所有的cookie, 扩展阅读,案例说明.</span><br><span class="line"></span><br><span class="line">#### mark</span><br><span class="line">请参考请求控制匹配模块的mark模块</span><br><span class="line"></span><br><span class="line">#### replace_content</span><br><span class="line">说明：替换内容</span><br><span class="line">范围: 回应控制</span><br><span class="line">参数：</span><br><span class="line">charset：编码</span><br><span class="line">buffer：缓存大小</span><br><span class="line">replaced_stop:勾选此选项后，含有替换内容的页面会被全部替换(注：replaced_stop选中后buffer选项才会生效)</span><br><span class="line">语法：</span><br><span class="line">```</span><br><span class="line">&lt;mark_replace_content? ?content=&#x27;原始内容&#x27; replace=&#x27;替换后内容&#x27;??charset=&#x27;编码&#x27; buffer=&#x27;缓存大小&#x27;&gt;&lt;/mark_replace_content&gt;</span><br><span class="line">```</span><br><span class="line">使用例子：</span><br></pre></td></tr></table></figure><p>&lt;mark_replace_content? ?content&#x3D;’test’ replace&#x3D;’php’??charset&#x3D;’utf-8’ replaced_stop&#x3D;’1’ buffer&#x3D;’1M’&gt;</mark_replace_content></p><p>&#96;&#96;&#96;</p><p>转载自：<a href="https://bbs.itzmx.com/thread-97247-1-3.html">https://bbs.itzmx.com/thread-97247-1-3.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 建站知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> mysql </tag>
            
            <tag> kangle </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kangle排除某IP地址不触发CC防御规则</title>
      <link href="/posts/f7c66926.html"/>
      <url>/posts/f7c66926.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->在部署360的CDN后，导致某个站点有时候出现302。查看日志后发现kangle的防御cc规则拉黑了360的CDN IP，导致站点无法回源。<p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20210826205918.png" alt="kangle"></p><p>大概流程：<code>请求控制</code> &gt; <code>匹配模块</code> &gt; <code>src/srcs</code> &gt; <code>勾选“非”</code> &gt; <code>标记模块</code> &gt; <code>anti_cc</code></p><p><img src="https://img.jinjun.top/images/usr/uploads/2021/05/20210826213054.png" alt="kangle"></p><h3 id="src匹配模块"><a href="#src匹配模块" class="headerlink" title="src匹配模块"></a>src匹配模块</h3><p>说明：匹配源IP地址或IP段<br>范围：请求控制和回应控制</p><p>语法使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;acl_src&gt;IP或者IP段&lt;/acl_src&gt;</span><br></pre></td></tr></table></figure><p>食用方法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;acl_src&gt;123.6.13.0/24&lt;/acl_src&gt;</span><br></pre></td></tr></table></figure><h3 id="srcsp匹配模块"><a href="#srcsp匹配模块" class="headerlink" title="srcsp匹配模块"></a>srcsp匹配模块</h3><p>说明：多IP段<br>范围：请求控制和回应控制</p><p>语法使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;acl_srcs split=&#x27;|&#x27;&gt;IP段地址&lt;/acl_srcs&gt;</span><br></pre></td></tr></table></figure><p>食用方法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;acl_srcs split=&#x27;|&#x27;&gt;192.168.1.|192.168.2.&lt;/acl_srcs&gt;</span><br></pre></td></tr></table></figure><p>注意要插入在<code>replace_ip</code>顺序之前,不然无法匹配IP</p>]]></content>
      
      
      <categories>
          
          <category> 建站知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> kangle </tag>
            
            <tag> CDN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux screen后台保持运行任务</title>
      <link href="/posts/20848e4e.html"/>
      <url>/posts/20848e4e.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->很多时候可能会遇到网络掉线或者长时间的编译，例如使用海外服务器的时候有时候网络波动，SSH客户端会掉线或者工作丢失，导致正在编辑的数据或者正在编译一半的软件突然中断，这个时候我们就可以使用一个Linux的神器 - screen，可以帮助我们在运行数据的时候不被掉线或者网络波动所影响。<h3 id="安装screen"><a href="#安装screen" class="headerlink" title="安装screen"></a>安装screen</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Centos安装</span><br><span class="line">yum install screen</span><br><span class="line"></span><br><span class="line"># Dabian/Ubuntu</span><br><span class="line">apt install screen</span><br></pre></td></tr></table></figure><p>软件官网：<a href="http://www.gnu.org/software/screen/">http://www.gnu.org/software/screen/</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$&gt; screen [-AmRvx -ls -wipe][-d &lt;作业名称&gt;][-h &lt;行数&gt;][-r &lt;作业名称&gt;][-s ][-S &lt;作业名称&gt;]</span><br><span class="line">-A 　将所有的视窗都调整为目前终端机的大小。</span><br><span class="line">-d   &lt;作业名称&gt; 　将指定的screen作业离线。</span><br><span class="line">-h   &lt;行数&gt; 　指定视窗的缓冲区行数。</span><br><span class="line">-m 　即使目前已在作业中的screen作业，仍强制建立新的screen作业。</span><br><span class="line">-r   &lt;作业名称&gt; 　恢复离线的screen作业。</span><br><span class="line">-R 　先试图恢复离线的作业。若找不到离线的作业，即建立新的screen作业。</span><br><span class="line">-s 　指定建立新视窗时，所要执行的shell。</span><br><span class="line">-S   &lt;作业名称&gt; 　指定screen作业的名称。</span><br><span class="line">-v 　显示版本信息。</span><br><span class="line">-x 　恢复之前离线的screen作业。</span><br><span class="line">-ls或--list 　显示目前所有的screen作业。</span><br><span class="line">-wipe 　检查目前所有的screen作业，并删除已经无法使用的screen作业。</span><br></pre></td></tr></table></figure><p>[collapse]<br> [collapse-item label&#x3D;”screen常用快捷键”]<br>Ctrl-a n -&gt; Next，切换到下一个会话<br>Ctrl-a p -&gt; Previous，切换到前一个会话<br>Ctrl-a 0..9 -&gt; 切换到第 0..9 个会话<br>Ctrl-a d -&gt; detach，暂时离开当前session，将目前的会话丢到后台执行。<br>Ctrl-a z -&gt; 把当前session放到后台执行，用 shell 的 fg 命令则可回去。<br>Ctrl-a w -&gt; 显示所有窗口列表<br>Ctrl-a k -&gt; kill window，强行关闭当前的 window<br>Ctrl-a w -&gt; 显示所有窗口列表<br>Ctrl-a [ -&gt; 进入 copy mode，在 copy mode 下可以回滚、搜索、复制就像用使用 vi 一样<br>Ctrl-b -&gt; Backward，PageUp<br>Ctrl-f -&gt; Forward，PageDown<br>H(大写) -&gt; High，将光标移至左上角<br>L -&gt; Low，将光标移至左下角<br>0 -&gt; 移到行首<br>$ -&gt; 行末<br>w -&gt; forward one word，以字为单位往前移<br>b -&gt; backward one word，以字为单位往后移<br>Space -&gt; 第一次按为标记区起点，第二次按为终点<br>Esc -&gt; 结束 copy mode<br>Ctrl-a ] -&gt; Paste，把刚刚在 copy mode 选定的内容贴上<br> [&#x2F;collapse-item]<br>[&#x2F;collapse]</p><h3 id="创建运行命令"><a href="#创建运行命令" class="headerlink" title="创建运行命令"></a>创建运行命令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 直接运行</span><br><span class="line">screen</span><br><span class="line"></span><br><span class="line"># 创建会话名 并进入</span><br><span class="line">screen -S name</span><br></pre></td></tr></table></figure><h3 id="重新连接screen会话"><a href="#重新连接screen会话" class="headerlink" title="重新连接screen会话"></a>重新连接screen会话</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 查询所有screen会话</span><br><span class="line">screen -ls</span><br><span class="line"></span><br><span class="line"># 恢复screen会话</span><br><span class="line">screen -r name/pid</span><br><span class="line"></span><br><span class="line"># 关闭当前对话进入某个对话</span><br><span class="line">screen -d -r name/pid</span><br></pre></td></tr></table></figure><h4 id="会话分离"><a href="#会话分离" class="headerlink" title="会话分离"></a>会话分离</h4><p>你可以不中断screen窗口中程序的运行而暂时断开（detach）screen会话，并在随后时间重新连接（attach）该会话，重新控制各窗口中运行的程序。</p><ol><li><p>可以在当前的screen窗口 使用快捷键 <code>ctrl a + d</code> 即可实现会话分离，这时窗口会弹出[detached]的提示，并回到主窗口。</p></li><li><p>远程分离，detach某个session，一般适用于某个会话未断开，但界面由于超时已失效的情况。需要分离会话重新连接的情况。</p></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 远程detach会话</span><br><span class="line">screen -d name/pid</span><br></pre></td></tr></table></figure><h4 id="关闭窗口"><a href="#关闭窗口" class="headerlink" title="关闭窗口"></a>关闭窗口</h4><ul><li>使用kill 关闭会话窗口</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 列出所有会话</span><br><span class="line">screen -ls</span><br><span class="line"></span><br><span class="line"># 使用kill结束进程</span><br><span class="line">kill -9 -pid</span><br></pre></td></tr></table></figure><ul><li><p>使用<code>Ctrl a +k</code>杀死当前窗口和窗口中运行的程序</p></li><li><p>使用<code>Ctrl a</code>然后输入<code>quit</code>命令退出Screen会话。需要注意的是，这样退出会杀死所有窗口并退出其中运行的所有程序</p></li></ul><h4 id="清理多余窗口"><a href="#清理多余窗口" class="headerlink" title="清理多余窗口"></a>清理多余窗口</h4><p>当窗口被杀死后，再用<code>screen -ls</code>可以看到该窗口后面的(???dead)字样，说明窗口死了，但是仍在占用空间。这时需要清除窗口</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#自动清除死去的窗口</span><br><span class="line">screen -wipe</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 建站知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CentOS </tag>
            
            <tag> Linux </tag>
            
            <tag> screen </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网站使用自定义字体及加载优化</title>
      <link href="/posts/30d5699.html"/>
      <url>/posts/30d5699.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->在网站建设过程中，很多时候我们不希望使用默认的字体而使用更加个性化的字体，它能使网站的字体显示更加丰富多样，而这种字体是本地系统所没有的内置字体，使用css的@font-face 属性在网页中嵌入自定义字体成为最佳选择。<h2 id="字体下载"><a href="#字体下载" class="headerlink" title="字体下载"></a>字体下载</h2><ul><li>字体天下：<a href="https://www.fonts.net.cn/">https://www.fonts.net.cn/</a></li><li>有字体：<a href="https://www.webfont.com/">https://www.webfont.com/</a></li><li>字体转换：<a href="https://www.fontke.com/tool/convfont/">https://www.fontke.com/tool/convfont/</a></li><li>字体转换：<a href="https://www.fontsquirrel.com/tools/webfont-generator">https://www.fontsquirrel.com/tools/webfont-generator</a></li><li>字体转换：<a href="https://convertio.co/zh/font-converter/">https://convertio.co/zh/font-converter/</a></li></ul><p>这里推荐使用有字体，注册就能使用自带CDN加速，如果在网上下载的字体，通常只有一种格式需要进行字体转换为浏览器所识别格式。</p><h2 id="CSS声明使用该字体"><a href="#CSS声明使用该字体" class="headerlink" title="CSS声明使用该字体"></a>CSS声明使用该字体</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">@font-face &#123;</span><br><span class="line">font-family: &quot;Normal&quot;;</span><br><span class="line">src: local(&#x27;PingFang SC&#x27;),local(&#x27;Hiragino Sans GB&#x27;),local(&#x27;Microsoft YaHei&#x27;),</span><br><span class="line">url(/blockdole.woff2) format(&quot;woff2&quot;),</span><br><span class="line">url(/blockdole.woff) format(&quot;woff&quot;),</span><br><span class="line">url(/blockdole.eot) format(&quot;embedded-opentype&quot;),</span><br><span class="line">url(&#x27;/Normal.ttf&#x27;) format(&#x27;truetype&#x27;),</span><br><span class="line">url(&#x27;/Normal.svg#Normal&#x27;) format(&#x27;svg&#x27;);</span><br><span class="line">font-display: swap;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>全局使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">body &#123;font-family: Normal!important;&#125;</span><br></pre></td></tr></table></figure><p>在需要到地方调用，比如在footer底部使用自定义字体</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.footer p&#123;</span><br><span class="line">font-family: ‘Normal!important’;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>[alt type&#x3D;”warning”]</p><ul><li>font-family 表示自定义字体名称</li><li>.WOFF 或 .WOFF2 格式字体，适用于各大主流浏览器</li><li>.TTF 或.OTF 格式字体，适用于 Firefox 3.5、Safari、Opera 浏览器</li><li>.EOT 格式字体，适用于 Internet Explorer 4.0+浏览器</li><li>.SVG 格式字体，适用于 Chrome、IPhone 浏览器<br>[&#x2F;alt]</li></ul><h3 id="字体沾染优化"><a href="#字体沾染优化" class="headerlink" title="字体沾染优化"></a>字体沾染优化</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">font-display: swap;</span><br></pre></td></tr></table></figure><p>swap告诉浏览器使用字体的文本应立即使用系统字体显示。自定义字体准备好后，它将替换系统字体。避免显示隐形文字。</p><h3 id="字体加载优化"><a href="#字体加载优化" class="headerlink" title="字体加载优化"></a>字体加载优化</h3><p>使用提前预加载，可以用于更早的获取到字体文件。需要在网站haed头部中插入一下字体外链代码。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- laod fonts --&gt;</span><br><span class="line">&lt;link rel=&quot;preload&quot; href=&quot;/Normal.woff2&quot; as=&quot;font&quot; type=&quot;font/woff2&quot; crossorigin&gt;</span><br><span class="line">&lt;link rel=&quot;preload&quot; href=&quot;/Normal.woff&quot; as=&quot;font&quot; type=&quot;font/woff2&quot; crossorigin&gt;</span><br></pre></td></tr></table></figure><p>crossorigin属性表示允许接受不同CROS域请求资源，如果不设置浏览器可能会把预加载字体忽略掉，如果字体放在本地，可以不用设置。</p><p>as &#x3D; “font” type &#x3D;” font &#x2F; woff2” 属性告诉浏览器以字体形式下载此资源。</p>]]></content>
      
      
      <categories>
          
          <category> 建站知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
            <tag> 静态网站 </tag>
            
            <tag> 网站优化 </tag>
            
            <tag> 字体 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac OS键盘常用快捷键</title>
      <link href="/posts/c8dc8ca8.html"/>
      <url>/posts/c8dc8ca8.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->最近弄了一台Mac mini主机，尝试玩了几天。感觉还不错，但是Mac的操作习惯不和window又一样，关闭和缩小图标巨小。很不习惯，所以最近也在学习Mac快捷键，方便以后操作。<p><img src="https://img.jinjun.top/images/usr/uploads/2021/03/1615737492.jpg" alt="kuaijie4.jpg"></p><h2 id="键位布局"><a href="#键位布局" class="headerlink" title="键位布局"></a>键位布局</h2><table><thead><tr><th>图形</th><th>Mac键盘</th><th align="center">Win键盘</th></tr></thead><tbody><tr><td>?</td><td>Command 键</td><td align="center">微软图标</td></tr><tr><td>?</td><td>Control 键</td><td align="center">Alt 键</td></tr><tr><td>?</td><td>Option 键</td><td align="center">Ctrl 键</td></tr><tr><td>?</td><td>Shift 键</td><td align="center">Shift 键</td></tr><tr><td>?</td><td>Caps Lock 键</td><td align="center">Caps 键</td></tr><tr><td>Fn</td><td>Fn 键</td><td align="center">Fn 键</td></tr></tbody></table><h2 id="复制、粘贴、撤销、全选"><a href="#复制、粘贴、撤销、全选" class="headerlink" title="复制、粘贴、撤销、全选"></a>复制、粘贴、撤销、全选</h2><table><thead><tr><th align="center">组合键</th><th>作用</th></tr></thead><tbody><tr><td align="center">Command-X</td><td>剪切所选项并拷贝到剪贴板。</td></tr><tr><td align="center">Command-C</td><td>将所选项拷贝到剪贴板。</td></tr><tr><td align="center">Command-V</td><td>将剪贴板的内容粘贴到当前文稿或应用中。</td></tr><tr><td align="center">Command-Z</td><td>撤销上一个命令。</td></tr><tr><td align="center">Command-A</td><td>全选各项。</td></tr></tbody></table><h2 id="应用窗口常用快捷键"><a href="#应用窗口常用快捷键" class="headerlink" title="应用窗口常用快捷键"></a>应用窗口常用快捷键</h2><table><thead><tr><th align="center">组合键</th><th>作用</th></tr></thead><tbody><tr><td align="center">Command-F</td><td>查找文稿中的项目或打开“查找”窗口。</td></tr><tr><td align="center">Command-G</td><td>再次查找：查找之前所找到项目出现的下一个位置。</td></tr><tr><td align="center">Shift-Command-G</td><td>要查找出现的上一个位置。</td></tr><tr><td align="center">Command-H</td><td>隐藏最前面的应用的窗口。</td></tr><tr><td align="center">Option-Command-H</td><td>要查看最前面的应用但隐藏所有其他应用。</td></tr><tr><td align="center">Command-M</td><td>将最前面的窗口最小化至“程序坞”。</td></tr><tr><td align="center">Option-Command-M</td><td>要最小化最前面的应用的所有窗口。</td></tr><tr><td align="center">Command-O</td><td>打开所选项，或打开一个对话框以选择要打开的文件。</td></tr><tr><td align="center">Command-P</td><td>打印当前文稿。</td></tr><tr><td align="center">Command-S</td><td>存储当前文稿。</td></tr><tr><td align="center">Command-T</td><td>打开新标签页。</td></tr><tr><td align="center">Command-W</td><td>关闭最前面的窗口。</td></tr><tr><td align="center">Option-Command-W</td><td>关闭应用的所有窗口。</td></tr><tr><td align="center">Option-Command-Esc</td><td>强制退出应用。</td></tr><tr><td align="center">Command-空格键</td><td>显示或隐藏“聚焦”搜索栏。</td></tr><tr><td align="center">Control-Command–空格键</td><td>显示字符检视器，您可以从中选择表情符号和其他符号。</td></tr><tr><td align="center">Control-Command-F</td><td>全屏使用应用（如果应用支持）。</td></tr><tr><td align="center">Command-Tab</td><td>在多个打开的 App 之间切换到下一个最近使用的 App。</td></tr></tbody></table><h2 id="屏幕截图、录像"><a href="#屏幕截图、录像" class="headerlink" title="屏幕截图、录像"></a>屏幕截图、录像</h2><table><thead><tr><th align="center">组合键</th><th>作用</th></tr></thead><tbody><tr><td align="center">Command-Shift-3</td><td>将屏幕捕捉到文件。</td></tr><tr><td align="center">Command-Shift-Control-3</td><td>将屏幕内容捕捉到剪贴板。</td></tr><tr><td align="center">Command-Shift-4</td><td>将所选屏幕内容捕捉到一个文件。</td></tr><tr><td align="center">Command-Shift-Control-4</td><td>将所选屏幕内容捕捉到剪贴板。</td></tr><tr><td align="center">Shift-Command-5</td><td>macOS Mojave以上版本，拍摄截屏或录制屏幕。</td></tr></tbody></table><h2 id="访达和系统快捷键"><a href="#访达和系统快捷键" class="headerlink" title="访达和系统快捷键"></a>访达和系统快捷键</h2><table><thead><tr><th align="center">组合键</th><th>作用</th></tr></thead><tbody><tr><td align="center">Command-D</td><td>复制所选文件。</td></tr><tr><td align="center">Command-E</td><td>推出所选磁盘或宗卷。</td></tr><tr><td align="center">Command-F</td><td>在“访达”窗口中开始“聚焦”搜索。</td></tr><tr><td align="center">Command-I</td><td>显示所选文件的“显示简介”窗口。</td></tr><tr><td align="center">Command-R</td><td>(1) 显示所选别名对应的原始文件。(2) 刷新或重新载入页面。(3) 再次检查有没有软件更新。</td></tr><tr><td align="center">Shift-Command-C</td><td>打开“电脑”窗口。</td></tr><tr><td align="center">Shift-Command-D</td><td>打开“桌面”文件夹。</td></tr><tr><td align="center">Shift-Command-F</td><td>打开“最近使用”窗口，其中显示了您最近查看或更改过的所有文件。</td></tr><tr><td align="center">Shift-Command-G</td><td>打开“前往文件夹”窗口。</td></tr><tr><td align="center">Shift-Command-H</td><td>打开当前 macOS 用户帐户的个人文件夹。</td></tr><tr><td align="center">Shift-Command-I</td><td>打开 iCloud 云盘。</td></tr><tr><td align="center">Shift-Command-K</td><td>打开“网络”窗口。</td></tr><tr><td align="center">Option-Command-L</td><td>打开“下载”文件夹。</td></tr><tr><td align="center">Shift-Command-N</td><td>新建文件夹。</td></tr><tr><td align="center">Shift-Command-O</td><td>打开“文稿”文件夹。</td></tr><tr><td align="center">Shift-Command-P</td><td>在“访达”窗口中显示或隐藏预览面板。</td></tr><tr><td align="center">Shift-Command-R</td><td>打开“隔空投送”窗口。</td></tr><tr><td align="center">Shift-Command-T</td><td>显示或隐藏“访达”窗口中的标签栏。</td></tr><tr><td align="center">Ctrl-Shift-Command-T</td><td>将所选的“访达”项目添加到“程序坞”（OS X Mavericks 或更高版本）</td></tr><tr><td align="center">Shift-Command-U</td><td>打开“实用工具”文件夹。</td></tr><tr><td align="center">Option-Command-D</td><td>显示或隐藏“程序坞”。</td></tr><tr><td align="center">Control-Command-T</td><td>将所选项添加到边栏（OS X Mavericks 或更高版本）。</td></tr><tr><td align="center">Option-Command-P</td><td>隐藏或显示“访达”窗口中的路径栏。</td></tr><tr><td align="center">Option-Command-S</td><td>隐藏或显示“访达”窗口中的边栏。</td></tr><tr><td align="center">Command–斜线 (&#x2F;)</td><td>隐藏或显示“访达”窗口中的状态栏。</td></tr><tr><td align="center">Command-J</td><td>显示“显示”选项。</td></tr><tr><td align="center">Command-K</td><td>打开“连接服务器”窗口。</td></tr><tr><td align="center">Control-Command-A</td><td>为所选项制作替身。</td></tr><tr><td align="center">Command-N</td><td>打开一个新的“访达”窗口。</td></tr><tr><td align="center">Option-Command-N</td><td>新建智能文件夹。</td></tr><tr><td align="center">Command-T</td><td>在当前“访达”窗口中有单个标签页开着的状态下显示或隐藏标签页栏。</td></tr><tr><td align="center">Option-Command-T</td><td>在当前“访达”窗口中有单个标签页开着的状态下显示或隐藏工具栏。</td></tr><tr><td align="center">Option-Command-V</td><td>将剪贴板中的文件从原始位置移动到当前位置。</td></tr><tr><td align="center">Command-Y</td><td>使用“快速查看”预览所选文件。</td></tr><tr><td align="center">Option-Command-Y</td><td>显示所选文件的快速查看幻灯片显示。</td></tr><tr><td align="center">Command-1</td><td>以图标方式显示“访达”窗口中的项目。</td></tr><tr><td align="center">Command-2</td><td>以列表方式显示“访达”窗口中的项目。</td></tr><tr><td align="center">Command-3</td><td>以分栏方式显示“访达”窗口中的项目。</td></tr><tr><td align="center">Command-4</td><td>以画廊方式显示“访达”窗口中的项目。</td></tr><tr><td align="center">Command–左中括号 ([)</td><td>前往上一文件夹。</td></tr><tr><td align="center">Command–右中括号 (])</td><td>前往下一个文件夹。</td></tr><tr><td align="center">Command–上箭头</td><td>打开包含当前文件夹的文件夹。</td></tr><tr><td align="center">Command–Control–上箭头</td><td>在新窗口中打开包含当前文件夹的文件夹。</td></tr><tr><td align="center">Command–下箭头</td><td>打开所选项。</td></tr><tr><td align="center">右箭头</td><td>打开所选文件夹。这个快捷键仅在列表视图中有效。</td></tr><tr><td align="center">左箭头</td><td>关闭所选文件夹。这个快捷键仅在列表视图中有效。</td></tr><tr><td align="center">Command-Delete</td><td>将所选项移到废纸篓。</td></tr><tr><td align="center">Shift-Command-Delete</td><td>清倒废纸篓。</td></tr><tr><td align="center">Option-Shift-Command-Delete</td><td>清倒废纸篓而不显示确认对话框。</td></tr><tr><td align="center">连按 Option 键</td><td>在单独的窗口中打开项目，然后关闭原始窗口。</td></tr><tr><td align="center">连按 Command 键</td><td>在单独的标签页或窗口中打开文件夹。</td></tr><tr><td align="center">按住 Command 键拖移到另一个宗卷</td><td>将拖移的项目移到另一个宗卷，而不是拷贝它。</td></tr><tr><td align="center">按住 Option 键拖移</td><td>拷贝托移的项目。拖移项目时指针会随之变化。</td></tr><tr><td align="center">拖移时按住 Option-Command</td><td>为拖移的项目制作替身。拖移项目时指针会随之变化。</td></tr><tr><td align="center">按住 Option 键点按开合三角</td><td>打开所选文件夹内的所有文件夹。此快捷键仅在列表视图中有效。</td></tr><tr><td align="center">按住 Command 键点按窗口标题</td><td>查看包含当前文件夹的文件夹。</td></tr></tbody></table><h2 id="文稿快捷键"><a href="#文稿快捷键" class="headerlink" title="文稿快捷键"></a>文稿快捷键</h2><table><thead><tr><th align="center">组合键</th><th>作用</th></tr></thead><tbody><tr><td align="center">Command-B</td><td>以粗体显示所选文本，或者打开或关闭粗体显示功能。</td></tr><tr><td align="center">Command-I</td><td>以斜体显示所选文本，或者打开或关闭斜体显示功能。</td></tr><tr><td align="center">Command-K</td><td>添加网页链接。</td></tr><tr><td align="center">Command-U</td><td>对所选文本加下划线，或者打开或关闭加下划线功能。</td></tr><tr><td align="center">Command-T</td><td>显示或隐藏“字体”窗口。</td></tr><tr><td align="center">Command-D</td><td>从“打开”对话框或“存储”对话框内选择“桌面”文件夹。</td></tr><tr><td align="center">Control-Command-D</td><td>显示或隐藏所选字词的定义。</td></tr><tr><td align="center">Shift-Command–冒号 (:)</td><td>显示“拼写和语法”窗口。</td></tr><tr><td align="center">Command–分号 (;)</td><td>查找文稿中拼写错误的字词。</td></tr><tr><td align="center">Option-Delete</td><td>删除插入点左边的字词。</td></tr><tr><td align="center">Control-H</td><td>删除插入点左边的字符。也可以使用 Delete 键。</td></tr><tr><td align="center">Control-D</td><td>删除插入点右边的字符。也可以使用 Fn-Delete。</td></tr><tr><td align="center">Fn-Delete</td><td>在没有向前删除   键的键盘上向前删除。也可以使用 Control-D。</td></tr><tr><td align="center">Control-K</td><td>删除插入点与行或段落末尾处之间的文本。</td></tr><tr><td align="center">Fn-上箭头：Page Up</td><td>向上滚动一页。</td></tr><tr><td align="center">Fn–下箭头：Page Down</td><td>向下滚动一页。</td></tr><tr><td align="center">Fn–左箭头：Home</td><td>滚动到文稿开头。</td></tr><tr><td align="center">Fn–右箭头：End</td><td>滚动到文稿末尾。</td></tr><tr><td align="center">Command–上箭头</td><td>将插入点移至文稿开头。</td></tr><tr><td align="center">Command–下箭头</td><td>将插入点移至文稿末尾。</td></tr><tr><td align="center">Command–左箭头</td><td>将插入点移至当前行的行首。</td></tr><tr><td align="center">Command–右箭头</td><td>将插入点移至当前行的行尾。</td></tr><tr><td align="center">Option–左箭头</td><td>将插入点移至上一字词的词首。</td></tr><tr><td align="center">Option–右箭头</td><td>将插入点移至下一字词的词尾。</td></tr><tr><td align="center">Shift-Command–上箭头</td><td>选中插入点与文稿开头之间的文本。</td></tr><tr><td align="center">Shift-Command–下箭头</td><td>选中插入点与文稿末尾之间的文本。</td></tr><tr><td align="center">Shift-Command–左箭头</td><td>选中插入点与当前行行首之间的文本。</td></tr><tr><td align="center">Shift-Command–右箭头</td><td>选中插入点与当前行行尾之间的文本。</td></tr><tr><td align="center">Shift–上箭头</td><td>将文本选择范围扩展到上一行相同水平位置的最近字符处。</td></tr><tr><td align="center">Shift–下箭头</td><td>将文本选择范围扩展到下一行相同水平位置的最近字符处。</td></tr><tr><td align="center">Shift–左箭头</td><td>将文本选择范围向左扩展一个字符。</td></tr><tr><td align="center">Shift–右箭头</td><td>将文本选择范围向右扩展一个字符。</td></tr><tr><td align="center">Option–Shift–上箭头</td><td>将文本选择范围扩展到当前段落的段首，再按一次则扩展到下一段落的段首。</td></tr><tr><td align="center">Option–Shift–下箭头</td><td>将文本选择范围扩展到当前段落的段尾，再按一次则扩展到下一段落的段尾。</td></tr><tr><td align="center">Option–Shift–左箭头</td><td>将文本选择范围扩展到当前字词的词首，再按一次则扩展到后一字词的词首。</td></tr><tr><td align="center">Option–Shift–左箭头</td><td>将文本选择范围扩展到当前字词的词尾，再按一次则扩展到后一字词的词尾。</td></tr><tr><td align="center">Control–A</td><td>移至行或段落的开头。</td></tr><tr><td align="center">Control–E</td><td>移至行或段落的末尾。</td></tr><tr><td align="center">Control–F</td><td>向前移动一个字符。</td></tr><tr><td align="center">Control–B</td><td>向后移动一个字符。</td></tr><tr><td align="center">Control–L</td><td>将光标或所选内容置于可见区域中央。</td></tr><tr><td align="center">Control–P</td><td>上移一行。</td></tr><tr><td align="center">Control–N</td><td>下移一行。</td></tr><tr><td align="center">Control–O</td><td>在插入点后新插入一行。</td></tr><tr><td align="center">Control–T</td><td>将插入点后面的字符与插入点前面的字符交换。</td></tr><tr><td align="center">Command–左花括号 ({)</td><td>左对齐。</td></tr><tr><td align="center">Command–右花括号 (})</td><td>右对齐。</td></tr><tr><td align="center">Shift-Command–竖线</td><td>居中对齐。</td></tr><tr><td align="center">Option-Command-F</td><td>前往搜索栏。</td></tr><tr><td align="center">Option-Command-T</td><td>显示或隐藏应用中的工具栏。</td></tr><tr><td align="center">Option-Command-C</td><td>拷贝样式：将所选项的格式设置拷贝到剪贴板。</td></tr><tr><td align="center">Option-Command-V</td><td>粘贴样式：将拷贝的样式应用到所选项。</td></tr><tr><td align="center">Option-Shift-Command-V</td><td>粘贴并匹配样式：将周围内容的样式应用到粘贴在该内容中的项目。</td></tr><tr><td align="center">Option-Command-I</td><td>显示或隐藏检查器窗口。</td></tr><tr><td align="center">Shift-Command-P：页面设置</td><td>显示用于选择文稿设置的窗口。</td></tr><tr><td align="center">Shift-Command-S</td><td>显示“存储为”对话框或复制当前文稿。</td></tr><tr><td align="center">Shift-Command-减号 (-)</td><td>缩小所选项。</td></tr><tr><td align="center">Shift-Command-加号 (+)</td><td>放大所选项。Command–等号 (&#x3D;) 可实现相同的功能。</td></tr><tr><td align="center">Shift-Command–问号 (?)</td><td>打开“帮助”菜单。</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 资源分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MAC </tag>
            
            <tag> 快捷键 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL启动报错分析</title>
      <link href="/posts/15e746f4.html"/>
      <url>/posts/15e746f4.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->刚刚编译完MySQL数据库无缘无故不能链接，重启或者连接都报错。<h2 id="故障"><a href="#故障" class="headerlink" title="故障"></a>故障</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@Jy ~]# mysql</span><br><span class="line">ERROR 2002 (HY000): Can&#x27;t connect to local MySQL server through socket &#x27;/usr/local/mysql/mysql.sock&#x27; (2)</span><br><span class="line">[root@Jy ~]# service mysqld start</span><br><span class="line">Starting MySQL.. ERROR! The server quit without updating PID file (/usr/local/mysql/data/mysqld.pid).</span><br></pre></td></tr></table></figure><h3 id="故障分析"><a href="#故障分析" class="headerlink" title="故障分析"></a>故障分析</h3><h4 id="1、配置文件my-cnf问题"><a href="#1、配置文件my-cnf问题" class="headerlink" title="1、配置文件my.cnf问题"></a>1、配置文件my.cnf问题</h4><p>MySQL在启动过程中，会寻找配置文件<code>my.cnf</code>这个文件要指定<code>datadir</code>数据库的数据目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#datedir是指向你的数据库数据目录</span><br><span class="line">datadir=/date/sqldb</span><br></pre></td></tr></table></figure><h4 id="2、MySQL用户权限"><a href="#2、MySQL用户权限" class="headerlink" title="2、MySQL用户权限"></a>2、MySQL用户权限</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 赋予安装目录权限</span><br><span class="line">chown -R mysql:mysql /usr/local/mysql</span><br><span class="line"># 赋予数据目录权限</span><br><span class="line">chown -R mysql:mysql /date/sqldb</span><br></pre></td></tr></table></figure><h4 id="3、skip-federated字段问题"><a href="#3、skip-federated字段问题" class="headerlink" title="3、skip-federated字段问题"></a>3、skip-federated字段问题</h4><p>检查<code>my.cnf</code>是否存在<code>skip-federated</code>字段，如果有请注释或者删除</p><h4 id="4、安装问题"><a href="#4、安装问题" class="headerlink" title="4、安装问题"></a>4、安装问题</h4><p>可能在编译安装过程中，重复安装或者二次安装。产生了残余数据影响了启动</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -name mysql-binlog*</span><br></pre></td></tr></table></figure><p>查看MySQL二进制目录，是否存在<code>mysqlbinlog.index</code>残余数据，请删除再执行命令</p><h4 id="5、可能存在mysql进程"><a href="#5、可能存在mysql进程" class="headerlink" title="5、可能存在mysql进程"></a>5、可能存在mysql进程</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | grep mysqld</span><br><span class="line"></span><br><span class="line">pkill -9 mysqld</span><br></pre></td></tr></table></figure><p>系统是否存在进程，使用<code>kill -9</code>把进程杀掉再执行重启命令</p><h4 id="6、防火墙原因"><a href="#6、防火墙原因" class="headerlink" title="6、防火墙原因"></a>6、防火墙原因</h4><p>CentOS会默认启动SELINUX</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i &quot;s#SELINUX=enforcing#SELINUX=disabled#g&quot; /etc/selinux/config;</span><br></pre></td></tr></table></figure><h4 id="7、关注错误日志"><a href="#7、关注错误日志" class="headerlink" title="7、关注错误日志"></a>7、关注错误日志</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">find / -name mysql.err</span><br><span class="line">cat /usr/local/mysql/mysql.err</span><br></pre></td></tr></table></figure><p>最后发现是防火墙的原因，为此搞了一个上午。</p>]]></content>
      
      
      <categories>
          
          <category> 建站知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux同步时间和设置时间与时区</title>
      <link href="/posts/c049d422.html"/>
      <url>/posts/c049d422.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->![3105.png][1]<h2 id="网络同步时间"><a href="#网络同步时间" class="headerlink" title="网络同步时间"></a>网络同步时间</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 清理缓存</span><br><span class="line">yum clean all</span><br><span class="line"># 查看软件包</span><br><span class="line">yum list</span><br><span class="line"># 安装NTP包</span><br><span class="line">yum install ntp</span><br></pre></td></tr></table></figure><p>设置网络同步时间</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ntpdate -u ntp.aliyun.com</span><br><span class="line"></span><br><span class="line">ntpdate -u NTP地址</span><br></pre></td></tr></table></figure><p>[card-default width&#x3D;”100%” label&#x3D;”NTP常用服务器”]NTP服务器(上海)：ntp.api.bz<br>微软：time.windows.com<br>阿里云：ntp.aliyun.com<br>苹果：time.asia.apple.com<br>Cloudflare：time.cloudflare.com<br>谷歌：time.google.com<br>东北大学：ntp.neu.edu.cn<br>cn.ntp.org.cn<br>cn.pool.ntp.org<br>[&#x2F;card-default]</p><h2 id="设置时间"><a href="#设置时间" class="headerlink" title="设置时间"></a>设置时间</h2><h1 id="date命令"><a href="#date命令" class="headerlink" title="date命令"></a>date命令</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">1、查看系统当前时间</span><br><span class="line">date</span><br><span class="line"></span><br><span class="line">2、设置时间为2021年1月11日</span><br><span class="line">date -s 01/11/21</span><br><span class="line"></span><br><span class="line">3、设置时间为20点21分22秒</span><br><span class="line">date -s 20:21:22</span><br><span class="line"></span><br><span class="line">4、设置时间为2021年1月11日20点21分22秒(MMDDhhmmYYYY.ss)</span><br><span class="line">date 0111202121.22</span><br></pre></td></tr></table></figure><h1 id="hwclock和clock命令"><a href="#hwclock和clock命令" class="headerlink" title="hwclock和clock命令"></a>hwclock和clock命令</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hwclock --hctosys</span><br><span class="line">clock --hctosys</span><br><span class="line">PS:以系统硬件时间为基准，同步系统时间和硬件时间一样</span><br><span class="line"></span><br><span class="line">hwclock --systohc</span><br><span class="line">clock --systohc</span><br><span class="line">PS:以系统时间为基准，同步硬件时间和系统一样</span><br></pre></td></tr></table></figure><h2 id="设置时区"><a href="#设置时区" class="headerlink" title="设置时区"></a>设置时区</h2><h1 id="使用tzselect"><a href="#使用tzselect" class="headerlink" title="使用tzselect"></a>使用tzselect</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">执行tzselect命令 --&gt; 选择Asia --&gt; 选择China --&gt; 选择Beijing Time--&gt; China Beijing Time 然后输入1</span><br></pre></td></tr></table></figure><p>执行<code>TZ=&#39;Asia/Shanghai&#39;; export TZ</code> 然后退出重新登录</p><ul><li>修改配置文件来修改时区</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br><span class="line">date</span><br><span class="line">hwclock</span><br></pre></td></tr></table></figure><h1 id="timedatectl命令"><a href="#timedatectl命令" class="headerlink" title="timedatectl命令"></a>timedatectl命令</h1><p>timedatectl命令对于RHEL &#x2F; CentOS 7和基于Fedora 21+的分布式系统来说，是一个新工具，它作为systemd系统和服务管理器的一部分，代替旧的传统的用在基于Linux分布式系统的sysvinit守护进程的date命令。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">timedatectl set-timezone Asia/Shanghai</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CentOS </tag>
            
            <tag> Linux </tag>
            
            <tag> NTP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux下SSH使用ossutil管理阿里云OSS文件</title>
      <link href="/posts/42d04292.html"/>
      <url>/posts/42d04292.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->### 安装ossutil<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">yum install wget</span><br><span class="line">wget http://gosspublic.alicdn.com/ossutil/1.7.1/ossutil64</span><br><span class="line">mv ossutil64 ossutil</span><br><span class="line">mv ossutil /home</span><br><span class="line">cd /home</span><br><span class="line">chmod +x ossutil</span><br></pre></td></tr></table></figure><h3 id="配置ossutil"><a href="#配置ossutil" class="headerlink" title="配置ossutil"></a>配置ossutil</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 交互式配置</span><br><span class="line">./ossutil64 config</span><br><span class="line"></span><br><span class="line">// 非交互式配置</span><br><span class="line">./ossutil config -e oss.aliyuncs.com -i accessKeyID -k accessKeySecret -L CH</span><br></pre></td></tr></table></figure><ul><li>endpoint：填写Bucket所在地域的域名信息，详情请参见<a href="https://help.aliyun.com/document_detail/31837.html">访问域名和数据中心</a>。</li><li>accessKeyID：查看方式请参见<a href="https://help.aliyun.com/document_detail/53045.html" title="访问密钥AccessKey（AK）相当于登录密码，只是使用场景不同。AccessKey用于程序方式调用云服务API，而登录密码用于登录控制台。如果您不需要调用API，那么就不需要创建AccessKey。">创建AccessKey</a>。</li><li>accessKeySecret：查看方式请参见<a href="https://help.aliyun.com/document_detail/53045.html" title="访问密钥AccessKey（AK）相当于登录密码，只是使用场景不同。AccessKey用于程序方式调用云服务API，而登录密码用于登录控制台。如果您不需要调用API，那么就不需要创建AccessKey。">创建AccessKey</a>。</li></ul><h4 id="ossutil查看帮助"><a href="#ossutil查看帮助" class="headerlink" title="ossutil查看帮助"></a>ossutil查看帮助</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./ossutil help</span><br><span class="line">./ossutil help ls</span><br></pre></td></tr></table></figure><h4 id="查看Bucket空间名称"><a href="#查看Bucket空间名称" class="headerlink" title="查看Bucket空间名称"></a>查看Bucket空间名称</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./ossutil ls</span><br></pre></td></tr></table></figure><h4 id="上传文件"><a href="#上传文件" class="headerlink" title="上传文件"></a>上传文件</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./ossutil cp examplefile.txt oss://examplebucket/</span><br></pre></td></tr></table></figure><h4 id="上传文件夹"><a href="#上传文件夹" class="headerlink" title="上传文件夹"></a>上传文件夹</h4><p>使用cp命令时增加-r选项，可以将目标文件夹上传到OSS。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./ossutil cp -r localfolder/ oss://examplebucket/desfolder/</span><br></pre></td></tr></table></figure><h4 id="下载单个文件"><a href="#下载单个文件" class="headerlink" title="下载单个文件"></a>下载单个文件</h4><ul><li>原文件名下载</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./ossutil cp oss://examplebucket/file.txt localfolder/</span><br></pre></td></tr></table></figure><ul><li>重命名下载文件</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./ossutil cp oss://examplebucket/examplefile.txt localfolder/example.txt</span><br></pre></td></tr></table></figure><ul><li>文件夹下载</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./ossutil cp -r oss://examplebucket/desfolder/ localfolder/</span><br></pre></td></tr></table></figure><h4 id="列出阿里云oss空间文件"><a href="#列出阿里云oss空间文件" class="headerlink" title="列出阿里云oss空间文件"></a>列出阿里云oss空间文件</h4><ul><li>列出所有文件名称和上传碎片</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./ossutil ls oss://examplebucket -a</span><br></pre></td></tr></table></figure><ul><li>列举bucket内所有sql文件</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./ossutil ls oss://bucket --include *.sql</span><br></pre></td></tr></table></figure><ul><li>查看文件属性</li></ul><p> 1.查看文件夹</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./ossutil stat oss://bucket/object</span><br></pre></td></tr></table></figure><p> 2.查看文件</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./ossutil stat oss://bucket1/file.jpg</span><br></pre></td></tr></table></figure><p> 3.查看bucket属性</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./ossutil stat oss://bucket</span><br></pre></td></tr></table></figure><h4 id="删除文件"><a href="#删除文件" class="headerlink" title="删除文件"></a>删除文件</h4><table><thead><tr><th align="center">参数名称</th><th>描述</th></tr></thead><tbody><tr><td align="center">-r，–recursive</td><td>递归进行操作。当指定该选项时，命令会对Bucket下所有符合条件的Object进行操作，否则只对指定的单个Object进行操作。</td></tr><tr><td align="center">-b，–bucket</td><td>对Bucket进行操作，该选项用于确认操作作用于Bucket。</td></tr><tr><td align="center">-m，–multipart</td><td>指定操作的对象为Bucket中未完成的Multipart事件，而非默认情况下的Object。</td></tr><tr><td align="center">-a，–all-type</td><td>指定操作的对象为Bucket中的Object和未完成的Multipart事件。</td></tr><tr><td align="center">-f，–force</td><td>强制操作，不进行询问提示。</td></tr><tr><td align="center">–encoding-type</td><td>输入或者输出的Object名的编码方式，目前只支持url编码，即指定该选项时，取值为url。如果不指定该选项，则表示Object名未经过编码。Bucket名不支持url编码。</td></tr><tr><td align="center">–retry-times&#x3D;</td><td>当错误发生时的重试次数，默认值：10，取值范围：1-500。</td></tr><tr><td align="center">–loglevel</td><td>设置日志级别，默认为空，表示不输出日志文件。可选值为：- info：输出提示信息日志 - debug：输出详细信息日志（包括http请求和响应信息）。</td></tr><tr><td align="center">–include</td><td>包含对象匹配模式，如：*.jpg。</td></tr><tr><td align="center">–exclude</td><td>不包含对象匹配模式，如：*.txt。</td></tr><tr><td align="center">–version-id</td><td>删除拥有指定Object的指定版本，仅支持在已开启版本控制的Bucket内使用。</td></tr><tr><td align="center">–all-versions</td><td>删除指定Object的所有版本。只有当Bucket开启版本控制的时候才可以附加此选项。</td></tr></tbody></table><ul><li>rm参数</li></ul><table><thead><tr><th align="center">参数名? ?</th><th>? ???描述</th></tr></thead><tbody><tr><td align="center">m?</td><td>删除以指定prefix开头的所有object下的Multipart Upload任务。</td></tr><tr><td align="center">r?</td><td>?删除以指定prefix开头的所有object，可以进行objects文件的批量删除。</td></tr><tr><td align="center">f?</td><td>?删除前不会进行询问提示。</td></tr></tbody></table><ul><li>删除bucket</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./ossutil rm oss://bucket -b</span><br></pre></td></tr></table></figure><ul><li>清除Bucket数据并删除Bucket</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./ossutil rm oss://bucket -bar</span><br></pre></td></tr></table></figure><p>[alt type&#x3D;”warning”]<strong>警告</strong>?该命令将清除Bucket中所有数据，属于危险操作，请谨慎使用。[&#x2F;alt]</p><ul><li>删除bucket储存空间的jpg文件</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./ossutil rm oss://bucket/test.jpg</span><br></pre></td></tr></table></figure><ul><li>删除所有文件格式不为jpg的Object</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./ossutil rm oss://bucket/path  --exclude &quot;*.jpg&quot; -r</span><br></pre></td></tr></table></figure><ul><li>删除所有文件名包含abc且不是jpg和txt格式的Object</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./ossutil rm oss://bucket1/path  --include &quot;*abc*&quot; --exclude &quot;*.jpg&quot; --exclude &quot;*.txt&quot; -r</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 阿里云 </tag>
            
            <tag> Linux </tag>
            
            <tag> SSH </tag>
            
            <tag> OSS </tag>
            
            <tag> ossutil </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Typecho实现图片lazyload懒加载</title>
      <link href="/posts/3e09be28.html"/>
      <url>/posts/3e09be28.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->如果网站图片很多的话，一张1M ，100个请求就是并发带宽100M，导致网站加载慢，这个时候加上图片延迟加载，能有效的提升网站加载速度。<p>要实现图片延迟加载必须要把真实图片地址写在 <code>data-original</code> 属性。若<code>src</code>和<code>data-original</code> 属性data-original相同，只是一个特效，并不能实现图片延迟加载。</p><h3 id="实现图片延迟加载的标签"><a href="#实现图片延迟加载的标签" class="headerlink" title="实现图片延迟加载的标签"></a>实现图片延迟加载的标签</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Typecho标签</span><br><span class="line">&lt;img src=&quot;img/loading.png&quot;&gt;</span><br><span class="line"></span><br><span class="line"># lazyload标签</span><br><span class="line">&lt;img class=&quot;lazyload&quot; src=&quot;img/loading.png&quot; data-original=&quot;example.jpg&quot;&gt;</span><br></pre></td></tr></table></figure><p>这里看到typecho的图片输出标签，缺少<code>date-original</code>标签，需要手动补全代码。本来想着使用JS实现，想着太麻烦。好奇的在全局搜索代码的时候，发现了相关的输出函数。</p><h2 id="gravatar头像延迟加载"><a href="#gravatar头像延迟加载" class="headerlink" title="gravatar头像延迟加载"></a>gravatar头像延迟加载</h2><p>在<code>var/Widget/Abstract/Comments.php</code> 大概是395-408行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 调用gravatar输出用户头像</span><br><span class="line"> *</span><br><span class="line"> * @access public</span><br><span class="line"> * @param integer $size 头像尺寸</span><br><span class="line"> * @param string $default 默认输出头像</span><br><span class="line"> * @return void</span><br><span class="line"> */</span><br><span class="line">public function gravatar($size = 32, $default = NULL)</span><br><span class="line">&#123;</span><br><span class="line">    if ($this-&gt;options-&gt;commentsAvatar &amp;&amp; &#x27;comment&#x27; == $this-&gt;type) &#123;</span><br><span class="line">        $rating = $this-&gt;options-&gt;commentsAvatarRating;</span><br><span class="line">        </span><br><span class="line">        $this-&gt;pluginHandle(__CLASS__)-&gt;trigger($plugged)-&gt;gravatar($size, $rating, $default, $this);</span><br><span class="line">        if (!$plugged) &#123;</span><br><span class="line">            $url = Typecho_Common::gravatarUrl($this-&gt;mail, $size, $rating, $default, $this-&gt;request-&gt;isSecure());</span><br><span class="line">            echo &#x27;&lt;img class=&quot;avatar&quot; src=&quot;&#x27; . $url . &#x27;&quot; alt=&quot;&#x27; .</span><br><span class="line">            $this-&gt;author . &#x27;&quot; width=&quot;&#x27; . $size . &#x27;&quot; height=&quot;&#x27; . $size . &#x27;&quot; /&gt;&#x27;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里看到这段代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img class=&quot;avatar&quot; src=&quot;&#x27; . $url . &#x27;&quot; alt=&quot;&#x27; .$this-&gt;author . &#x27;&quot; width=&quot;&#x27; . $size . &#x27;&quot; height=&quot;&#x27; . $size . &#x27;&quot; /&gt;</span><br></pre></td></tr></table></figure><p>替换成</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img class=&quot;avatar&quot; src=&quot;占位图地址&quot; data-src=&quot;&#x27; . $url . &#x27;&quot; alt=&quot;&#x27; .$this-&gt;author . &#x27;&quot; width=&quot;&#x27; . $size . &#x27;&quot; height=&quot;&#x27; . $size . &#x27;&quot; /&gt;</span><br></pre></td></tr></table></figure><h2 id="img图片输出"><a href="#img图片输出" class="headerlink" title="img图片输出"></a>img图片输出</h2><p>在<code>var/HyperDown.php</code> 大概在484-496行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$text = preg_replace_callback(</span><br><span class="line">    &quot;/!\[((?:[^\]]|\\\\\]|\\\\\[)*?)\]\[((?:[^\]]|\\\\\]|\\\\\[)+?)\]/&quot;,</span><br><span class="line">    function ($matches) use ($self) &#123;</span><br><span class="line">        $escaped = htmlspecialchars($self-&gt;escapeBracket($matches[1]));</span><br><span class="line"></span><br><span class="line">        $result = isset( $self-&gt;_definitions[$matches[2]] ) ?</span><br><span class="line">            &quot;&lt;img src=\&quot;&#123;$self-&gt;_definitions[$matches[2]]&#125;\&quot; alt=\&quot;&#123;$escaped&#125;\&quot; title=\&quot;&#123;$escaped&#125;\&quot;&gt;&quot;</span><br><span class="line">            : $escaped;</span><br><span class="line"></span><br><span class="line">        return $self-&gt;makeHolder($result);</span><br><span class="line">    &#125;,</span><br><span class="line">    $text</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>找到</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=\&quot;&#123;$self-&gt;_definitions[$matches[2]]&#125;\&quot; alt=\&quot;&#123;$escaped&#125;\&quot; title=\&quot;&#123;$escaped&#125;\&quot;&gt;</span><br></pre></td></tr></table></figure><p>替换成</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img class=&quot;lazyload&quot; src=&quot;占位图地址&quot; data-src=\&quot;&#123;$self-&gt;_definitions[$matches[2]]&#125;\&quot; alt=\&quot;&#123;$escaped&#125;\&quot; title=\&quot;&#123;$escaped&#125;\&quot;&gt;</span><br></pre></td></tr></table></figure><h2 id="在footer-php-标签前，加入"><a href="#在footer-php-标签前，加入" class="headerlink" title="在footer.php 标签前，加入"></a>在<code>footer.php</code> </body>标签前，加入</h2><p>引入jquery.js和jquery.lazyload.js，并初始化lazyload的图片显示样式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// 引入lazyload</span><br><span class="line">&lt;script src=&quot;https://cdn.bootcss.com/jquery_lazyload/1.9.7/jquery.lazyload.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    //js出始化lazyload</span><br><span class="line">    $(function() &#123;$(&quot;img.lazyload&quot;).lazyload(&#123;effect: &quot;fadeIn&quot;, threshold: 200&#125;);&#125;);</span><br><span class="line">    $(function() &#123;$(&quot;img.avatar&quot;).lazyload(&#123;effect: &quot;fadeIn&quot;, threshold: 200&#125;);&#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>如果有pjax设置回调</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">//pjax开启后的pjax回调</span><br><span class="line">$(document).on(&#x27;pjax:complete&#x27;, function() &#123;</span><br><span class="line">     $(&quot;img.lazyload&quot;).lazyload(&#123;</span><br><span class="line">     effect: &quot;fadeIn&quot;,</span><br><span class="line">     threshold: 200</span><br><span class="line">   &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 折腾笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typecho </tag>
            
            <tag> 懒加载 </tag>
            
            <tag> lazyload </tag>
            
            <tag> 图片 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux安装PHP编译开启fileinfo</title>
      <link href="/posts/f310fa56.html"/>
      <url>/posts/f310fa56.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->最近在使用PHP框架Laravel的时候，发现无法安装使用。检查发现缺少fileinfo扩展，这个应该是很多程序或者框架标配的扩展。<h4 id="fileinfo的作用"><a href="#fileinfo的作用" class="headerlink" title="fileinfo的作用"></a>fileinfo的作用</h4><blockquote><p>本模块中的函数通过在文件的给定位置查找特定的 魔术 字节序列 来猜测文件的内容类型以及编码（通俗来讲就是获取文件的MIME信息）</p></blockquote><p>使用环境</p><blockquote><p>CentOS 7.5<br>PHP 7.3</p></blockquote><p>这里安装的是LNMP的环境，默认是没有编译这个扩展的。</p><p>先找到PHP的安装目录fileinfo，再使用phpize进行编译</p><p>如果不知道安装在那里了，可以使用搜索命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -name fileinfo</span><br></pre></td></tr></table></figure><p>进入fileinfo</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /local/php7</span><br><span class="line">cd ext/fileinfo</span><br></pre></td></tr></table></figure><p>执行编译安装flieinfo扩展</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/local/php7/bin/phpize</span><br><span class="line">./configure --with-php-config=/local/php7/bin/php-config</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><p>编译成功后，会生成so文件，开启fileinfo扩展(<strong>扩展的存储目录：&#x2F;local&#x2F;php&#x2F;lib&#x2F;php&#x2F;extensions&#x2F;no-debug-non-zts-20202020</strong>)具体目录可以通过命令进行检索</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /local/php7/etc</span><br><span class="line">vim php.ini</span><br></pre></td></tr></table></figure><p>添加以下内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">extension=/local/php/lib/php/extensions/no-debug-non-zts-20202020/fileinfo.so</span><br></pre></td></tr></table></figure><p>重启php-fpm和nginx，也可以简单粗暴的执行<code>reboot</code></p><h3 id="如果内存不足，可以适当添加SWAP"><a href="#如果内存不足，可以适当添加SWAP" class="headerlink" title="如果内存不足，可以适当添加SWAP"></a>如果内存不足，可以适当添加SWAP</h3><p>创建一个swap大小为1GB的空间,并设置开机启动，再执行编译</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">dd if=/dev/zero of=/swap bs=1024 count=1M</span><br><span class="line">mkswap /swap</span><br><span class="line">swapon /swap</span><br><span class="line">echo &quot;/swap swap swap sw 0 0&quot; &gt;&gt; /etc/fstab</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 建站知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> PHP </tag>
            
            <tag> PHP扩展 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown常用语法(个人整理)</title>
      <link href="/posts/d5e2ddea.html"/>
      <url>/posts/d5e2ddea.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->Markdown是一种纯文本格式的标注语言，由英国 `约翰·格鲁伯` 于2004年创建。相对于富文本编辑器，Markdown可以通过简单的文字标识，就可以带来和富文本一样的编辑效果，可以让编辑摆脱排版的困惑，更专注与内容的创作。`Typecho`就是默认的Markdown文本编辑器，记得那时候从WP转到Emlog再到Typecho，第一次接触Markdown编辑器，慢慢上手后markdown精简而强大。不用多余繁琐的操作，用文字就即表达。但是还是要花亿点点来了解一下文字标识。<p><img src="https://img.jinjun.top/images/usr/uploads/2021/01/1611245149.jpg" alt="markdown.jpg"></p><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><p>一个 # 表示一级标题，以此类推最多可以设置6级标题</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 这是一级标题</span><br><span class="line">## 这是二级标题</span><br><span class="line">### 这是三级标题</span><br><span class="line">#### 这是四级标题</span><br><span class="line">##### 这是五级标题</span><br><span class="line">###### 这是六级标题</span><br></pre></td></tr></table></figure><h1 id="这是一级标题"><a href="#这是一级标题" class="headerlink" title="这是一级标题"></a>这是一级标题</h1><h2 id="这是二级标题"><a href="#这是二级标题" class="headerlink" title="这是二级标题"></a>这是二级标题</h2><h3 id="这是三级标题"><a href="#这是三级标题" class="headerlink" title="这是三级标题"></a>这是三级标题</h3><h4 id="这是四级标题"><a href="#这是四级标题" class="headerlink" title="这是四级标题"></a>这是四级标题</h4><h5 id="这是五级标题"><a href="#这是五级标题" class="headerlink" title="这是五级标题"></a>这是五级标题</h5><h6 id="这是六级标题"><a href="#这是六级标题" class="headerlink" title="这是六级标题"></a>这是六级标题</h6><h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">**加粗的文字**</span><br><span class="line">*倾斜的文字*`</span><br><span class="line">***斜体加粗的文字***</span><br><span class="line">~~删除线的文字~~</span><br></pre></td></tr></table></figure><p><strong>加粗的文字</strong><br><em>倾斜的文字</em>&#96;<br><em><strong>斜体加粗的文字</strong></em><br><del>删除线的文字</del></p><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><p>在需要引用文字前面加上 <code>&gt;</code> ，<code>&gt;&gt;</code>也可以多级嵌套 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; 这是引用文字</span><br></pre></td></tr></table></figure><blockquote><p>这是引用文字</p></blockquote><h2 id="HTML语法"><a href="#HTML语法" class="headerlink" title="HTML语法"></a>HTML语法</h2><p>Markdown也支持html语法，可以在页面插入html代码达到想要的效果。<code>!!!</code>表示html特权模式，一般都不用使用到。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">!!!</span><br><span class="line">&lt;font?style=&quot;color:#F00&quot;&gt;我是红色字体&lt;/font&gt;</span><br><span class="line">!!!</span><br></pre></td></tr></table></figure><h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#```php</span><br><span class="line">&lt;?</span><br><span class="line"> echo &quot;Hello World！&quot;;</span><br><span class="line">?&gt;</span><br><span class="line">#```</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`单行代码`</span><br></pre></td></tr></table></figure><p>[alt type&#x3D;”warning”]使用时候，请把#去掉[&#x2F;alt]</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span></span><br><span class="line"> <span class="keyword">echo</span> <span class="string">&quot;Hello World！&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>文字标注</code></p><h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><h5 id="图片链接"><a href="#图片链接" class="headerlink" title="图片链接"></a>图片链接</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">![请输入图片描述][1]</span><br><span class="line"></span><br><span class="line">#  [1]: 图片链接</span><br><span class="line"></span><br><span class="line"># 也可以写成</span><br><span class="line"></span><br><span class="line">![图片描述](图片链接)</span><br><span class="line">````</span><br><span class="line"></span><br><span class="line">##### 超链接</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><a href="%E8%B6%85%E9%93%BE%E6%8E%A5%E5%9C%B0%E5%9D%80">超链接名</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">## 列表</span><br><span class="line"></span><br><span class="line">##### 无序列表</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>列表内容</li></ul><ul><li>列表内容</li></ul><ul><li>列表内容<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">##### 有序列表</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><ol><li>列表内容</li><li>列表内容</li><li>列表内容<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">##### 列表嵌套</span><br><span class="line"></span><br><span class="line">列表嵌套只需在子列表中的选项前面添加四个空格</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>第一项：<ul><li>第一项嵌套的第一个元素</li><li>第一项嵌套的第二个元素</li></ul></li><li>第二项：<ul><li>第二项嵌套的第一个元素</li><li>第二项嵌套的第二个元素<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">## 表格</span><br><span class="line"></span><br></pre></td></tr></table></figure><table><thead><tr><th>表头</th><th>表头</th><th>表头</th></tr></thead><tbody><tr><td>单元格</td><td>单元格</td><td>单元格</td></tr><tr><td>单元格</td><td>单元格</td><td>单元格</td></tr></tbody></table><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">##### 设置表格的对齐方式</span><br><span class="line"></span><br><span class="line">`----:` 设置内容和标题栏居右对齐</span><br><span class="line">`:----` 设置内容和标题栏居左对齐</span><br><span class="line">`:----:` 设置内容和标题栏居中对齐</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 注解(脚注)</span><br><span class="line"></span><br></pre></td></tr></table></figure>这里是钧言博客<a href="img.jinjun.top/images">^1</a></li></ul></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">## 生成目录</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">在一级标题前插入，可能要视不同的编辑器而定。</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>[TOC]</p><p>&#96;&#96;&#96;</p>]]></content>
      
      
      <categories>
          
          <category> Typecho </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typecho </tag>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>读者墙</title>
      <link href="/posts/1d455193.html"/>
      <url>/posts/1d455193.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->]]></content>
      
      
      <categories>
          
          <category> 建站知识 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>MYSQL优化参数减少内存占用</title>
      <link href="/posts/ffcc00e.html"/>
      <url>/posts/ffcc00e.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->最近安装了AliSQL，跑起来感觉没有怎么。但是top查看内存占用的时候，MySQL占用高达800M，但是服务器的配置是1H2G不经操，一旦高并发测试数据库直接占满内存就挂了需要手动重启。经过一番了解后，数据库配置文件默认是没有写的，需要自己去修改`my.ini`，可能习惯了宝塔环境一件自动优化，切到命令行感觉有点陌生了。<p>在宝塔环境可以了解到相关的参数，直接套用。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">performance_schema_max_table_instances = 200</span><br><span class="line">table_definition_cache = 100</span><br><span class="line">table_open_cache = 100</span><br></pre></td></tr></table></figure><p>这三个参数调小后，可以感觉到内存明显降下来。</p><p>还可以关闭 <code>performance_schema</code> 数据库性能数据采集，调小innobd缓存池 <code>innodb_buffer_pool_size=4M</code> 还可以进一步降低内存占用。</p><p><strong>PS</strong>： 我当前AliSQL使用的配置，可以大幅度降低内存到100M</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"># For advice on how to change settings please see</span><br><span class="line"># http://dev.mysql.com/doc/refman/5.6/en/server-configuration-defaults.html</span><br><span class="line">[mysqld]</span><br><span class="line">#</span><br><span class="line"># Remove leading # and set to the amount of RAM for the most important data</span><br><span class="line"># cache in MySQL. Start at 70% of total RAM for dedicated server, else 10%.</span><br><span class="line"># innodb_buffer_pool_size = 128M</span><br><span class="line">#</span><br><span class="line"># Remove leading # to turn on a very important data integrity option: logging</span><br><span class="line"># changes to the binary log between backups.</span><br><span class="line"># log_bin</span><br><span class="line">#</span><br><span class="line"># Remove leading # to set options mainly useful for reporting servers.</span><br><span class="line"># The server defaults are faster for transactions and fast SELECTs.</span><br><span class="line"># Adjust sizes as needed, experiment to find the optimal values.</span><br><span class="line"># join_buffer_size = 128M</span><br><span class="line"># sort_buffer_size = 2M</span><br><span class="line"># read_rnd_buffer_size = 2M</span><br><span class="line">#</span><br><span class="line"># 数据库数据存放目录</span><br><span class="line">datadir=/var/lib/mysql</span><br><span class="line">socket=/var/lib/mysql/mysql.sock</span><br><span class="line">#</span><br><span class="line">#symbolic-links=0</span><br><span class="line">skip-external-locking</span><br><span class="line">key_buffer_size = 8M</span><br><span class="line">max_allowed_packet = 1M</span><br><span class="line">table_open_cache = 4</span><br><span class="line">sort_buffer_size = 64K</span><br><span class="line">read_buffer_size = 256K</span><br><span class="line">read_rnd_buffer_size = 256K</span><br><span class="line">net_buffer_length = 2K</span><br><span class="line">thread_stack = 240K</span><br><span class="line">#innodb_use_native_aio = 0</span><br><span class="line">innodb_buffer_pool_size=2M</span><br><span class="line">performance_schema_max_table_instances=50</span><br><span class="line">table_definition_cache=50</span><br><span class="line">table_open_cache=32</span><br><span class="line">max_connections=50</span><br><span class="line">max_user_connections=35</span><br><span class="line">wait_timeout=10</span><br><span class="line">interactive_timeout=15</span><br><span class="line">long_query_time=5</span><br><span class="line">performance_schema = off</span><br><span class="line"># Disabling symbolic-links is recommended to prevent assorted security risks</span><br><span class="line">symbolic-links=0</span><br><span class="line"># Recommended in standard MySQL setup</span><br><span class="line">sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES</span><br><span class="line">[mysqld_safe]</span><br><span class="line">log-error=/var/log/mysqld.log</span><br><span class="line">pid-file=/var/run/mysqld/mysqld.pid</span><br></pre></td></tr></table></figure><p>PS：如果你不修改<code>datadir</code>、<code>socket</code>数据目录为你设置的存放目录，可能会导致数据库不能正确启动。</p>]]></content>
      
      
      <categories>
          
          <category> 建站知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CentOS </tag>
            
            <tag> Linux </tag>
            
            <tag> mysql </tag>
            
            <tag> AliSQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos编译安装PHP8</title>
      <link href="/posts/d0026c1b.html"/>
      <url>/posts/d0026c1b.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->最近把服务器进行一下安全更新，好奇逛了一下PHP的主页，也在近期推送了PHP的稳定版本8.0.1。晚上刚好有空就把现在的PHP环境给更新到PHP8。现在的环境是Centos7的最小化版本，会缺少一部分工具包，本着能少则少的原则。<h3 id="安装EPEL"><a href="#安装EPEL" class="headerlink" title="安装EPEL"></a>安装EPEL</h3><p><strong>EPEL的全称叫 <code>Extra Packages for Enterprise Linux</code> 。EPEL是由 Fedora 社区打造，为 RHEL 及衍生发行版如 CentOS、Scientific Linux 等提供高质量软件包的项目。装上了 EPEL之后，就相当于添加了一个第三方源。</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">yum install -y yum-utils</span><br><span class="line">package-cleanup --cleandupes</span><br><span class="line">yum install -y epel-release</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">如果提示找不到epel-release包，可以运行下面来安装</span></span><br><span class="line">wget https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm</span><br><span class="line">rpm -ivh epel-release-latest-7.noarch.rpm</span><br></pre></td></tr></table></figure><h3 id="安装PHP所需依赖"><a href="#安装PHP所需依赖" class="headerlink" title="安装PHP所需依赖"></a>安装PHP所需依赖</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install wget bzip2-devel libxml2-devel curl-devel db4-devel libjpeg-devel libpng-devel freetype-devel pcre-devel zlib-devel sqlite-devel libmcrypt-devel unzip bzip2 m4 autoconf mhash-devel openssl-devel gcc gcc-c++ libtool-ltdl libtool-ltdl-devel oniguruma oniguruma-devel</span><br></pre></td></tr></table></figure><h3 id="下载PHP"><a href="#下载PHP" class="headerlink" title="下载PHP"></a>下载PHP</h3><p>PHP下载页面：<a href="https://www.php.net/downloads.php">https://www.php.net/downloads.php</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir –p /usr/work/php8 # 创建工作目录</span><br><span class="line">cd /usr/work/php8</span><br><span class="line">wget https://www.php.net/distributions/php-8.0.1.tar.gz</span><br><span class="line">tar -zxvf php-8.0.1.tar.gz</span><br><span class="line">cd php-8.0.1</span><br></pre></td></tr></table></figure><h3 id="编译PHP"><a href="#编译PHP" class="headerlink" title="编译PHP"></a>编译PHP</h3><p>查看可配置的PHP参数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./configure --help</span><br></pre></td></tr></table></figure><p>编译安装，可以根据自己的需求来搭配适合自己的安装配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">./configure --prefix=/usr/local/php8 --with-config-file-path=/usr/local/php8 --with-config-file-scan-dir=/usr/local/php8/etc/php.d/ --with-libdir=lib64 --enable-mysqlnd --enable-pdo --enable-fastcgi --with-mysql --with-mysqli --with-pdo-mysql --with-iconv --with-freetype --with-jpeg --with-zlib --with-libxml --enable-xml --disable-fileinfo --enable-bcmath --enable-shmop --enable-sysvsem --with-curl --enable-mbregex --enable-mbstring --enable-ftp --enable-gd --enable-gd-jis-conv --with-openssl --enable-pcntl --enable-sockets --enable-soap --with-pear --with-gettext --enable-calendar --with-openssl --enable-opcache --enable-xml --enable-cli --enable-pcntl --enable-sockets --enable-soap --with-pear --with-gettext --enable-calendar</span><br><span class="line"></span><br><span class="line"># 编译安装</span><br><span class="line"></span><br><span class="line">make -j2 &amp;&amp; make install</span><br></pre></td></tr></table></figure><h4 id="常见参数"><a href="#常见参数" class="headerlink" title="常见参数"></a>常见参数</h4><p><code>--prefix</code> 指安装程序存放目录<br><code>--with-config-file-path</code> 指<code>php.ini</code>配置文件存放目录<br><code>--with-config-file-scan-dir</code> 指<code>php.ini</code> 的扩展目录</p><h3 id="测试安装结果"><a href="#测试安装结果" class="headerlink" title="测试安装结果"></a>测试安装结果</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/php8/bin/php -v</span><br><span class="line"></span><br><span class="line"># 如果只安装一种PHP环境</span><br><span class="line"></span><br><span class="line">php -v</span><br></pre></td></tr></table></figure><h4 id="添加环境变量"><a href="#添加环境变量" class="headerlink" title="添加环境变量"></a>添加环境变量</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile</span><br><span class="line">PATH=$PATH:/usr/local/php8/bin/</span><br><span class="line">export PATH</span><br><span class="line"># 保存并退出</span><br><span class="line">:wq</span><br><span class="line"># 生效配置</span><br><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><h4 id="复制配置文件"><a href="#复制配置文件" class="headerlink" title="复制配置文件"></a>复制配置文件</h4><p>从php源码目录复制文件到编译配置参数指定的目录，方便修改备份</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># php.ini</span><br><span class="line">cp /usr/work/php/php.ini-development /usr/local/php/lib/php.ini</span><br><span class="line"># php-fpm 配置文件</span><br><span class="line">cp /usr/work/php/etc/php-fpm.conf.default /usr/local/php/etc/php-fpm.conf</span><br><span class="line"># php-fpm 扩展配置文件</span><br><span class="line">cp /usr/work/php/etc/php-fpm.d/www.conf.default /usr/local/php/etc/php-fpm.d/www.conf</span><br><span class="line"># 开机自动启动脚本</span><br><span class="line">cp /usr/work/php/sapi/fpm/init.d.php-fpm /etc/init.d/php-fpm</span><br><span class="line"># 给php-fpm 添加可执行权限</span><br><span class="line">chmod +x /etc/init.d/php-fpm</span><br></pre></td></tr></table></figure><h3 id="开启JIT编译"><a href="#开启JIT编译" class="headerlink" title="开启JIT编译"></a>开启JIT编译</h3><p>打开 <code>php.ini</code> 找到 <code>zend_extension=opcache</code> 给去掉注释</p><p>在 <code>[opcache]</code> 下面添加以下两项内容</p><blockquote><p>开启opcache PHP性能优化组件</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[opcache]</span><br><span class="line">zend_extension=opcache.so</span><br><span class="line">opcache.enable=1</span><br><span class="line">opcache.enable_cli=1</span><br><span class="line">opcache.memory_consumption=192</span><br><span class="line">opcache.interned_strings_buffer=8</span><br><span class="line">opcache.max_accelerated_files=100000</span><br><span class="line">opcache.max_wasted_percentage=5</span><br><span class="line">opcache.use_cwd=1</span><br><span class="line">opcache.validate_timestamps=1</span><br><span class="line">opcache.revalidate_freq=60</span><br><span class="line">;opcache.save_comments=0</span><br><span class="line">opcache.fast_shutdown=1</span><br><span class="line">opcache.consistency_checks=0</span><br><span class="line">;opcache.optimization_level=0</span><br></pre></td></tr></table></figure><blockquote><p>开启JIT编译器</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">opcache.enable=1</span><br><span class="line">opcache.enable_cli=1</span><br><span class="line">opcache.jit_buffer_size=128M</span><br><span class="line">opcache.jit=1255</span><br></pre></td></tr></table></figure><h5 id="运行脚本"><a href="#运行脚本" class="headerlink" title="运行脚本"></a>运行脚本</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">service php-fpm start # 检验服务启动</span><br><span class="line">service php-fpm stop # 检验服务关闭</span><br><span class="line">chkconfig php-fpm on # 配置开机启动php-fpm</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 建站知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CentOS </tag>
            
            <tag> Linux </tag>
            
            <tag> mysql </tag>
            
            <tag> PHP </tag>
            
            <tag> PHP扩展 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS安装AliSQL手记</title>
      <link href="/posts/645efc3f.html"/>
      <url>/posts/645efc3f.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->AliSQL是基于MySQL官方版本的一个分支，由阿里云数据库团队维护，目前也应用于阿里巴巴集团业务以及阿里云数据库服务。该版本在社区版的基础上做了大量的性能与功能的优化改进。尤其适合电商、云计算以及金融等行业环境。<p>据说比MySQL5.6官方版本，速度提升不少。社区版本已经有好几年没有更新了，也不知道是不是KPI产物，开源开着就没有下文了，参考阿里系的应用，不赚钱的基本都关闭了。</p><h4 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h4><p>开源地址：<a href="https://github.com/alibaba/AliSQL">https://github.com/alibaba/AliSQL</a></p><h4 id="安装检查"><a href="#安装检查" class="headerlink" title="安装检查"></a>安装检查</h4><p>检查主机是否安装已经安装MySQL，如果就卸载。建议使用纯净的环境安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum remove mysql mysql-server mysql-libs</span><br><span class="line">rm /etc/my.cnf</span><br></pre></td></tr></table></figure><p>查看是否安装MySQL</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa|grep mysql</span><br><span class="line"># 如果查询到 继续卸载</span><br><span class="line">yum remove 软件名</span><br></pre></td></tr></table></figure><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><ul><li>使用环境为 Centos7.9 2H4G</li></ul><p>安装编译源码所需要的扩展和库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install wget gcc gcc-c++ ncurses-devel perl cmake bison autoconf</span><br></pre></td></tr></table></figure><h3 id="设置用户和所属组"><a href="#设置用户和所属组" class="headerlink" title="设置用户和所属组"></a>设置用户和所属组</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 创建用户组</span><br><span class="line">groupadd mysql</span><br><span class="line"></span><br><span class="line"># 用户组创建用户</span><br><span class="line">useradd -M -s/sbin/nologin -g mysql -r mysql</span><br></pre></td></tr></table></figure><h3 id="创建MySQL工作目录"><a href="#创建MySQL工作目录" class="headerlink" title="创建MySQL工作目录"></a>创建MySQL工作目录</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 创建MySQL安装目录</span><br><span class="line">mkdir –p /usr/local/mysql</span><br><span class="line"></span><br><span class="line"># 创建数据库文件存放位置</span><br><span class="line">mkdir -p /date/sqldb</span><br></pre></td></tr></table></figure><h3 id="安装AliSQL"><a href="#安装AliSQL" class="headerlink" title="安装AliSQL"></a>安装AliSQL</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># 下载AliSQL源码</span><br><span class="line">wget https://github.com/alibaba/AliSQL/archive/AliSQL-5.6.32-9.tar.gz</span><br><span class="line"></span><br><span class="line"># 解压文件</span><br><span class="line">tar -zxvf AliSQL-5.6.32-9.tar.gz</span><br><span class="line"></span><br><span class="line"># 查看解压目录名</span><br><span class="line">ls</span><br><span class="line"></span><br><span class="line"># 进入AliSQL目录</span><br><span class="line">cd AliSQL-AliSQL-5.6.32-9</span><br><span class="line"></span><br><span class="line"># 设置编译参数</span><br><span class="line">cmake -DCMAKE_INSTALL_PREFIX=/usr/local/mysql -DMYSQL_UNIX_ADDR=/usr/local/mysql/mysql.sock -DDEFAULT_CHARSET=utf8 -DDEFAULT_COLLATION=utf8_general_ci -DWITH_INNOBASE_STORAGE_ENGINE=1 -DWITH_ARCHIVE_STORAGE_ENGINE=1 -DWITH_BLACKHOLE_STORAGE_ENGINE=1 -DMYSQL_DATADIR=/data/sqldb -DMYSQL_TCP_PORT=3306 -DENABLE_DOWNLOADS=1</span><br><span class="line"></span><br><span class="line"># 编译安装</span><br><span class="line">make -j2 &amp; make install</span><br></pre></td></tr></table></figure><p>这里编译的参数可以参考MySQL的编译参数，自由定义自己的参数。<code>-j2</code>是多线程编译，可以加快编译速度。</p><h3 id="授权MySQL目录运行用户"><a href="#授权MySQL目录运行用户" class="headerlink" title="授权MySQL目录运行用户"></a>授权MySQL目录运行用户</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chown -R mysql:mysql /usr/local/mysql</span><br><span class="line">chown -R mysql:mysql /date/sqldb</span><br></pre></td></tr></table></figure><h3 id="初始化AliSQL"><a href="#初始化AliSQL" class="headerlink" title="初始化AliSQL"></a>初始化AliSQL</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/mysql</span><br><span class="line">./scripts/mysql_install_db --user=mysql --basedir=/usr/local/mysql --datadir=/date/sqldb</span><br></pre></td></tr></table></figure><h3 id="设置启动脚本和链接"><a href="#设置启动脚本和链接" class="headerlink" title="设置启动脚本和链接"></a>设置启动脚本和链接</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cp /usr/local/mysql/support-files/my-default.cnf /etc/my.cnf</span><br><span class="line">cp  support-files/mysql.server  /etc/init.d/mysqld</span><br><span class="line">ln -s /usr/local/mysql/bin/mysql /usr/bin</span><br><span class="line">echo &quot;export PATH=$PATH:/usr/local/mysql/bin&quot;&gt;&gt;/etc/profile</span><br></pre></td></tr></table></figure><h3 id="启动Alisql"><a href="#启动Alisql" class="headerlink" title="启动Alisql"></a>启动Alisql</h3><p>启动Alisql并加入开机自动启动</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">service mysqld start</span><br><span class="line">chkconfig --level 35 mysqld on</span><br></pre></td></tr></table></figure><h3 id="设置root运行密码"><a href="#设置root运行密码" class="headerlink" title="设置root运行密码"></a>设置root运行密码</h3><p>Alisql安装完成后，密码默认是没有的，需要自己设置。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br><span class="line">SET PASSWORD FOR root=PASSWORD(’你的密码’);</span><br><span class="line">flush privileges;</span><br><span class="line">exit;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 建站知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CentOS </tag>
            
            <tag> Linux </tag>
            
            <tag> mysql </tag>
            
            <tag> 数据库 </tag>
            
            <tag> AliSQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql数据库备份与还原</title>
      <link href="/posts/6afd2345.html"/>
      <url>/posts/6afd2345.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->### 备份命令mysqldump格式<ul><li>备份数据库常用格式</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -h主机名  -P端口 -u用户名 -p密码 –database 数据库名 &gt; 文件名.sql</span><br></pre></td></tr></table></figure><p><code>–database</code> 表示如果当前数据库不存在，则创建一个数据库</p><ul><li>备份数据库</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># mysqldump -u用户名 -p密码  数据库名 &gt; 导出文件名.sql</span><br><span class="line"></span><br><span class="line">mysqldump -uroot -pmysql mysql  &gt; test.sql</span><br></pre></td></tr></table></figure><ul><li>备份数据库为压缩文件</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># mysqldump -u用户名 -p密码  数据库名 &gt; 导出文件名.sql</span><br><span class="line"></span><br><span class="line">mysqldump -uroot -pmysql mysql | gzip &gt; test.sql.gz</span><br></pre></td></tr></table></figure><ul><li>数据库导出一张表(包含表结构和数据)</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># mysqldump -u用户名 -p密码  数据库名 表名 &gt; 导出的文件名</span><br><span class="line"></span><br><span class="line">mysqldump -uroot -pmysql mysql test &gt; test.sql</span><br></pre></td></tr></table></figure><ul><li>导出数据库结构</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># mysqldump -u用户名 -p密码 -d 数据库名 &gt; 导出的文件名</span><br><span class="line"></span><br><span class="line">mysqldump -uroot -pmysql -d mysql &gt; test.sql</span><br></pre></td></tr></table></figure><ul><li>导出表结构</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># mysqldump -u用户名 -p密码 -d 数据库名称 表名 &gt; 导出的文件名称</span><br><span class="line"></span><br><span class="line">mysqldump -uroot -pmysql -d mysql test &gt; test.sql</span><br></pre></td></tr></table></figure><h3 id="还原数据库"><a href="#还原数据库" class="headerlink" title="还原数据库"></a>还原数据库</h3><p>利用source 命令来还原数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br><span class="line"></span><br><span class="line"># 查看已创建数据库</span><br><span class="line">mysql&gt;show databases</span><br><span class="line"></span><br><span class="line"># 创建还原数据库</span><br><span class="line">mysql&gt;create database test</span><br><span class="line"></span><br><span class="line"># 进入数据库 mysql&gt;use 数据库名称</span><br><span class="line">mysql&gt;use mysql</span><br><span class="line"></span><br><span class="line"># 还原数据库</span><br><span class="line">mysql&gt;source test.sql</span><br></pre></td></tr></table></figure><ul><li>还原数据库</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># mysql -u用户名 -p密码 数据库名称 &gt; 文件路径</span><br><span class="line"></span><br><span class="line">mysql -uroot -pmysql name &lt; backup.sql</span><br></pre></td></tr></table></figure><ul><li>还原压缩文件数据库</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># gunzip &lt; 数据库文件 | mysql -u用户名 -p密码 数据库名称</span><br><span class="line"></span><br><span class="line">gunzip &lt; backup.sql.gz | mysql -uroot -pmysql name</span><br></pre></td></tr></table></figure><p>其实也可以通过phpmyadmin等第三方数据库的管理软件，来更方便直接的编辑数据库、备份和还原数据库。</p>]]></content>
      
      
      <categories>
          
          <category> 建站知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> mysql </tag>
            
            <tag> 数据库 </tag>
            
            <tag> 备份 </tag>
            
            <tag> 还原 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用Nginx限制API接口刷流量</title>
      <link href="/posts/cd194df.html"/>
      <url>/posts/cd194df.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->自己的API随机图接口，最近发现有人在爬图片导致源站压力过大，不得不做出亿点点优化。众所周知服务器的资源是有限的，但客户端的请求是无限的(狂点F5) ，但是为了用户请求能够正常响应，这个时候就要抛弃一些不正常的客户端请求。<p>这里我使用环境为NGINX，这里以NGINX为例来实现限制流量或者非正常IP的访问。访问到设置阈值后，直接抛出503或者444错误给客户端来限制不正常访问。</p><p>这里使用了NGINX的以下内置功能，可以运行<code>nginx -V</code>来查看是否开启</p><ul><li>ngx_http_limit_conn_module</li><li>ngx_http_limit_req_module</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">http &#123;</span><br><span class="line">#限制请求(单IP，每秒读20次、写10次)</span><br><span class="line">limit_req_zone $binary_remote_addr $uri zone=api_read:20m rate=20r/s; </span><br><span class="line">limit_req_zone $binary_remote_addr $uri zone=api_write:20m rate=10r/s;</span><br><span class="line">#按ip配置一个连接 zone</span><br><span class="line">limit_conn_zone $binary_remote_addr zone=perip_conn:10m;</span><br><span class="line">#按server配置一个连接 zone</span><br><span class="line">limit_conn_zone $server_name zone=perserver_conn:100m;</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">        listen  80; </span><br><span class="line">        server_name localhost;</span><br><span class="line">        location / &#123;</span><br><span class="line">              #请求限流排队通过 burst默认是0</span><br><span class="line">              limit_req zone=api_read burst=5;</span><br><span class="line">              #连接数限制,每个IP并发请求为10</span><br><span class="line">              limit_conn perip_conn 10;</span><br><span class="line">              #服务所限制的连接数(即限制了该server并发连接数量)</span><br><span class="line">              limit_conn perserver_conn 1500;</span><br><span class="line">              #连接限速</span><br><span class="line">              limit_rate 100k;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="自定义503页面"><a href="#自定义503页面" class="headerlink" title="自定义503页面"></a>自定义503页面</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">error_page   500 502 503 504  /50x.html;</span><br><span class="line">location = /50x.html &#123;</span><br><span class="line">root   /usr/local/nginx/html;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="参数说明"><a href="#参数说明" class="headerlink" title="参数说明"></a>参数说明</h3><p>参数补充说明：<br><code>$binary_remote_addr</code> 是限制同一客户端ip地址；<br><code>$server_name</code> 是限制同一server最大并发数；<br><code>limit_conn</code> 为限制并发连接数；<br><code>limit_rate</code> 为限制下载速度；<br><code>burst</code> 为请求限流，每秒放行多少请求；</p>]]></content>
      
      
      <categories>
          
          <category> 建站知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Nginx </tag>
            
            <tag> Tengine </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VMware虚拟机NAT模式设置静态IP</title>
      <link href="/posts/7b6dc956.html"/>
      <url>/posts/7b6dc956.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->最近在电脑上测试搭建集群，VMware虚拟机搭建环境后，用新开虚拟机安装一个镜像然后粘贴复制就可以同时启动多个环境，但是DHCP的IP是随机的，不方便调试就干脆设置成静态IP。这里用的镜像也是给自己挖了一个坑，使用了CentOS 7的最小化的版本，导致了很多命令都不可以使用。<h3 id="配置虚拟机的NAT网络"><a href="#配置虚拟机的NAT网络" class="headerlink" title="配置虚拟机的NAT网络"></a>配置虚拟机的NAT网络</h3><p>打开VMware虚拟机的 <strong>虚拟网络编辑器</strong> </p><p><img src="https://img.jinjun.top/images/usr/uploads/2020/12/1609077240.png" alt="VMware.png"></p><p><img src="https://img.jinjun.top/images/usr/uploads/2020/12/1609077695.png" alt="VMware.png"></p><p><img src="https://img.jinjun.top/images/usr/uploads/2020/12/1609077775.png" alt="VMware.png"></p><h4 id="查看电脑虚拟NAT网卡"><a href="#查看电脑虚拟NAT网卡" class="headerlink" title="查看电脑虚拟NAT网卡"></a>查看电脑虚拟NAT网卡</h4><p><img src="https://img.jinjun.top/images/usr/uploads/2020/12/1609080203.png" alt="network.png"></p><p>这里的网卡的网关IP和子网掩码要和VMware虚拟机的NAT网卡设置的一样，不然虚拟机无法联网。</p><h5 id="编辑虚拟机网卡信息"><a href="#编辑虚拟机网卡信息" class="headerlink" title="编辑虚拟机网卡信息"></a>编辑虚拟机网卡信息</h5><p>我这里使用的环境为centOS 7，不同环境网卡的位置也不一样。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /et/sysconfig/network-scripts/</span><br></pre></td></tr></table></figure><p><img src="https://img.jinjun.top/images/usr/uploads/2020/12/1609078281.png" alt="network.png"></p><p>编辑网卡信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi ifcfg-ens33</span><br></pre></td></tr></table></figure><p>把之前的配置文件部分内容删除，重新编辑。根据自己的网卡信息进行修改</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">BOOTPROTO=static         #dhcp改为static </span><br><span class="line">ONBOOT=yes               #开机启用本配置 </span><br><span class="line">IPADDR=192.168.40.170    #静态IP </span><br><span class="line">GATEWAY=192.168.40.2     #默认网关 </span><br><span class="line">NETMASK=255.255.255.0    #子网掩码</span><br><span class="line">UUID=xx.xx.xx.xx         #网卡UUID </span><br><span class="line">DNS1=8.8.8.8             #DNS服务器</span><br><span class="line">DNS2=223.5.5.5           #DNS服务器 </span><br></pre></td></tr></table></figure><p>重启网卡</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service network restart</span><br></pre></td></tr></table></figure><p>检测网卡信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip addr</span><br></pre></td></tr></table></figure><p>这里也可以用<code>ping</code>命令来测试网络连接</p><p><img src="https://img.jinjun.top/images/usr/uploads/2020/12/1609079028.png" alt="network.png"></p><p>完成后，就可以通过SSH工具继续连接，就不用在VMware虚拟机输入命令，直接使用SSH工具进行批量管理。</p>]]></content>
      
      
      <categories>
          
          <category> 虚拟化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CentOS </tag>
            
            <tag> Linux </tag>
            
            <tag> 虚拟机 </tag>
            
            <tag> NAT </tag>
            
            <tag> VMware </tag>
            
            <tag> 静态IP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>生日快乐</title>
      <link href="/posts/42dbb1c3.html"/>
      <url>/posts/42dbb1c3.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->![生日快乐.jpg][1]<p>今天晚上打开QQ邮箱，发现一封生日的祝福。打开QQ音乐也有祝福。还是蛮感动的，不过今天没有收到苹果?有点小失望</p><p>不知不觉又走过自己的第22个生日，今天的日子好像有点特殊也是西方节日的平安夜，下班回家和自己父母吃个晚饭，晚上走到街上看着街上寥寥无几的行人……</p><p>成长不期而遇，努力成长，找到更顽强的自己。独立地朝着理想走，你要的时光都会给你。生日快乐！?</p>]]></content>
      
      
      <categories>
          
          <category> 钧言钧语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生日快乐 </tag>
            
            <tag> 钧言钧语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Typecho过滤垃圾评论SmartSpam插件</title>
      <link href="/posts/d57be8c3.html"/>
      <url>/posts/d57be8c3.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->最近被老外疯狂发送垃圾评论，都是一些推广文，全是英文参杂在邮件地址或者网址。个人是很反感垃圾评论广告的(<font color="red">主要是我看不明白你写的是什么，不可能叫我去找翻译吧</font>)用服务器屏蔽了IP依旧换IP来发，昨晚和群友说了一下，群友给我推荐了SmartSpam的智能过滤评论插件，自己也测试了一下的确好使，终于可以放心休息了。<p>来自作者的插件介绍，使用本插件，只需要做一些简单的设置，就可以根据规则自动阻止垃圾评论的提交，评论人不需要做任何的额外操作，所有的评论过滤都由插件智能化处理。目前支持：IP屏蔽、中文检测、日文检测、评论长度检测、禁用词汇、敏感词汇等。</p><p>官方地址：<a href="http://www.yovisun.com/archive/typecho-plugin-smartspam.html">http://www.yovisun.com/archive/typecho-plugin-smartspam.html</a></p><p>对我来说，其他的设置保持默认就好，最管用的还是 <strong>屏蔽非中文评论</strong> 在CHINA你不用中文评论？？？无关紧要，但是对同一个IP进行的狂轰滥炸，也可以使用屏蔽IP，总之总可以找到适合自己的过滤评论规则。</p><p><img src="https://img.jinjun.top/images/usr/uploads/2020/12/1609167795.png" alt="SmartSpam.png"></p><p><img src="https://img.jinjun.top/images/usr/uploads/2020/12/1609167805.png" alt="SmartSpam1.png"></p>]]></content>
      
      
      <categories>
          
          <category> 建站知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typecho </tag>
            
            <tag> SmarSpam </tag>
            
            <tag> 过滤评论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP GD库添加开启Freetype扩展的方法</title>
      <link href="/posts/70cae0db.html"/>
      <url>/posts/70cae0db.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->最近在用可道云进行在线管理家里的NAS，可以就是默认开启了PHP自带GD扩展是不支持｀imagefttext｀函数。在管理页面疯狂报错，无法使用缩略图，今天终于抽空出来折腾一下。<h3 id="安装libjpeg"><a href="#安装libjpeg" class="headerlink" title="安装libjpeg"></a>安装libjpeg</h3><ul><li>在 <a href="http://www.ijg.org/">http://www.ijg.org/</a> 下载最新版本</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">// 下载最新版本</span><br><span class="line">wget http://www.ijg.org/files/jpegsrc.v9d.tar.gz</span><br><span class="line">// 解压文件</span><br><span class="line">tar zxvf jpegsrc.v9d.tar.gz</span><br><span class="line">// 进入目录</span><br><span class="line">cd jpeg-9d</span><br><span class="line">// 检查配置</span><br><span class="line">./configure --enable-shared --prefix=/usr/local/jpeg</span><br><span class="line">// 编译安装</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><p>配置全局可用，不然PHP编译会报错<code>libjpeg.so.9</code>找不到</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/ld.so.conf</span><br><span class="line"></span><br><span class="line">加入一行：/usr/local/jpeg</span><br><span class="line"></span><br><span class="line">ldconfig -v</span><br></pre></td></tr></table></figure><h3 id="安装libpng"><a href="#安装libpng" class="headerlink" title="安装libpng"></a>安装libpng</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install libpng</span><br><span class="line">yum install libpng-devel</span><br></pre></td></tr></table></figure><h3 id="安装freetype"><a href="#安装freetype" class="headerlink" title="安装freetype"></a>安装freetype</h3><ul><li><p>在官网下载最新的安装包：<a href="https://download.savannah.gnu.org/releases/freetype/">https://download.savannah.gnu.org/releases/freetype/</a> </p></li><li><p>获取最新的安装包<code>freetype-2.9.1.tar.gz</code></p></li><li><p>编译安装</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// 解压文件</span><br><span class="line">tar -zxvf freetype-2.9.1.tar.gz</span><br><span class="line">// 进入目录</span><br><span class="line">cd freetype-2.9.1</span><br><span class="line">// 检查参数</span><br><span class="line">./configure --enable-shared --with-jpeg=/usr/local/libjpeg/ --with-freetype=/usr/local/ --with-png=/usr/local/include/</span><br><span class="line">// 编译</span><br><span class="line">make &amp; make install</span><br></pre></td></tr></table></figure><h3 id="PHP编译freetype-GD扩展"><a href="#PHP编译freetype-GD扩展" class="headerlink" title="PHP编译freetype GD扩展"></a>PHP编译freetype GD扩展</h3><p>在这里我使用的是PHP8.0版本，大家可以根据自己的PHP版本来选择</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">// PHP源码目录</span><br><span class="line">cd /download/php-8.0</span><br><span class="line">// 进入gd目录</span><br><span class="line">cd /download/php-8.0/ext/gd</span><br><span class="line">// 利用phpize</span><br><span class="line">/download/php-8.0/bin/phpize</span><br><span class="line">// 清理之前的安装配置</span><br><span class="line">make clean</span><br><span class="line">// 检查参数</span><br><span class="line">./configure --with-php-config=/download/php8.1/bin/php-config --with-jpeg-dir --with-png-dir --with-freetype-dir --with-zlib-dir --with-gd</span><br><span class="line">// 编译安装</span><br><span class="line">make &amp; make install</span><br></pre></td></tr></table></figure><h4 id="替换gd-so文件"><a href="#替换gd-so文件" class="headerlink" title="替换gd.so文件"></a>替换gd.so文件</h4><p>在PHP目录下的<code>lib/php/extensions/no-debug-non-zts-xxxx</code> xxx是生成的日期，这个不重要。</p><p>找到<code>gd.so</code> 拷贝到你使用的PHP环境的<code>lib/php/extensions</code></p><p>然后修改<code>php.ini</code> 使用<code>extension</code>来引用gd.so文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">extension=/lib/php/extensions/gd.so</span><br></pre></td></tr></table></figure><h4 id="重启php-fpm或者更加直接重启服务器"><a href="#重启php-fpm或者更加直接重启服务器" class="headerlink" title="重启php -fpm或者更加直接重启服务器"></a>重启php -fpm或者更加直接重启服务器</h4><p>重新运行<code>phpinfo</code>查看gd是否包含<code>freetype</code></p><p><img src="https://img.jinjun.top/images/usr/uploads/2020/12/1608736893.png" alt="freetype.png"></p>]]></content>
      
      
      <categories>
          
          <category> 建站知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> PHP </tag>
            
            <tag> PHP扩展 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>给Typecho主题加上预计阅读时间和文章字数统计代码</title>
      <link href="/posts/e3eb43a0.html"/>
      <url>/posts/e3eb43a0.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->最近在很多博客都看到很多都有预计阅读时间和文章字数统计的功能，心思好奇也给百度一番，方法也差不多一样，转载的代码都差不多一样。<h2 id="预计阅读时间"><a href="#预计阅读时间" class="headerlink" title="预计阅读时间"></a>预计阅读时间</h2><p>把代码找个好的位置放好（<code>functions.php</code>）文件里面</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">//文章阅读时间统计</span><br><span class="line">function art_time ($cid)&#123;</span><br><span class="line">    $db=Typecho_Db::get ();</span><br><span class="line">    $rs=$db-&gt;fetchRow ($db-&gt;select (&#x27;table.contents.text&#x27;)-&gt;from (&#x27;table.contents&#x27;)-&gt;where (&#x27;table.contents.cid=?&#x27;,$cid)-&gt;order (&#x27;table.contents.cid&#x27;,Typecho_Db::SORT_ASC)-&gt;limit (1));</span><br><span class="line">    $text = preg_replace(&quot;/[^\x&#123;4e00&#125;-\x&#123;9fa5&#125;]/u&quot;, &quot;&quot;, $rs[&#x27;text&#x27;]);</span><br><span class="line">    $text_word = mb_strlen($text,&#x27;utf-8&#x27;);</span><br><span class="line">    echo ceil($text_word / 400);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在需要的地方调用代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">阅读时长 ≈ &lt;?php echo art_time($this-&gt;cid); ?&gt;分钟</span><br></pre></td></tr></table></figure><h2 id="文章字数统计"><a href="#文章字数统计" class="headerlink" title="文章字数统计"></a>文章字数统计</h2><p>把代码找个好的位置放好（<code>functions.php</code>）文件里面</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">//文章字数统计</span><br><span class="line">function  art_count ($cid)&#123;</span><br><span class="line">    $db=Typecho_Db::get ();</span><br><span class="line">    $rs=$db-&gt;fetchRow ($db-&gt;select (&#x27;table.contents.text&#x27;)-&gt;from (&#x27;table.contents&#x27;)-&gt;where (&#x27;table.contents.cid=?&#x27;,$cid)-&gt;order (&#x27;table.contents.cid&#x27;,Typecho_Db::SORT_ASC)-&gt;limit (1));</span><br><span class="line">    $text = preg_replace(&quot;/[^\x&#123;4e00&#125;-\x&#123;9fa5&#125;]/u&quot;, &quot;&quot;, $rs[&#x27;text&#x27;]);</span><br><span class="line">    echo mb_strlen($text,&#x27;UTF-8&#x27;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在需要的地方调用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php art_count($this-&gt;cid); ?&gt; 字数</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Typecho </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typecho </tag>
            
            <tag> 技术教程 </tag>
            
            <tag> 资源分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP开启GD扩展库</title>
      <link href="/posts/60156778.html"/>
      <url>/posts/60156778.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->昨天在服务器安装了新的环境，但是运行程序的时候一直未开启GD库报错。我记得在编译的时候已经带上了GD库的参数，在PHPinfo()查看已经识别GD库。<p><img src="https://img.jinjun.top/images/usr/uploads/2020/12/1607864902.png" alt="phpGD.png"></p><p>在PHP的目录下运行<code>php -m</code>当中已经显示安装了GD扩展</p><p><img src="https://img.jinjun.top/images/usr/uploads/2020/12/1607864964.png" alt="PHP.png"></p><p>但是在运行程序的时候，依旧显示不开启。然后把<code>php.ini</code>文件的<code>;extension=php_gd2.dll</code>给注释修改为<code>extension=php_gd2.dll</code>重新查询依旧不行，PHPinfo可以识别到gd，但是运行程序依旧报错。</p><p><img src="https://img.jinjun.top/images/usr/uploads/2020/12/1607865535.png" alt="PHP.png"></p><h4 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h4><p>心里想会不会是没有添加gd.so链接</p><p>利用<code>find</code>命令搜索<code>gd.so</code>文件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@11111111 ~]# find / -name gd.so</span><br><span class="line">/usr/lib64/php/modules/gd.so</span><br></pre></td></tr></table></figure><p><img src="https://img.jinjun.top/images/usr/uploads/2020/12/1607865741.png" alt="phpGD.png"></p><p>然后在<code>php.ini</code>文件添加<code>extension=gd.so</code>然后重启PHP，重新运行。问题依旧</p><ul><li>经过反馈官方，得到的回复是需要安装GD库支持FreeType</li></ul><p>MMP，改天再折腾了。</p>]]></content>
      
      
      <categories>
          
          <category> 建站知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> mysql </tag>
            
            <tag> PHP </tag>
            
            <tag> PHP扩展 </tag>
            
            <tag> GD </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>typecho生成首页静态化HTML</title>
      <link href="/posts/3736f639.html"/>
      <url>/posts/3736f639.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->前几天逛typecho论坛的时候发现了typecho首页静态化的方案，对于网站而言，打开首页的速度决定用户的体验，网站速度超过3秒用户大概率选择离开网站。将动态的首页生成静态化（HTML）就可以极大的提升网站的打开速度。生成后速度确实提升很大。如果有太多动态的内容，可能生成出来会导致页面异常。<h3 id="无密码生成HTML"><a href="#无密码生成HTML" class="headerlink" title="无密码生成HTML"></a>无密码生成HTML</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$nowtime</span>=<span class="title function_ invoke__">time</span>();</span><br><span class="line"><span class="variable">$pastsec</span> = <span class="variable">$nowtime</span> - <span class="variable">$_GET</span>[<span class="string">&quot;t&quot;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$pastsec</span>&lt;<span class="number">600</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">exit</span>; <span class="comment">//10分钟更新一次，时间可以自己调整</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">ob_start</span>(); <span class="comment">//打开缓冲区</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;index.php&quot;</span>);</span><br><span class="line"><span class="variable">$content</span> = <span class="title function_ invoke__">ob_get_contents</span>(); <span class="comment">//得到缓冲区的内容</span></span><br><span class="line"><span class="variable">$content</span> .= <span class="string">&quot;\n&lt;script language=javascript src=\&quot;new_html.php?t=&quot;</span>.<span class="variable">$nowtime</span>.<span class="string">&quot;\&quot;&gt;&lt;/script&gt;&quot;</span>; <span class="comment">//加上调用更新程序的代码</span></span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="string">&quot;index.html&quot;</span>,<span class="variable">$content</span>);</span><br><span class="line"><span class="keyword">if</span> (!<span class="title function_ invoke__">function_exists</span>(<span class="string">&quot;file_put_contents&quot;</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">file_put_contents</span>(<span class="params"><span class="variable">$fn</span>,<span class="variable">$fs</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="variable">$fp</span>=<span class="title function_ invoke__">fopen</span>(<span class="variable">$fn</span>,<span class="string">&quot;w+&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">fputs</span>(<span class="variable">$fp</span>,<span class="variable">$fs</span>);</span><br><span class="line"><span class="title function_ invoke__">fclose</span>(<span class="variable">$fp</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="有密码生成HTML"><a href="#有密码生成HTML" class="headerlink" title="有密码生成HTML"></a>有密码生成HTML</h3><p>作者博客：<a href="http://yusure.cn/php/202.html">于帅博客</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 首页静态化脚本</span></span><br><span class="line"><span class="comment"> * Author: Yusure</span></span><br><span class="line"><span class="comment"> * Blog: yusure.cn</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="title function_ invoke__">ini_set</span>( <span class="string">&#x27;date.timezone&#x27;</span>, <span class="string">&#x27;PRC&#x27;</span> );</span><br><span class="line"> </span><br><span class="line"><span class="comment">/* 缓存过期时间 单位：秒 */</span></span><br><span class="line"><span class="variable">$expire</span> = <span class="number">86400</span>;</span><br><span class="line"><span class="comment">/* 主动刷新密码  格式：http://test.com/build_index.php?password=123456 */</span></span><br><span class="line"><span class="variable">$password</span> = <span class="string">&#x27;123456&#x27;</span>;</span><br><span class="line"><span class="variable">$file_time</span> = @<span class="title function_ invoke__">filemtime</span>( <span class="string">&#x27;index.html&#x27;</span> );</span><br><span class="line"><span class="title function_ invoke__">time</span>() - <span class="variable">$file_time</span> &gt; <span class="variable">$expire</span> &amp;&amp; <span class="title function_ invoke__">create_index</span>();</span><br><span class="line"><span class="keyword">isset</span>( <span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>] ) &amp;&amp; <span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>] == <span class="variable">$password</span> &amp;&amp; <span class="title function_ invoke__">create_index</span>();</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 生成 index.html</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">create_index</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">ob_start</span>();</span><br><span class="line">    <span class="keyword">include</span>( <span class="string">&#x27;index.php&#x27;</span> );</span><br><span class="line">    <span class="variable">$content</span> = <span class="title function_ invoke__">ob_get_contents</span>();</span><br><span class="line">    <span class="variable">$content</span> .= <span class="string">&quot;\n&lt;!-- Create time: &quot;</span> . <span class="title function_ invoke__">date</span>( <span class="string">&#x27;Y-m-d H:i:s&#x27;</span> ) . <span class="string">&quot; --&gt;&quot;</span>;</span><br><span class="line">    <span class="comment">/* 调用更新 */</span></span><br><span class="line">    <span class="variable">$content</span> .= <span class="string">&quot;\n&lt;script language=javascript src=&#x27;build_index.php&#x27;&gt;&lt;/script&gt;&quot;</span>;</span><br><span class="line">    <span class="title function_ invoke__">ob_clean</span>();</span><br><span class="line">    <span class="variable">$res</span> = <span class="title function_ invoke__">file_put_contents</span>( <span class="string">&#x27;index.html&#x27;</span>, <span class="variable">$content</span> );</span><br><span class="line">    <span class="keyword">if</span> ( <span class="variable">$res</span> !== <span class="literal">false</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">die</span>( <span class="string">&#x27;Create successful&#x27;</span> );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">die</span>( <span class="string">&#x27;Create error&#x27;</span> );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>把其中一段代码以UTF8编码保存为<code>build_index.php</code> 访问就可以在目录生成缓存文件。</li><li>把首页默认文档优先级设置为<code>index.html</code>为第一位。</li></ul><p>不需要密码脚本的链接：<code>https://你的域名/build_index.php</code><br>需要密码脚本的链接：<code>https://你的域名/build_index.php?password=123456</code></p><h4 id="无密码脚本"><a href="#无密码脚本" class="headerlink" title="无密码脚本"></a>无密码脚本</h4><p>查看首页代码，末尾出现<code>&lt;script language=javascript&gt;......</code>之类的字眼，说明你访问的就是index.html的页面。</p><h4 id="有密码脚本"><a href="#有密码脚本" class="headerlink" title="有密码脚本"></a>有密码脚本</h4><p>查看首页代码，末尾出现缓存的最后一次的更新时间。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- Create time: <span class="number">2020</span>-<span class="number">12</span>-<span class="number">12</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">59</span> --&gt;</span><br><span class="line">&lt;script language=javascript src=<span class="string">&#x27;build_index.php&#x27;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>说明你访问的是HTML的页面。</p>]]></content>
      
      
      <categories>
          
          <category> 建站知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typecho </tag>
            
            <tag> HTML </tag>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网页通过Prettify.js实现代码高亮、显示行号功能</title>
      <link href="/posts/ed3cbfe1.html"/>
      <url>/posts/ed3cbfe1.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->这段时间在折腾typecho主题的代码高亮，尝试了很多的方案但是都不是很满意，如果使用插件的解决方案，个人不是很喜欢。<p>这里我使用Google Code的一款开源的js库Prettify.js，它提供一种简单的形式来着色HTML页面上的程序代码，最值得亮点的地方是不需要指明代码的语言类型，它会自动进行判断。大家也可以在网上找到相对应的wiki。</p><p>Github：<a href="https://github.com/googlearchive/code-prettify">code-prettify</a><br>CDN加速：<a href="https://www.bootcdn.cn/prettify/">BootCDN</a></p><p>大家可以访问上面的git地址获取代码文件，不建议去其他地方去下载不能保证代码的完整性。下面简单介绍我使用的折腾方法。</p><h3 id="实现高亮的步骤"><a href="#实现高亮的步骤" class="headerlink" title="实现高亮的步骤"></a>实现高亮的步骤</h3><ul><li><p>在Github获取代码压缩包，解压得到<code>prettify.js</code>、<code>prettify.css</code>、<code>run_prettify.js</code>文件，上传到你的主题相对应文件夹</p></li><li><p>编辑你的主题的<code>header.php</code>或者<code>footer.php</code>文件去添加以下代码，进行引入<code>CSS</code>、<code>JS</code></p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;css/prettify.css&quot; /&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;js/prettify.js&quot;&gt;&lt;/script&gt; </span><br></pre></td></tr></table></figure><ul><li>在页面进行加载执行处理</li></ul><p>在官方的文档当中，在body的标签中添加onload事件来执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;body onload=”prettyPrint()”&gt;</span><br></pre></td></tr></table></figure><p>这里就可以使用代码高亮了，但是我的主题好像不支持这个东西，使用了onload事件也没有反应，但是在F12调试的时候，输入<code>prettyPrint()</code>才能进行渲染，不然相当于没有生效。</p><p>还有一种方法是把<code>prettify.js</code>替换成<code>run_prettify.js</code>就可以不用在body里面写onload事件，就可以让代码自动加载。</p><p>Markdown编辑器可以加高亮标签来使用，如果使用HTML要添加<code>&lt;pre&gt; &lt;/pre&gt;</code>来实现高亮。我这里就直接使用JQuery来直接实现，记得在主题引入Jquery文件，很多网站都引用了应该不成问题</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$(window).load(function()&#123;</span><br><span class="line">  $(&quot;pre&quot;).addClass(&quot;prettyprint&quot;); //给pre标签加一个父标签选择器</span><br><span class="line">  prettyPrint(); //代替body上的onload事件</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$(&#x27;pre&#x27;).each(function()&#123;</span><br><span class="line">    if( !$(this).attr(&#x27;style&#x27;) ) $(this).addClass(&#x27;prettyprint&#x27;); //给pre标签添加父标签选择器</span><br><span class="line">    prettyPrint(); //代替body的onload事件</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="显示行号"><a href="#显示行号" class="headerlink" title="显示行号"></a>显示行号</h2><p>Prettify可以通过添加<code>linenums</code>元素来添加行号，但是要注意行号的显示的代码<br>显示格式一：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;pre&gt;</span><br><span class="line"> &lt;code&gt;</span><br><span class="line">   HelloWord！！！</span><br><span class="line"> &lt;/code&gt;</span><br><span class="line">&lt;/pre&gt;</span><br></pre></td></tr></table></figure><p>显示格式二：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;pre&gt;</span><br><span class="line">  HelloWord！！！</span><br><span class="line">&lt;/pre&gt;</span><br></pre></td></tr></table></figure><p>通过查看你的源代码看你的输出是怎么的，typecho是第一种方法，这里可以给<code>code</code>添加<code>linenums</code>元素来显示</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$(&#x27;code&#x27;).each(function()&#123;</span><br><span class="line">    if( !$(this).attr(&#x27;style&#x27;) ) $(this).addClass(&#x27;prettyprint linenums&#x27;)</span><br></pre></td></tr></table></figure><p>参考CSS： <a href="https://github.com/googlearchive/code-prettify/blob/master/src/prettify.css">https://github.com/googlearchive/code-prettify/blob/master/src/prettify.css</a></p>]]></content>
      
      
      <categories>
          
          <category> Typecho </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typecho </tag>
            
            <tag> 代码片段 </tag>
            
            <tag> 代码高亮 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决transform scale 放大图片变模糊问题</title>
      <link href="/posts/e977cf68.html"/>
      <url>/posts/e977cf68.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->最近在博客加了一个移动鼠标到图片放大的特效，使用了`transform scale`特效。但是发现放大后图片变得模糊，放大前半秒还是可以看见的，完全放大后像加了一层灰蒙模板一样。<h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><p>通过添加<code>translateZ(0)</code>来解决</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.excerpt img:hover&#123;</span><br><span class="line">    transform:translateZ(0) scale(1.15);</span><br><span class="line">    -webkit-transform:translateZ(0) scale(1.15);</span><br><span class="line">    z-index:9999999;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><p>实现先放大再缩小这样就可使清晰度升高</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.excerpt img:hover&#123;</span><br><span class="line">    transform:translate3d(2%, 2%, 0)scale(1.15);</span><br><span class="line">    -webkit-transform:translate3d(2%, 2%, 0)scale(1.15);</span><br><span class="line">    z-index:9999999;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 资源分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>防止网站被其他网站通过iframe框架引用资源</title>
      <link href="/posts/1244493.html"/>
      <url>/posts/1244493.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->自己辛苦建的网站被别人，写的文章被别人进行镜像，不仅危害站长的个人权益，还有可能被搜索引擎给K下来，如果发现自己的网站被某些非授权网站进行iframe框架引用，该怎么应对。<p>下面介绍两种防止网站被别人通过iframe框架引用的两种实用方法。</p><h2 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h2><p>将下面这段代码放到网站页面的</body>标签前，这样别人在通过iframe框架引用你的网站网页时，浏览器会自动跳转到你的网站所引用的页面上。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">if (self == top) &#123;</span><br><span class="line">    var theBody = document.getElementsByTagName(&#x27;body&#x27;)[0];</span><br><span class="line">    theBody.style.display = &quot;block&quot;;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    top.location = self.location;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><p>使用X-Frame-Options防止网页被iframe：</p><p>X-FRAME-OPTIONS是微软提出的一个http头，专门用来防御利用iframe嵌套的点击劫持攻击。</p><p>并且在IE8、Firefox3.6、Chrome4以上的版本均能很好的支持。</p><p>这个头有三个值：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">DENY               // 拒绝任何域加载  </span><br><span class="line">SAMEORIGIN         // 允许同源域下加载  </span><br><span class="line">ALLOW-FROM         // 可以定义允许frame加载的页面地址</span><br></pre></td></tr></table></figure><p>[tabs]<br>[tab-pane label&#x3D;”PHP设置”]header(‘X-Frame-Options:Deny’);[&#x2F;tab-pane]<br>[tab-pane label&#x3D;”Nginx配置”]add_header X-Frame-Options SAMEORIGIN[&#x2F;tab-pane]<br>[tab-pane label&#x3D;”Apache配置”]Header always append X-Frame-Options SAMEORIGIN[&#x2F;tab-pane]<br>[tab-pane label&#x3D;”Kangle配置”]登录后台—请求控制—插入—可用的标记模块—add_header<br><img src="https://img.jinjun.top/images/usr/uploads/2020/12/1607082601.png" alt="X-Frame-Options.png"><br>[&#x2F;tab-pane]<br>[&#x2F;tabs]</p>]]></content>
      
      
      <categories>
          
          <category> 资源分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iframe </tag>
            
            <tag> 建站教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Typecho 非插件实现内容回复可见功能</title>
      <link href="/posts/76fd330.html"/>
      <url>/posts/76fd330.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->之前看见WP的博客，部分内容都带着阅读回复可见的功能。所以在网上找了很多的版本，所以这个也是从网上搬来的。这个方法已经测试过可行，分享给你们。来自: [typecho wiki][1]<p>进入 <code>网站目录/usr/themes/正在使用主题</code> 找到 <code>post.php</code> 打开</p><h3 id="步骤一"><a href="#步骤一" class="headerlink" title="步骤一"></a>步骤一</h3><p>在 <code>post.php</code> 找到 <code>&lt;?php $this-&gt;content(); ?&gt;</code> 替换成</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$db = Typecho_Db::get();</span><br><span class="line">$sql = $db-&gt;select()-&gt;from(&#x27;table.comments&#x27;)</span><br><span class="line">    -&gt;where(&#x27;cid = ?&#x27;,$this-&gt;cid)</span><br><span class="line">    -&gt;where(&#x27;mail = ?&#x27;, $this-&gt;remember(&#x27;mail&#x27;,true))</span><br><span class="line">    -&gt;limit(1);</span><br><span class="line">$result = $db-&gt;fetchAll($sql);</span><br><span class="line">if($this-&gt;user-&gt;hasLogin() || $result) &#123;</span><br><span class="line">    $content = preg_replace(&quot;/\[hide\](.*?)\[\/hide\]/sm&quot;,&#x27;&lt;div class=&quot;reply2view&quot;&gt;$1&lt;/div&gt;&#x27;,$this-&gt;content);</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">    $content = preg_replace(&quot;/\[hide\](.*?)\[\/hide\]/sm&quot;,&#x27;&lt;div class=&quot;reply2view&quot;&gt;此处内容需要评论回复后方可阅读。&lt;/div&gt;&#x27;,$this-&gt;content);</span><br><span class="line">&#125;</span><br><span class="line">echo $content </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h3 id="解决feed内容和缩略内容暴露"><a href="#解决feed内容和缩略内容暴露" class="headerlink" title="解决feed内容和缩略内容暴露"></a>解决feed内容和缩略内容暴露</h3><p>在 <code>functions.php</code> 中加入如下代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Typecho_Plugin::factory(&#x27;Widget_Abstract_Contents&#x27;)-&gt;excerptEx = array(&#x27;moleft&#x27;,&#x27;one&#x27;);</span><br><span class="line">Typecho_Plugin::factory(&#x27;Widget_Abstract_Contents&#x27;)-&gt;contentEx = array(&#x27;moleft&#x27;,&#x27;one&#x27;);</span><br><span class="line">class moleft &#123;</span><br><span class="line">    public static function one($con,$obj,$text)</span><br><span class="line">    &#123;</span><br><span class="line">      $text = empty($text)?$con:$text;</span><br><span class="line">      if(!$obj-&gt;is(&#x27;single&#x27;))&#123;</span><br><span class="line">      $text = preg_replace(&quot;/\[hide\](.*?)\[\/hide\]/sm&quot;,&#x27;此处内容已隐藏&#x27;,$text);</span><br><span class="line">      &#125;</span><br><span class="line">      return $text;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>就是用插件接口，在缩略内容输出之前，隐藏掉或者替换掉回复可见内容，同时使用if判断，来针对非single页面进行隐藏。</p><h3 id="步骤三"><a href="#步骤三" class="headerlink" title="步骤三"></a>步骤三</h3><p>在写文章需要隐藏部分内容时用以下写法(去掉@)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[@hide]要隐藏的内容[/hide]</span><br></pre></td></tr></table></figure><p>css代码参考，我在使用的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.reply2view &#123;</span><br><span class="line">    background-color: rgba(0,0,0,.075);</span><br><span class="line">    border-radius: 5px;</span><br><span class="line">    border: 1px dashed #888888;</span><br><span class="line">    position: relative;</span><br><span class="line">    text-align: center;</span><br><span class="line">    padding: 10px 20px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Typecho </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typecho </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Typecho实现类似微博几分钟、几天前的词义化时间</title>
      <link href="/posts/a148d6c8.html"/>
      <url>/posts/a148d6c8.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->在看见别人的博客评论框显示着，几分钟前，几个天前的时间显示，而不是单纯的显示一个完整的时间。于是上网一通搜索，在大佬的博客找到方法。<h2 id="编辑文件-var-Typecho-I18n-php-找到如下代码。"><a href="#编辑文件-var-Typecho-I18n-php-找到如下代码。" class="headerlink" title="编辑文件 var/Typecho/I18n.php 找到如下代码。"></a>编辑文件 <code>var/Typecho/I18n.php</code> 找到如下代码。</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 词义化时间</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@access</span> public</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> string $from 起始时间</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> string $now 终止时间</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">dateWord</span>(<span class="params"><span class="variable">$from</span>, <span class="variable">$now</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="variable">$between</span> = <span class="variable">$now</span> - <span class="variable">$from</span>;</span><br><span class="line"><span class="comment">/** 如果是一天 */</span></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$between</span> &gt;= <span class="number">0</span> &amp;&amp; <span class="variable">$between</span> &lt; <span class="number">86400</span> &amp;&amp; <span class="title function_ invoke__">date</span>(<span class="string">&#x27;d&#x27;</span>, <span class="variable">$from</span>) == <span class="title function_ invoke__">date</span>(<span class="string">&#x27;d&#x27;</span>, <span class="variable">$now</span>)) &#123;</span><br><span class="line"><span class="comment">/** 如果是一小时 */</span></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$between</span> &lt; <span class="number">3600</span>) &#123;</span><br><span class="line"><span class="comment">/** 如果是一分钟 */</span></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$between</span> &lt; <span class="number">60</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="number">0</span> == <span class="variable">$between</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="title function_ invoke__">_t</span>(<span class="string">&#x27;刚刚&#x27;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;%d&#x27;</span>, <span class="variable">$between</span>, <span class="title function_ invoke__">_n</span>(<span class="string">&#x27;一秒前&#x27;</span>, <span class="string">&#x27;%d秒前&#x27;</span>, <span class="variable">$between</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$min</span> = <span class="title function_ invoke__">floor</span>(<span class="variable">$between</span> / <span class="number">60</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;%d&#x27;</span>, <span class="variable">$min</span>, <span class="title function_ invoke__">_n</span>(<span class="string">&#x27;一分钟前&#x27;</span>, <span class="string">&#x27;%d分钟前&#x27;</span>, <span class="variable">$min</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$hour</span> = <span class="title function_ invoke__">floor</span>(<span class="variable">$between</span> / <span class="number">3600</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;%d&#x27;</span>, <span class="variable">$hour</span>, <span class="title function_ invoke__">_n</span>(<span class="string">&#x27;一小时前&#x27;</span>, <span class="string">&#x27;%d小时前&#x27;</span>, <span class="variable">$hour</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/** 如果是昨天 */</span></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$between</span> &gt; <span class="number">0</span> &amp;&amp; <span class="variable">$between</span> &lt; <span class="number">172800</span> </span><br><span class="line">&amp;&amp; (<span class="title function_ invoke__">date</span>(<span class="string">&#x27;z&#x27;</span>, <span class="variable">$from</span>) + <span class="number">1</span> == <span class="title function_ invoke__">date</span>(<span class="string">&#x27;z&#x27;</span>, <span class="variable">$now</span>) <span class="comment">// 在同一年的情况 </span></span><br><span class="line">|| <span class="title function_ invoke__">date</span>(<span class="string">&#x27;z&#x27;</span>, <span class="variable">$from</span>) + <span class="number">1</span> == <span class="title function_ invoke__">date</span>(<span class="string">&#x27;L&#x27;</span>) + <span class="number">365</span> + <span class="title function_ invoke__">date</span>(<span class="string">&#x27;z&#x27;</span>, <span class="variable">$now</span>))) &#123; <span class="comment">// 跨年的情况</span></span><br><span class="line"> <span class="keyword">return</span> <span class="title function_ invoke__">_t</span>(<span class="string">&#x27;昨天 %s&#x27;</span>, <span class="title function_ invoke__">date</span>(<span class="string">&#x27;H:i&#x27;</span>, <span class="variable">$from</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/** 如果是一个星期 */</span></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$between</span> &gt; <span class="number">0</span> &amp;&amp; <span class="variable">$between</span> &lt; <span class="number">604800</span>) &#123;</span><br><span class="line"><span class="variable">$day</span> = <span class="title function_ invoke__">floor</span>(<span class="variable">$between</span> / <span class="number">86400</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;%d&#x27;</span>, <span class="variable">$day</span>, <span class="title function_ invoke__">_n</span>(<span class="string">&#x27;一天前&#x27;</span>, <span class="string">&#x27;%d天前&#x27;</span>, <span class="variable">$day</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/** 如果是 */</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">date</span>(<span class="string">&#x27;Y&#x27;</span>, <span class="variable">$from</span>) == <span class="title function_ invoke__">date</span>(<span class="string">&#x27;Y&#x27;</span>, <span class="variable">$now</span>)) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="title function_ invoke__">date</span>(<span class="title function_ invoke__">_t</span>(<span class="string">&#x27;Y年n月j日&#x27;</span>), <span class="variable">$from</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="title function_ invoke__">date</span>(<span class="title function_ invoke__">_t</span>(<span class="string">&#x27;Y年m月d日&#x27;</span>), <span class="variable">$from</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是我发现官方提供的代码没有“周”和“月”，所以我动手完善了一下代码，添加了“周”和“月”，只有1年以及1年以上的时间才会显示完整时间。这样可能比较好点吧~ 可以自行考虑修改。完善后的代码如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line">* 词义化时间</span><br><span class="line">*</span><br><span class="line">* @access public</span><br><span class="line">* @param string $from 起始时间</span><br><span class="line">* @param string $now 终止时间</span><br><span class="line">* @return string</span><br><span class="line">*/</span><br><span class="line">public static function dateWord($from, $now)</span><br><span class="line">&#123;</span><br><span class="line">$between = $now - $from;</span><br><span class="line">/** 如果是一天 */</span><br><span class="line">if ($between &gt;= 0 &amp;&amp; $between &lt; 86400 &amp;&amp; date(&#x27;d&#x27;, $from) == date(&#x27;d&#x27;, $now)) &#123;</span><br><span class="line">/** 如果是一小时 */</span><br><span class="line">if ($between &lt; 3600) &#123;</span><br><span class="line">/** 如果是一分钟 */</span><br><span class="line">if ($between &lt; 60) &#123;</span><br><span class="line">if (0 == $between) &#123;</span><br><span class="line">return _t(&#x27;刚刚&#x27;);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">return str_replace(&#x27;%d&#x27;, $between, _n(&#x27;刚刚&#x27;, &#x27;%d秒前&#x27;, $between));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">$min = floor($between / 60);</span><br><span class="line">return str_replace(&#x27;%d&#x27;, $min, _n(&#x27;1分钟前&#x27;, &#x27;%d分钟前&#x27;, $min));</span><br><span class="line">&#125;</span><br><span class="line">$hour = floor($between / 3600);</span><br><span class="line">return str_replace(&#x27;%d&#x27;, $hour, _n(&#x27;1小时前&#x27;, &#x27;%d小时前&#x27;, $hour));</span><br><span class="line">&#125;</span><br><span class="line">/** 如果是昨天 */</span><br><span class="line">if ($between &gt; 0 &amp;&amp; $between &lt; 172800 </span><br><span class="line">&amp;&amp; (date(&#x27;z&#x27;, $from) + 1 == date(&#x27;z&#x27;, $now)                             // 在同一年的情况 </span><br><span class="line">|| date(&#x27;z&#x27;, $from) + 1 == date(&#x27;L&#x27;) + 365 + date(&#x27;z&#x27;, $now))) &#123;    // 跨年的情况</span><br><span class="line">return _t(&#x27;昨天 %s&#x27;, date(&#x27;H:i&#x27;, $from));</span><br><span class="line">&#125;</span><br><span class="line">/** 如果是一个星期以内 */</span><br><span class="line">if ($between &gt; 0 &amp;&amp; $between &lt; 604800) &#123;</span><br><span class="line">$day = floor($between / 86400);</span><br><span class="line">return str_replace(&#x27;%d&#x27;, $day, _n(&#x27;1天前&#x27;, &#x27;%d天前&#x27;, $day));</span><br><span class="line">&#125;</span><br><span class="line">/** 如果是一个星期以上 */</span><br><span class="line">if ($between &gt; 0 &amp;&amp; $between &lt; 2592000)&#123;</span><br><span class="line">$week = floor($between / 648000);</span><br><span class="line">return str_replace(&#x27;%d&#x27;, $week, _n(&#x27;1周前&#x27;, &#x27;%d周前&#x27;, $week));</span><br><span class="line">&#125;</span><br><span class="line">/** 如果是一年以内 */</span><br><span class="line">if ($between &gt; 0 &amp;&amp; $between &lt; 31557600)&#123;</span><br><span class="line">$month = floor($between / 2629800);</span><br><span class="line">return str_replace(&#x27;%d&#x27;, $month, _n(&#x27;1个月前&#x27;, &#x27;%d个月前&#x27;, $month));</span><br><span class="line">&#125;</span><br><span class="line">/** 如果是一年以上 */</span><br><span class="line">if (date(&#x27;Y&#x27;, $from) == date(&#x27;Y&#x27;, $now)) &#123;</span><br><span class="line">return date(_t(&#x27;Y年n月j日 H:i&#x27;), $from);</span><br><span class="line">&#125;</span><br><span class="line">return date(_t(&#x27;Y年m月d日 H:i&#x27;), $from);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="食用方法"><a href="#食用方法" class="headerlink" title="食用方法"></a>食用方法</h2><p>在你想要替换的地方寻找</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php $comments-&gt;date(); ?&gt;</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php $comments-&gt;dateWord(); ?&gt;</span><br></pre></td></tr></table></figure><h3 id="感谢一下"><a href="#感谢一下" class="headerlink" title="感谢一下"></a>感谢一下</h3><p>文章来自：<a href="https://www.ryongyon.com/typecho-to-achieve-a-similar-microblog-a-few-minutes-a-few-days-ago-the-meaning-of-time.html">Ryongyon!</a></p>]]></content>
      
      
      <categories>
          
          <category> Typecho </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typecho </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>测试短代码标签</title>
      <link href="/posts/244a638d.html"/>
      <url>/posts/244a638d.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->> 终于在大佬的博客上成功移植短代码成功，在这里感谢Joe大佬无私奉献的精神。<p>大佬博客：<a href="http://ae.js.cn/">Joe的博客</a> ，终于实现以下短代码。其实都是白嫖大佬的代码。?</p><p>[line]当前线状标题短代码[&#x2F;line]</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[@line]当前线状标题短代码[/line]</span><br></pre></td></tr></table></figure><p>[alt type&#x3D;”info”]用的时候把 @ 符号删掉[&#x2F;alt]</p><p>[line]短代码标签[&#x2F;line]</p><p>[tag type&#x3D;”default”]标签一[&#x2F;tag] [tag type&#x3D;”success”]标签二[&#x2F;tag] [tag type&#x3D;”info”]标签三[&#x2F;tag] [tag type&#x3D;”warning”]标签四[&#x2F;tag] [tag type&#x3D;”danger”]标签五[&#x2F;tag]</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[@tag type=&quot;default&quot;]标签一[/tag]</span><br><span class="line">[@tag type=&quot;success&quot;]标签二[/tag]</span><br><span class="line">[@tag type=&quot;info&quot;]标签三[/tag]</span><br><span class="line">[@tag type=&quot;warning&quot;]标签四[/tag]</span><br><span class="line">[@tag type=&quot;danger&quot;]标签五[/tag]</span><br></pre></td></tr></table></figure><p>[alt type&#x3D;”info”]用的时候把 @ 符号删掉[&#x2F;alt]</p><p>[line]按钮短代码[&#x2F;line]</p><p>[btn href&#x3D;”” type&#x3D;”default”]默认按钮[&#x2F;btn] [btn href&#x3D;”” type&#x3D;”primary”]主要按钮[&#x2F;btn] [btn href&#x3D;”” type&#x3D;”success”]成功按钮[&#x2F;btn] [btn href&#x3D;”” type&#x3D;”info”]信息按钮[&#x2F;btn] [btn href&#x3D;”” type&#x3D;”warning”]警告按钮[&#x2F;btn] [btn href&#x3D;”” type&#x3D;”danger”]危险按钮[&#x2F;btn]</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[@btn href=&quot;&quot; type=&quot;default&quot;]默认按钮[/btn]</span><br><span class="line">[@btn href=&quot;&quot; type=&quot;primary&quot;]主要按钮[/btn]</span><br><span class="line">[@btn href=&quot;&quot; type=&quot;success&quot;]成功按钮[/btn]</span><br><span class="line">[@btn href=&quot;&quot; type=&quot;info&quot;]信息按钮[/btn]</span><br><span class="line">[@btn href=&quot;&quot; type=&quot;warning&quot;]警告按钮[/btn]</span><br><span class="line">[@btn href=&quot;&quot; type=&quot;danger&quot;]危险按钮[/btn]</span><br></pre></td></tr></table></figure><p>[alt type&#x3D;”info”]用的时候把 @ 符号删掉[&#x2F;alt]</p><p>[line]提示短代码[&#x2F;line]</p><p>[alt type&#x3D;”success”]成功提示的文案[&#x2F;alt]<br>[alt type&#x3D;”info”]消息提示的文案[&#x2F;alt]<br>[alt type&#x3D;”warning”]警告提示的文案[&#x2F;alt]<br>[alt type&#x3D;”error”]错误提示的文案[&#x2F;alt]</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[@alt type=&quot;success&quot;]成功提示的文案[/alt]</span><br><span class="line">[@alt type=&quot;info&quot;]消息提示的文案[/alt]</span><br><span class="line">[@alt type=&quot;warning&quot;]警告提示的文案[/alt]</span><br><span class="line">[@alt type=&quot;error&quot;]错误提示的文案[/alt]</span><br></pre></td></tr></table></figure><p>[alt type&#x3D;”info”]用的时候把 @ 符号删掉[&#x2F;alt]</p><p>[line]TAB短代码[&#x2F;line]</p><p>[tabs]<br>[tab-pane label&#x3D;”用户管理”]用户管理[&#x2F;tab-pane]<br>[tab-pane label&#x3D;”配置管理”]配置管理[&#x2F;tab-pane]<br>[tab-pane label&#x3D;”角色管理”]角色管理[&#x2F;tab-pane]<br>[tab-pane label&#x3D;”角色管理”]角色管理[&#x2F;tab-pane]<br>[&#x2F;tabs]</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[@tabs]</span><br><span class="line">[@tab-pane label=&quot;用户管理&quot;]用户管理[/tab-pane]</span><br><span class="line">[@tab-pane label=&quot;配置管理&quot;]配置管理[/tab-pane]</span><br><span class="line">[@tab-pane label=&quot;角色管理&quot;]角色管理[/tab-pane]</span><br><span class="line">[@tab-pane label=&quot;角色管理&quot;]角色管理[/tab-pane]</span><br><span class="line">[@/tabs]</span><br></pre></td></tr></table></figure><p>[alt type&#x3D;”info”]用的时候把 @ 符号删掉[&#x2F;alt]</p><p>[line]基础卡片短代码[&#x2F;line]</p><p>[card-default width&#x3D;”100%” label&#x3D;”卡片标题”]卡片内容[&#x2F;card-default]</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[@card-default width=&quot;100%&quot; label=&quot;卡片标题&quot;]卡片内容[/card-default]</span><br></pre></td></tr></table></figure><p>[alt type&#x3D;”info”]用的时候把 @ 符号删掉[&#x2F;alt]</p><p>[line]展开关闭短代码[&#x2F;line]</p><p>[collapse]<br>[collapse-item label&#x3D;”标题”]我是隐藏的[&#x2F;collapse-item]<br>[collapse-item label&#x3D;”标题”]我是隐藏的[&#x2F;collapse-item]<br>[&#x2F;collapse]</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[@collapse]</span><br><span class="line">[@collapse-item label=&quot;标题&quot;]我是隐藏的[/collapse-item]</span><br><span class="line">[@collapse-item label=&quot;标题&quot;]我是隐藏的[/collapse-item]</span><br><span class="line">[@/collapse]</span><br></pre></td></tr></table></figure><p>[alt type&#x3D;”info”]用的时候把 @ 符号删掉[&#x2F;alt]</p><p>[line]时间线短代码[&#x2F;line]</p><p>[timeline]<br>[timeline-item]星期一[&#x2F;timeline-item]<br>[timeline-item]星期二[&#x2F;timeline-item]<br>[&#x2F;timeline]</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[@timeline]</span><br><span class="line">[@timeline-item]星期一[/timeline-item]</span><br><span class="line">[@timeline-item]星期二[/timeline-item]</span><br><span class="line">[@/timeline]</span><br></pre></td></tr></table></figure><p>[alt type&#x3D;”info”]用的时候把 @ 符号删掉[&#x2F;alt]</p><p>[line]视频短代码[&#x2F;line]</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[@video src=&quot;视频链接&quot; /]</span><br></pre></td></tr></table></figure><p>[alt type&#x3D;”info”]用的时候把 @ 符号删掉[&#x2F;alt]</p><p>[video src&#x3D;”<a href="https://img.jinjun.top/images/xiaojun.mp4">https://img.jinjun.top/images/xiaojun.mp4</a>“ &#x2F;]</p><p>[line]回复可见短代码[&#x2F;line]</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[@hide]我是被隐藏的内容[@/hide]</span><br></pre></td></tr></table></figure><p>[hide]我是被隐藏的内容[&#x2F;hide]</p><p>[line]相册短代码[&#x2F;line]</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[@photo]</span><br><span class="line">!@[screenshot][1]</span><br><span class="line">!@[screenshot][2]</span><br><span class="line">!@[screenshot][3]</span><br><span class="line"></span><br><span class="line">[@/photo]</span><br><span class="line">  [@1]: http://localhost/3549415449.png</span><br><span class="line">  [@2]: http://localhost/1754100313.png</span><br><span class="line">  [@3]: http://localhost/313953441.png</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>[alt type&#x3D;”info”]用的时候把 @ 符号删掉[&#x2F;alt]</p><p>[photo]<br><img src="https://www.jinjun.top/usr/themes/DUX/img/th.jpg" alt="screenshot.png"><br><img src="https://www.jinjun.top/usr/themes/DUX/img/th.jpg" alt="请输入图片描述"><br><img src="https://www.jinjun.top/usr/themes/DUX/img/th.jpg" alt="请输入图片描述"><br><img src="https://www.jinjun.top/usr/themes/DUX/img/th.jpg" alt="请输入图片描述"><br><img src="https://www.jinjun.top/usr/themes/DUX/img/th.jpg" alt="screenshot.png"><br><img src="https://www.jinjun.top/usr/themes/DUX/img/th.jpg" alt="请输入图片描述"><br><img src="https://www.jinjun.top/usr/themes/DUX/img/th.jpg" alt="请输入图片描述"><br><img src="https://www.jinjun.top/usr/themes/DUX/img/th.jpg" alt="请输入图片描述"><br>[&#x2F;photo]</p><p>[line]网易云短代码[&#x2F;line]</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[@music id=&quot;1495496315&quot;/]</span><br></pre></td></tr></table></figure><p>[alt type&#x3D;”info”]用的时候把 @ 符号删掉[&#x2F;alt]</p><p>[music id&#x3D;”1495496315”&#x2F;]</p><p>[line]网易云歌单短代码[&#x2F;line]</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[@music-list id=&quot;5370364292&quot; /]</span><br></pre></td></tr></table></figure><p>[alt type&#x3D;”info”]用的时候把 @ 符号删掉[&#x2F;alt]</p><p>[music-list id&#x3D;”5370364292” &#x2F;]</p><p>[line]卡片短代码[&#x2F;line]</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[@card-nav]</span><br><span class="line">[@card-nav-item src=&quot;http://baidu.com&quot; title=&quot;百度一下&quot; img=&quot;https://www.baidu.com/img/baidu_85beaf5496f291521eb75ba38eacbd87.svg&quot; /]</span><br><span class="line">[@card-nav-item src=&quot;http://baidu.com&quot; title=&quot;百度一下&quot; img=&quot;https://www.baidu.com/img/baidu_85beaf5496f291521eb75ba38eacbd87.svg&quot; /]</span><br><span class="line">[@/card-nav]</span><br></pre></td></tr></table></figure><p>[alt type&#x3D;”info”]用的时候把 @ 符号删掉[&#x2F;alt]</p><p>[card-nav]<br>[card-nav-item src&#x3D;”<a href="http://baidu.com/">http://baidu.com</a>“ title&#x3D;”百度一下” img&#x3D;”<a href="https://www.baidu.com/img/baidu_85beaf5496f291521eb75ba38eacbd87.svg">https://www.baidu.com/img/baidu_85beaf5496f291521eb75ba38eacbd87.svg</a>“ &#x2F;]<br>[card-nav-item src&#x3D;”<a href="http://baidu.com/">http://baidu.com</a>“ title&#x3D;”百度一下” img&#x3D;”<a href="https://www.baidu.com/img/baidu_85beaf5496f291521eb75ba38eacbd87.svg">https://www.baidu.com/img/baidu_85beaf5496f291521eb75ba38eacbd87.svg</a>“ &#x2F;]<br>[&#x2F;card-nav]</p>]]></content>
      
      
      <categories>
          
          <category> Typecho </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typecho </tag>
            
            <tag> 短代码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>薅羊毛，0元享华为视频会员</title>
      <link href="/posts/3366104c.html"/>
      <url>/posts/3366104c.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->今年双十一，也没有打算买什么东西，想买的东西提前在京东就买好了，还不用蹲点清购物车。<p>最近看到爱奇艺也准备涨价了，也是时候收割一波韭菜了。其实看视频要么就是爱奇艺和腾讯，其他好像也没有多少片源，在逛华为视频的时候，发现一个比较有趣的活动。</p><p><img src="https://img.jinjun.top/images/usr/uploads/2020/11/1605071622.jpeg" alt="DE9E59DC-498E-4E9D-982B-1015986F0B71.jpeg"></p><p>其实就是99元购买一年的华为视频VIP再赠送50元的京东E卡和49元的花币。</p><p>0元购买方法是这样的</p><p>99元购买一年VIP会员，领取了50的京东E卡和49的花币</p><p>再购买一年VIP使用花币支付，付款50元。领取50E卡和49花币。</p><p>以此类推，一共购买4次。</p><p>一共付款 99+50+50+50&#x3D;249</p><p>京东E卡：50*4&#x3D;200 还剩下49的花币 一共就是249</p><p>相当于白嫖4年会员加京东200E卡和49元花币。这波还算不亏。</p><p><img src="https://img.jinjun.top/images/usr/uploads/2020/11/1605072368.jpeg" alt="3D1EE9DC-3520-4B5E-9852-C41AA4D6A34D.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> 资源分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 华为 </tag>
            
            <tag> 花币 </tag>
            
            <tag> 华为视频 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux终端登陆提示 -bash-4.2# 解决方法</title>
      <link href="/posts/68cac182.html"/>
      <url>/posts/68cac182.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->今天登陆一下服务器打算优化一下数据库配置，登陆一下提示`-bash-4.2#` 而不是显示主机名。搞了半天都不知道发生了什么情况，就@了一下我的朋友，朋友说是不是删除了什么，这是用户目录没有配置文件。这时候想到写脚本的时候在这服务器运行了一下，其中有其中有一条是清空root的缓存文件，写错了把root目录下的文件全部删除。<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>查看用户目录有没有配置文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-bash-4.2# ls -a</span><br><span class="line">.  ..  ..</span><br></pre></td></tr></table></figure><p>好吧，所有的文件全部清空，正常来说每个用户目录应该包含以下<code>.bashrc</code>、<code>.bash_logout</code> 、<code>.bash_profile</code>这些都是每个用户必备的文件。这些文件都存放在<code>/etc/skel</code>目录，新创建的用户，都会在这目录下复制一份到用户目录下。</p><p>使用以下命令从主默认文件重新拷贝一份过来用户根目录下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cp /etc/skel/.bashrc /root/</span><br><span class="line">cp /etc/skel/.bash_profile  /root/</span><br><span class="line">cp /etc/skel/.bash_logout  /root/</span><br></pre></td></tr></table></figure><p>然后注销用户重新登陆或者<code>reboot</code>重启系统，重新登陆即可恢复正常</p>]]></content>
      
      
      <categories>
          
          <category> 建站知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 终端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vmware虚拟机安装macOS踩坑记录</title>
      <link href="/posts/6a00faf.html"/>
      <url>/posts/6a00faf.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->一直想体验一下macOS的魅力，拖到现在才安装上。双11快到，不知道电子元件有没有便宜点，想给自己升级一下主机打算弄黑果，之前在自己的笔记本弄差点把bios刷坏，独显驱动无解也放弃了。索性用VMware来安装一下macOS来熟悉一下。体验了几天发现，不是很顺手，生态没有win丰富。<h2 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h2><p>VMware? Workstation 16 Pro</p><p>Unlocked v3.0.3</p><p>VMware tools <code>darwin.iso</code> 补丁</p><p>macOS 镜像文件</p><h2 id="VMware安装过程"><a href="#VMware安装过程" class="headerlink" title="VMware安装过程"></a>VMware安装过程</h2><p>这里不做多大介绍，百度一大堆，自行度娘。</p><p>安装完成后，不要打开软件，进入unlocked解锁支持Mac OS安装</p><p>已经打开，可以在任务管理器来终结vmware的相关的进程再尝试安装</p><h2 id="Unlocked-安装"><a href="#Unlocked-安装" class="headerlink" title="Unlocked 安装"></a>Unlocked 安装</h2><p><a href="https://github.com/paolo-projects/unlocker/releases">https://github.com/paolo-projects/unlocker/releases</a><br><a href="https://github.com/BDisp/unlocker/releases">https://github.com/BDisp/unlocker/releases</a></p><p>下载最新版本，解压出来，windows10 赋予超级管理员运行 <code>win-install.cmd</code> 进行安装，会自动下载<code>darwin.iso</code>文件</p><p>可能会遇到文件下载慢或者卡住不动，直接就可以关闭窗口若下载失败。手动下载：<a href="http://softwareupdate.vmware.com/cds/vmw-desktop/fusion/">vmw-desktop</a> </p><p>在最新的目录下<code>packages</code>里下载<code>com.vmware.fusion.tools.darwin.zip.tar</code></p><p>然后解压, 再把<code>darwin.iso</code>文件复制到<code>VMware</code>的安装目录里面.</p><h3 id="踩坑一"><a href="#踩坑一" class="headerlink" title="踩坑一"></a>踩坑一</h3><p>不能进入系统，出现cpuid….后闪退</p><p>在 <code>.vmx</code>配置文件后面添加以下代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cpuid.1.eax = &quot;00000000000000010000011010100101&quot;</span><br></pre></td></tr></table></figure><p>保存文件重新开机</p><h3 id="踩坑二"><a href="#踩坑二" class="headerlink" title="踩坑二"></a>踩坑二</h3><p>虚拟机不能全屏运行，已经安装最新的<code>darwin.iso</code> VMware tools </p><p><img src="https://img.jinjun.top/images/usr/uploads/2020/10/1603770988.png" alt="QQ20201027-115601.png"></p><p>可以尝试卸载最新安装一下旧版本，我的Mac OS 10.13版本，使用最新的版本的<code>11.10</code>版本的<code>darwin.iso</code> 无法适应全屏，尝试了多次发现<code>8.5.8</code>的<code>darwin.iso</code>可以适应全屏</p><h3 id="踩坑三"><a href="#踩坑三" class="headerlink" title="踩坑三"></a>踩坑三</h3><p>安装完成后发现没有网络，可以修改虚拟机的网络参数，设置为桥接模式或者NAT模式，一般默认的NAT模式不可用可以切换到桥接模式就可以了。</p><p><img src="https://img.jinjun.top/images/usr/uploads/2020/10/1603772524.png" alt="网络设置.png"></p><h3 id="踩坑四"><a href="#踩坑四" class="headerlink" title="踩坑四"></a>踩坑四</h3><p>部分旧版的镜像没有支持USB3.0。在安装页面鼠标键盘没有反应，可以尝试在虚拟机设置，在USB控制器设置兼容性为USB2.0</p><p><img src="https://img.jinjun.top/images/usr/uploads/2020/10/1603772536.png" alt="USb.png"></p><h4 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h4><p>虚拟机安装到Mac OS性能会大打折扣，和真机无法比玩玩就好了，不过虚拟机不用像黑苹果那样要处理大量驱动问题。练手还是不错的</p>]]></content>
      
      
      <categories>
          
          <category> 虚拟化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 虚拟机 </tag>
            
            <tag> VMware </tag>
            
            <tag> MAC </tag>
            
            <tag> 苹果系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>腾讯云加速CDN配置记录</title>
      <link href="/posts/1382231.html"/>
      <url>/posts/1382231.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->### CDN简介<p>CDN的全称是Content Delivery Network，即内容分发网络。CDN是构建在现有网络基础之上的智能虚拟网络，依靠部署在各地的边缘服务器，通过中心平台的负载均衡、内容分发、调度等功能模块，使用户就近获取所需内容，降低网络拥塞，提高用户访问响应速度和命中率。</p><p><img src="https://img.jinjun.top/images/usr/uploads/2020/10/1602167136.png" alt="cdn.png"></p><p>原先的阿里云的CDN加速包过期了，突然想到很久之前腾讯送的10G加速包，自己的站点的流量不是很大，干脆就再次上车腾讯车，继续白嫖。</p><h3 id="配置缓存设置"><a href="#配置缓存设置" class="headerlink" title="配置缓存设置"></a>配置缓存设置</h3><p>以下是我个人的参数，可以自行设置为自己</p><p><strong>过滤参数配置</strong> 这个可以打开</p><p>如果没有其他特殊要求，可以保持默认。</p><table><thead><tr><th align="center">类型</th><th align="center">缓存内容</th><th align="center">刷新时间</th></tr></thead><tbody><tr><td align="center">文件类型</td><td align="center">php;jsp;asp;aspx</td><td align="center">0秒</td></tr><tr><td align="center">文件类型</td><td align="center">jpg;png;jpeg;gif;wemp;bmp;ico;svg;pdf</td><td align="center">360天</td></tr><tr><td align="center">文件类型</td><td align="center">mp3;aac;wav;flac</td><td align="center">180天</td></tr><tr><td align="center">文件类型</td><td align="center">mp4;flv;avi;mkv;flv</td><td align="center">180天</td></tr><tr><td align="center">文件类型</td><td align="center">js;css;woff;woff2</td><td align="center">15天</td></tr><tr><td align="center">文件类型</td><td align="center">shtml;html;htm</td><td align="center">30分钟</td></tr><tr><td align="center">文件夹</td><td align="center">&#x2F;admin</td><td align="center">0秒</td></tr></tbody></table><h3 id="其他设置"><a href="#其他设置" class="headerlink" title="其他设置"></a>其他设置</h3><p>建议设置单IP访问限频，防止F5被刷。</p><p>防盗链建议开启 </p><p>设置<code>https</code>访问，开启<code>HTTP2.0</code>访问</p><p>设置带宽参数，为自己想要限制的，比如 <code>10Mbps</code> 超过返回404页面</p><p>还有很多配置，其他可以自由摸索了……</p>]]></content>
      
      
      <categories>
          
          <category> 建站知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CDN </tag>
            
            <tag> 腾讯云 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>给博客优化一下标题css</title>
      <link href="/posts/772e7878.html"/>
      <url>/posts/772e7878.html</url>
      
        <content type="html"><![CDATA[<!--markdown--># 标题1<h2 id="标题2"><a href="#标题2" class="headerlink" title="标题2"></a>标题2</h2><h3 id="标题3"><a href="#标题3" class="headerlink" title="标题3"></a>标题3</h3><h4 id="标题4"><a href="#标题4" class="headerlink" title="标题4"></a>标题4</h4><h5 id="标题5"><a href="#标题5" class="headerlink" title="标题5"></a>标题5</h5><p>如果喜欢，可以尝试修改替换一下我的css。<code>.article-content</code>自行替换成你的文章页的DIV</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">.article-content h1 &#123;</span><br><span class="line">margin: 20px 0;</span><br><span class="line">margin: 12px 0px;</span><br><span class="line">padding: 5px 12px;</span><br><span class="line">border-bottom: 0px solid red;</span><br><span class="line">border-left: 5px solid red;</span><br><span class="line">border-radius: 0rem;</span><br><span class="line">background-color: #f6f6f6;</span><br><span class="line">font-weight: bold;</span><br><span class="line">font-size: 23px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.article-content h2 &#123;</span><br><span class="line">margin: 20px 0;</span><br><span class="line">margin: 12px 0px;</span><br><span class="line">padding: 5px 12px;</span><br><span class="line">border-bottom: 0px solid #FF1493;</span><br><span class="line">border-left: 5px solid #FF1493;</span><br><span class="line">border-radius: 0rem;</span><br><span class="line">background-color: #f6f6f6;</span><br><span class="line">font-weight: bold;</span><br><span class="line">font-size: 21px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.article-content h3 &#123;</span><br><span class="line">margin: 20px 0;</span><br><span class="line">margin: 12px 0px;</span><br><span class="line">padding: 5px 12px;</span><br><span class="line">border-bottom: 0px solid #4169E1;</span><br><span class="line">border-left: 5px solid #4169E1;</span><br><span class="line">border-radius: 0rem;</span><br><span class="line">background-color: #f6f6f6;</span><br><span class="line">font-weight: bold;</span><br><span class="line">font-size: 18px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.article-content h4 &#123;</span><br><span class="line">margin: 20px 0;</span><br><span class="line">margin: 12px 0px;</span><br><span class="line">padding: 5px 12px;</span><br><span class="line">border-bottom: 0px solid #3CB371;</span><br><span class="line">border-left: 5px solid #3CB371;</span><br><span class="line">border-radius: 0rem;</span><br><span class="line">background-color: #f6f6f6;</span><br><span class="line">font-weight: bold;</span><br><span class="line">font-size: 16px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.article-content h5 &#123;</span><br><span class="line">margin: 20px 0;</span><br><span class="line">margin: 12px 0px;</span><br><span class="line">padding: 5px 12px;</span><br><span class="line">border-bottom: 0px solid #FFC0CB;</span><br><span class="line">border-left: 5px solid #FFC0CB;</span><br><span class="line">border-radius: 0rem;</span><br><span class="line">background-color: #f6f6f6;</span><br><span class="line">font-weight: bold;</span><br><span class="line">font-size: 15px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Typecho </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typecho </tag>
            
            <tag> CSS </tag>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unlock Music – 移除已购音乐的加密保护格式转换</title>
      <link href="/posts/44284714.html"/>
      <url>/posts/44284714.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->Unlock Music 是一个开源项目，能够移除已购音乐的加密保护，支持 QQ 音乐、网易云音乐，当你付费购买下载之后，即可解密本地加密音乐文件。<h2 id="Unlock-Music"><a href="#Unlock-Music" class="headerlink" title="Unlock Music"></a>Unlock Music</h2><p>Unlock Music 用来移除已购音乐的加密保护，支持 QQ音乐、网易云音乐，虾米音乐，酷狗等具体格式如下：</p><ul><li>QQ音乐 (.qmc0&#x2F;.qmc2&#x2F;.qmc3&#x2F;.qmcflac&#x2F;.qmcogg&#x2F;.tkm)</li><li>写入封面图片</li><li>Moo音乐格式 (.bkcmp3&#x2F;.bkcflac)</li><li>QQ音乐Tm格式 (.tm0&#x2F;.tm2&#x2F;.tm3&#x2F;.tm6)</li><li>QQ音乐新格式 (实验性支持)</li><li>.mflac .mgg</li><li>网易云音乐格式 (.ncm)</li><li>补全ncm的ID3&#x2F;FlacMeta信息</li><li>虾米音乐格式 (.xm) (测试阶段)</li><li>酷我音乐格式 (.kwm) (测试阶段)</li><li>酷狗音乐格式 (.kgm) (CLI版本)</li></ul><h2 id="寻找加密音乐"><a href="#寻找加密音乐" class="headerlink" title="寻找加密音乐"></a>寻找加密音乐</h2><h4 id="Android："><a href="#Android：" class="headerlink" title="Android："></a>Android：</h4><p>QQ 音乐下载的音乐文件默认位于：&#x2F;qqmusic&#x2F;song&#x2F;<br>网易云音乐下载的音乐文件默认位于：&#x2F;netease&#x2F;cloudmusic&#x2F;Music&#x2F;</p><h4 id="Windows："><a href="#Windows：" class="headerlink" title="Windows："></a>Windows：</h4><p>QQ音乐默认下载地址：<br>C:\Users\Administrator\Music<br>网易云默认下载地址：<br>C:\Users\用户名\AppData\Local\Netease\CloudMusic\Cache\Cache</p><h2 id="解密转换格式"><a href="#解密转换格式" class="headerlink" title="解密转换格式"></a>解密转换格式</h2><p>推荐使用 Google Chrome、Edge Chromium。使用老式的浏览器可能会出现不支持的现象。</p><p><img src="https://img.jinjun.top/images/usr/uploads/2020/10/1601685674.png" alt="music.png"></p><p>电脑直接拖拽加密文件就可以完成转换，手机要手动选择加密文件。不消耗流量，都是在本地浏览器完成转换。</p><p><a href="https://github.com/ix64/unlock-music">Unlock Music</a>是开源软件，大家可以去<a href="https://github.com/ix64/unlock-music">Github</a>去贡献代码或者自行在本地构建。</p>]]></content>
      
      
      <categories>
          
          <category> 资源分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 音乐 </tag>
            
            <tag> 格式转换 </tag>
            
            <tag> 加密保护 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>国庆、中秋双节快乐</title>
      <link href="/posts/7b18ec68.html"/>
      <url>/posts/7b18ec68.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->![国庆.jpg][1]<p>祝中国人民共和国成立71周年，中秋节快乐。从大年三十戴上口罩，到今天国旗飘扬欢度国庆，万家灯火团圆喜迎中秋佳节！祖国母亲生日快乐 ??? 祝家人身体健康，心想事成！?</p>]]></content>
      
      
      <categories>
          
          <category> 钧言钧语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 国庆 </tag>
            
            <tag> 中秋 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kangle和easypanel升级教程</title>
      <link href="/posts/5c9830a6.html"/>
      <url>/posts/5c9830a6.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->![kangle][1]<p>** Linux免费版kangle升级 **</p><p>安装升级前先备份 <code>/vhs/kangle/etc</code> 这个目录记录着你的配置文件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 备份当前配置</span><br><span class="line">tar -zcvf etc.tar.gz /vhs/kangle/etc</span><br><span class="line"></span><br><span class="line"># 删除etc文件夹</span><br><span class="line">rm -rf /vhs/kangle/etc</span><br><span class="line"></span><br><span class="line"># 恢复备份</span><br><span class="line">cd /vhs/kangle</span><br><span class="line">tar -zxvf etc.tar.gz</span><br></pre></td></tr></table></figure><p>liunx升级教程：<a href="https://www.kanglesoft.com/thread-6001-1-1.html">https://www.kanglesoft.com/thread-6001-1-1.html</a></p><p>** windows系统下升级 **</p><p>先卸载免费版kangle, 然后再安装新版的kangle（升级商业版kangle也是一样）到原位置就可以了。</p><p>** Linux免费版升级商业版 **</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://github.itzmx.com/1265578519/kangle/master/ent/e.sh -O e.sh;sh e.sh /vhs/kangle</span><br></pre></td></tr></table></figure><p>先安装免费版然后运行该命令升级到商业版。即可无损升级。要注意备份<code>/kangle/etc</code>文件</p><p><em><strong>注：如果免费版升级商业版后不能启动，检查kangle安装目录有没有授权文件</strong></em></p><p>** easypanel升级 **</p><p>windows和linux下升级是直接下载后复盖安装升级<br>安装升级前先备份 <code>/kangle/etc/</code> 目录</p><p>升级脚本来自：<a href="https://bbs.itzmx.com/forum.php?mod=viewthread&tid=11450">小樱论坛</a><br>升级部分内容：<a href="http://www.kanglesoft.com/">http://www.kanglesoft.com/</a></p>]]></content>
      
      
      <categories>
          
          <category> 建站知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> kangle </tag>
            
            <tag> easypanel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos 7安装kangle+Easypanel出现504错误</title>
      <link href="/posts/408e8471.html"/>
      <url>/posts/408e8471.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->最近在CentOS7上编译了kangle+Easypanel的时候，编译完成，打开3312可能会出现了504页面，这时候有点怀疑kangle问题，导致我重装系统N次，重新编译，问题依旧。<p><img src="https://img.jinjun.top/images/usr/uploads/2020/09/1600078477.png" alt="kangle.png"></p><p>这时候就怀疑是PHP问题，因为我在本地编译好的PHP迁移过去就会出现问题，在服务器编译PHP就没有问题。赶紧运行<code>php -v</code>查查，可能是遗漏了什么扩展没有安装。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/vhs/kangle/ext/tpl_php52/bin/php -v</span><br></pre></td></tr></table></figure><p><img src="https://img.jinjun.top/images/usr/uploads/2020/09/1600079162.png" alt="kangle.png"></p><p>沃特，怎么可能出现权限不足。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 777 /vhs/kangle/ext/tpl_php52/bin -R</span><br></pre></td></tr></table></figure><p>添加了权限，重启一下系统，再次运行<code>php -v</code>验证。</p><p>遇到php依赖往往处理是真麻烦，编译好了少这个那个so问题这个问题。还要处理，哎</p>]]></content>
      
      
      <categories>
          
          <category> 建站知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CentOS </tag>
            
            <tag> Linux </tag>
            
            <tag> kangle </tag>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>yum完美升级GCC版本 - 使用scl源</title>
      <link href="/posts/3ee21f7f.html"/>
      <url>/posts/3ee21f7f.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->在某些应用场景中，需要特定的gcc版本支持，但是轻易不要去编译gcc，编译gcc的坑实在太麻烦了,浪费时间,还会因为服务器的性能可能导致编译出错,使用scl源安装这样做的好处是随时切换版本，并且可以并存多个版本，不破坏原有gcc环境。<ul><li>安装scl源</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install centos-release-scl scl-utils-build</span><br></pre></td></tr></table></figure><ul><li>列出源,查询并安装</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum list all --enablerepo=&#x27;centos-sclo-rh&#x27; | grep &quot;devtoolset-&quot;</span><br></pre></td></tr></table></figure><ul><li>安装7.x版本的gcc、gcc-c++、gdb</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install devtoolset-7-gcc.x86_64 devtoolset-7-gcc-c++.x86_64 devtoolset-7-gcc-gdb-plugin.x86_64</span><br></pre></td></tr></table></figure><ul><li>切换版本</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scl enable devtoolset-7 bash</span><br></pre></td></tr></table></figure><ul><li>查看当前版本</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc --version</span><br></pre></td></tr></table></figure><ul><li>使用exit 退出当前scl版本的bash环境</li></ul><h2 id="scl常用命令"><a href="#scl常用命令" class="headerlink" title="scl常用命令"></a>scl常用命令</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">scl --list 或scl -l</span><br><span class="line">scl --help 或 scl -h</span><br><span class="line">scl enable &lt;scl-package-name&gt; &lt;command&gt;? #使用scl来执行command命令</span><br><span class="line">scl enable? devtoolset-4 bash? #使用scl创建一个scl包的bash会话环境</span><br><span class="line">exit? #退出当前scl bash环境，恢复成系统bash环境</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CentOS </tag>
            
            <tag> Linux </tag>
            
            <tag> GCC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS编译升级GCC高版本手记</title>
      <link href="/posts/e65f51af.html"/>
      <url>/posts/e65f51af.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->一般情况下centos7带的gcc环境,一般都是4.8.x，可以满足大部分的安装环境，如果遇到奇葩的MariaDB,这时候需要高点的Gcc版本来进行，这里把环境全部编译到最新版本。即是gmp-6.2.0、mpf-4.1.0、mpc-1.2.0、gcc10.2.0<p>安装依赖 gmp,mpfr和mpc,这三个依赖存在关联,前后顺序，缺一不可。</p><p>gmp：<a href="http://ftp.gnu.org/gnu/gmp/">http://ftp.gnu.org/gnu/gmp/</a><br>mpfr官网:<a href="http://www.mpfr.org/mpfr-current/">http://www.mpfr.org/mpfr-current/</a><br>mpc：<a href="http://ftp.gnu.org/gnu/mpc/">http://ftp.gnu.org/gnu/mpc/</a></p><h2 id="安装gmp"><a href="#安装gmp" class="headerlink" title="安装gmp"></a>安装gmp</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">wget http://ftp.gnu.org/gnu/gmp/gmp-6.2.0.tar.bz2</span><br><span class="line">tar -xjvf gmp-6.2.0.tar.bz2</span><br><span class="line">cd gmp-6.2.0</span><br><span class="line">mkdir gmp-build</span><br><span class="line">cd gmp-build</span><br><span class="line">../configure --prefix=/usr/local/gmp-6.2.0</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h2 id="安装mpfr"><a href="#安装mpfr" class="headerlink" title="安装mpfr"></a>安装mpfr</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">wget http://ftp.gnu.org/gnu/mpfr/mpfr-4.1.0.tar.gz</span><br><span class="line">tar -xzvf mpfr-4.1.0</span><br><span class="line">cd mpfr-4.1.0</span><br><span class="line">mkdir mpfr-build</span><br><span class="line">cd mpfr-build</span><br><span class="line">../configure --prefix=/usr/local/mpfr-4.1.0 --with-gmp=/usr/local/gmp-6.2.0</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><p>##安装mpc</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">wget http://ftp.gnu.org/gnu/mpc/mpc-1.2.0.tar.gz</span><br><span class="line">tar -xzvf mpc-1.2.0.tar.gz</span><br><span class="line">cd mpc-1.2.0</span><br><span class="line">mkdir mpc-build</span><br><span class="line">cd mpc-build</span><br><span class="line">../configure --prefix=/usr/local/mpc-1.2.0 --with-gmp=/usr/local/gmp-6.2.0 --with-mpfr=/usr/local/mpfr-4.1.0</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">## 编辑profile</span><br><span class="line">vim /etc/profile</span><br><span class="line">## 添加应用变量</span><br><span class="line">export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/mpc-1.2.0/lib:/usr/local/gmp-6.2.0/lib:/usr/local/mpfr-4.1.0/lib</span><br><span class="line">## 使配置生效</span><br><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><h2 id="安装GCC-10-2"><a href="#安装GCC-10-2" class="headerlink" title="安装GCC 10.2"></a>安装GCC 10.2</h2><p>编译Gcc时间超久,需要1个小时还多,所以要预留更多的时间出.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">wget http://pan.8dns.cn/liunx/gcc-10.2.0.tar.gz</span><br><span class="line">tar -zxvf gcc-10.2.0.tar.gz</span><br><span class="line">cd gcc-10.2.0</span><br><span class="line">mkdir gcc-build</span><br><span class="line">cd gcc-build</span><br><span class="line">../configure --prefix=/usr/local/gcc-10.2.0 --enable-threads=posix --disable-multilib --enable-languages=c,c++ --with-gmp=/usr/local/gmp-6.2.0 --with-mpfr=/usr/local/mpfr-4.1.0 --with-mpc=/usr/local/mpc-1.2.0</span><br><span class="line">make -j4 &amp;&amp; make install</span><br></pre></td></tr></table></figure><p>注意服务器配置低的情况下,不要使用多线程并发编译,可能对导致编译的应用被杀死,或者添加加大swap的内存.</p><h2 id="备份旧版本"><a href="#备份旧版本" class="headerlink" title="备份旧版本"></a>备份旧版本</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mv /usr/bin/gcc gcc_4.8.5back</span><br><span class="line">mv /usr/bin/g++ g++_4.8.5back</span><br></pre></td></tr></table></figure><h2 id="调用新版本"><a href="#调用新版本" class="headerlink" title="调用新版本"></a>调用新版本</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ln -s /usr/local/gcc-10.2.0/bin/gcc /usr/bin/gcc</span><br><span class="line">ln -s /usr/local/gcc-10.2.0/bin/g++ /usr/bin/g++</span><br></pre></td></tr></table></figure><h3 id="查看gcc版本"><a href="#查看gcc版本" class="headerlink" title="查看gcc版本"></a>查看gcc版本</h3><p><code>gcc -v</code> 或者 <code>gcc --version</code></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CentOS </tag>
            
            <tag> Linux </tag>
            
            <tag> GCC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>华为手机设置猫和老鼠主题　微信猫和老鼠、小黄人等气泡设置</title>
      <link href="/posts/901374bb.html"/>
      <url>/posts/901374bb.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->最近无聊瞎逛Ｂ站，发现最近很火的一个比较好玩的事物，华为手机可以设置微信聊天气泡视频，本着好奇的心情，拿出`MATE 20X`来尝鲜一下。<p>当前只支持华为、荣耀系列手机，其他手机要等大佬开发</p><p>微信界面的聊天、支付等效果，是自己可见好友不可见。有点像安装美化包的感觉。</p><p><img src="https://img.jinjun.top/images/usr/uploads/2020/08/1598882552.jpg" alt="微信图片_20200831220212.jpg"></p><p>更多的效果去关注大佬公众号下载，更换气泡教程也给出了。</p><p>作者气泡教程：<a href="https://mp.weixin.qq.com/s/JdGIHx9kk45J7ToAC6CCZg">https://mp.weixin.qq.com/s/JdGIHx9kk45J7ToAC6CCZg</a><br>更多气泡主题下载：关注作者微信公众号：yuexia-88 （月下美学）</p>]]></content>
      
      
      <categories>
          
          <category> 资源分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 华为 </tag>
            
            <tag> 微信 </tag>
            
            <tag> 气泡 </tag>
            
            <tag> 主题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github下载文件时raw.githubusercontent.com无法链接</title>
      <link href="/posts/330a1804.html"/>
      <url>/posts/330a1804.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->今天在Github想Download文件的时候，发现下载总是报错。疑似域名被污染，访问时好时坏，联通/电信网络访问还好，移动访问简直惨不忍睹。<p><img src="https://img.jinjun.top/images/usr/uploads/2020/08/1598633200.png" alt="Github.png"></p><p>万能的群友给出的大部分建议是挂梯，这个还是少玩比较好。有人给出了可能是DNS污染，然后在查找域名背后的真实IP。再通过hosts文件建立映射。显然挂梯这种行为……</p><p>通过<code>ipaddress.com</code>进行输入<code>raw.githubusercontent.com</code>查找IP，然后通过Ping来验证</p><p><img src="https://img.jinjun.top/images/usr/uploads/2020/08/1598634258.png" alt="Github.png"></p><p>找到域名背后的真实IP，通过修改Hosts文件来建立映射。</p><p>Window系统的hosts文件地址<code>C:\Windows\System32\drivers\etc\hosts</code>,这里使用记事本修改需要赋予管理员权限。</p><p>在hosts文件添加以下内容，保存即可恢复访问。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">199.232.68.133 raw.githubusercontent.com</span><br></pre></td></tr></table></figure><p>也可以试试以下这些IP，貌似在这些IP段都是可以访问的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Fastly节点加速地址</span><br><span class="line">151.101.76.133  #香港</span><br><span class="line">151.101.8.133  #新加坡</span><br><span class="line">151.101.228.133  #日本</span><br><span class="line">151.101.108.133  #日本</span><br></pre></td></tr></table></figure><p>通过<code>ping.pe</code>可以看到可能存在掉包现象，不行还是换个IP试试吧。</p><p><img src="https://img.jinjun.top/images/usr/uploads/2020/08/1598634999.png" alt="Github.png"></p><h2 id="Deepin-x2F-UOS-x2F-Linux修改hosts文件"><a href="#Deepin-x2F-UOS-x2F-Linux修改hosts文件" class="headerlink" title="Deepin&#x2F;UOS&#x2F;Linux修改hosts文件"></a>Deepin&#x2F;UOS&#x2F;Linux修改hosts文件</h2><p>输入密码，会调用系统默认的编辑器修改hosts也可以使用vim进行修改</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># UOS/deepin</span><br><span class="line">sudo gedit /etc/hosts</span><br><span class="line"></span><br><span class="line"># Linux 通用</span><br><span class="line">sudo vim /etc/hosts</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 资源分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Deepin </tag>
            
            <tag> UOS </tag>
            
            <tag> Linux </tag>
            
            <tag> CDN </tag>
            
            <tag> Github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux自建属于自己的KMS激活环境</title>
      <link href="/posts/1fd3f3f.html"/>
      <url>/posts/1fd3f3f.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->最近在使用一些激活Window使用的KMS软件，发现都带有一些捆绑主页这些东西，果然下载站的东西不靠谱。为什么不直接用VPS或者是虚拟机搭建一个KMS激活服务，于是找到了`vlmscd` 这个东西真心不错，如果是VPS搭建不推荐使用海外搭建，懂的都懂。这里推荐使用“火绒”安全软件，可以有效拦截不良病毒和插件。<p>运行环境：CentOS 7.6</p><p>项目地址：<a href="https://github.com/Wind4/vlmcsd">vlmcsd</a></p><p>KMS密匙：<a href="https://docs.microsoft.com/zh-cn/windows-server/get-started/kmsclientkeys">Microsoft</a></p><h2 id="搭建KMS服务"><a href="#搭建KMS服务" class="headerlink" title="搭建KMS服务"></a>搭建KMS服务</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 下载vlmcsd</span><br><span class="line">wget https://github.com/Wind4/vlmcsd/releases/download/svn1113/binaries.tar.gz</span><br><span class="line"># 解压包</span><br><span class="line">tar -xzvf binaries.tar.gz</span><br><span class="line"># 进入目录</span><br><span class="line">cd binaries/Linux/intel/static</span><br><span class="line"># 将vlmcsd的二进制文件拷贝到/usr/sbin</span><br><span class="line">cp vlmcsd-x64-musl-static /usr/sbin/vlmcsd</span><br></pre></td></tr></table></figure><h2 id="启动KMS和设置防火墙"><a href="#启动KMS和设置防火墙" class="headerlink" title="启动KMS和设置防火墙"></a>启动KMS和设置防火墙</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 启动vlmcsd</span><br><span class="line">./vlmcsd-x64-musl-static</span><br><span class="line"></span><br><span class="line"># 查看运行状态</span><br><span class="line">netstat -apn|grep &#x27;vlmcsd&#x27;</span><br><span class="line"></span><br><span class="line"># 开启端口访问</span><br><span class="line">firewall-cmd --zone=public --add-port=1688/tcp --permanent</span><br><span class="line">firewall-cmd reload</span><br></pre></td></tr></table></figure><h2 id="激活window"><a href="#激活window" class="headerlink" title="激活window"></a>激活window</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">slmgr.vbs -upk</span><br><span class="line">slmgr.vbs -ipk NRG8B-VKK3Q-CXVCJ-9G2XF-6Q84J</span><br><span class="line">slmgr.vbs -skms 172.0.0.1</span><br><span class="line">slmgr.vbs -ato</span><br><span class="line">slmgr.vbs -dlv</span><br><span class="line"> </span><br><span class="line"># 卸载当前密匙</span><br><span class="line">slmgr.vbs -upk</span><br><span class="line"># 激活常用查询信息命令</span><br><span class="line">slmgr.vbs</span><br><span class="line"># 激活信息，含激活ID、安装ID、激活截止日期</span><br><span class="line">slmgr.vbs -dlv</span><br><span class="line"># 操作系统的版本、一部分产品密钥、激活类型以及许可证状态</span><br><span class="line">slmgr.vbs -dli</span><br><span class="line"># 操作系统是否为永久激活</span><br><span class="line">slmgr.vbs -xpr</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Windows </tag>
            
            <tag> KMS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS7/8编译安装kangle和easypanel</title>
      <link href="/posts/1135095d.html"/>
      <url>/posts/1135095d.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->## knagle简介<p><img src="https://img.jinjun.top/images/usr/uploads/2020/08/1597993194.png" alt="kangle.png"></p><p>kangle是一款免费、开源、国产的web服务器软件，可以跨平台使用，性能高、访问控制功能灵活强大。相对于宝塔、AMH等等一些面板软件，kangle具有无法比拟的优势。但是官方的推荐环境还停留在centOS6的时代，但是centos 6的维护周期马上到期，今天把宝塔环境换成了kangle，原因是服务器配置太低了，并发一高就宕机。下面来说一下CentOS7&#x2F;8环境怎么安装kangle和easypanel。</p><h2 id="安装kangle"><a href="#安装kangle" class="headerlink" title="安装kangle"></a>安装kangle</h2><h3 id="安装编译依赖包"><a href="#安装编译依赖包" class="headerlink" title="安装编译依赖包"></a>安装编译依赖包</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install wget tar make automake gcc gcc-c++ pcre pcre-devel zlib-devel sqlite-devel openssl-devel libxml2 libxml2-devel libtool libtool-libs quota perl gd</span><br></pre></td></tr></table></figure><h3 id="下载kangle编译源码包"><a href="#下载kangle编译源码包" class="headerlink" title="下载kangle编译源码包"></a>下载kangle编译源码包</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://download.kangleweb.com/devel.php?os=src</span><br></pre></td></tr></table></figure><h3 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar xzf kangle-3.5.21.tar.gz</span><br></pre></td></tr></table></figure><h3 id="进入kangle目录"><a href="#进入kangle目录" class="headerlink" title="进入kangle目录"></a>进入kangle目录</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd kangle-3.5.21</span><br></pre></td></tr></table></figure><h3 id="配置编译参数"><a href="#配置编译参数" class="headerlink" title="配置编译参数"></a>配置编译参数</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./configure --prefix=/vhs/kangle --enable-disk-cache --enable-ipv6 --enable-ssl --enable-vh-limit --enable-http2</span><br></pre></td></tr></table></figure><h3 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make &amp;&amp; make check &amp;&amp; make install</span><br></pre></td></tr></table></figure><h3 id="启动kangle"><a href="#启动kangle" class="headerlink" title="启动kangle"></a>启动kangle</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/vhs/kangle/bin/kangle</span><br></pre></td></tr></table></figure><h3 id="设置kangle开机启动"><a href="#设置kangle开机启动" class="headerlink" title="设置kangle开机启动"></a>设置kangle开机启动</h3><p>进入<code>cd /usr/lib/systemd/system</code>目录新建<code>kangle.service</code>内容如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Kangle Web Service</span><br><span class="line">After=syslog.target network.target</span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">ExecStart=/vhs/kangle/bin/kangle</span><br><span class="line">ExecStop=/vhs/kangle/bin/kangle -q</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><h3 id="创建kangle软链接"><a href="#创建kangle软链接" class="headerlink" title="创建kangle软链接"></a>创建kangle软链接</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s &#x27;/usr/lib/systemd/system/kangle.service&#x27; &#x27;/etc/systemd/system/multi-user.target.wants/kangle.service&#x27;</span><br></pre></td></tr></table></figure><h3 id="启动kangle-1"><a href="#启动kangle-1" class="headerlink" title="启动kangle"></a>启动kangle</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 启动kangle</span><br><span class="line">systemctl start kangle.service</span><br><span class="line"></span><br><span class="line"># 关闭kangle</span><br><span class="line">systemctl stop kangle.service</span><br><span class="line"></span><br><span class="line"># kangle设置为开机自动启动</span><br><span class="line">systemctl enable kangle.service</span><br></pre></td></tr></table></figure><h2 id="安装Mariadb数据库"><a href="#安装Mariadb数据库" class="headerlink" title="安装Mariadb数据库"></a>安装Mariadb数据库</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 安装mariadb</span><br><span class="line">yum install mariadb-server mariadb</span><br><span class="line"></span><br><span class="line"># 启动mariadb服务</span><br><span class="line">systemctl start mariadb.service</span><br><span class="line"></span><br><span class="line">#设置mariadb开机自动运行</span><br><span class="line">systemctl enable mariadb.service</span><br></pre></td></tr></table></figure><h4 id="设置ROOT密码"><a href="#设置ROOT密码" class="headerlink" title="设置ROOT密码"></a>设置ROOT密码</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/mysql_secure_installation</span><br></pre></td></tr></table></figure><p>然后根据提示操作即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">NOTE: RUNNING ALL PARTS OF THIS SCRIPT IS RECOMMENDED FOR ALL MariaDB</span><br><span class="line">      SERVERS IN PRODUCTION USE!  PLEASE READ EACH STEP CAREFULLY!</span><br><span class="line">In order to log into MariaDB to secure it, we&#x27;ll need the current</span><br><span class="line">password for the root user.  If you&#x27;ve just installed MariaDB, and</span><br><span class="line">you haven&#x27;t set the root password yet, the password will be blank,</span><br><span class="line">so you should just press enter here.</span><br><span class="line">Enter current password for root (enter for none): 安装后默认没有root密码，直接回车</span><br><span class="line">OK, successfully used password, moving on...</span><br><span class="line">Setting the root password ensures that nobody can log into the MariaDB</span><br><span class="line">root user without the proper authorisation.</span><br><span class="line">Set root password? [Y/n] Y</span><br><span class="line">New password: 输入root的新密码</span><br><span class="line">Re-enter new password: 新密码确认</span><br><span class="line">Password updated successfully!</span><br><span class="line">Reloading privilege tables..</span><br><span class="line"> ... Success!</span><br><span class="line">By default, a MariaDB installation has an anonymous user, allowing anyone</span><br><span class="line">to log into MariaDB without having to have a user account created for</span><br><span class="line">them.  This is intended only for testing, and to make the installation</span><br><span class="line">go a bit smoother.  You should remove them before moving into a</span><br><span class="line">production environment.</span><br><span class="line">Remove anonymous users? [Y/n] 删除匿名用户 Y</span><br><span class="line"> ... Success!</span><br><span class="line">Normally, root should only be allowed to connect from &#x27;localhost&#x27;.  This</span><br><span class="line">ensures that someone cannot guess at the root password from the network.</span><br><span class="line">Disallow root login remotely? [Y/n] 关闭root远程登录 Y</span><br><span class="line"> ... Success!</span><br><span class="line">By default, MariaDB comes with a database named &#x27;test&#x27; that anyone can</span><br><span class="line">access.  This is also intended only for testing, and should be removed</span><br><span class="line">before moving into a production environment.</span><br><span class="line">Remove test database and access to it? [Y/n] 删除test数据库 Y</span><br><span class="line"> - Dropping test database...</span><br><span class="line"> ... Success!</span><br><span class="line"> - Removing privileges on test database...</span><br><span class="line"> ... Success!</span><br><span class="line">Reloading the privilege tables will ensure that all changes made so far</span><br><span class="line">will take effect immediately.</span><br><span class="line">Reload privilege tables now? [Y/n] 确定以上所有操作 Y</span><br><span class="line"> ... Success!</span><br><span class="line">Cleaning up...</span><br><span class="line">All done!  If you&#x27;ve completed all of the above steps, your MariaDB</span><br><span class="line">installation should now be secure.</span><br><span class="line">Thanks for using MariaDB!</span><br></pre></td></tr></table></figure><h4 id="设置软链接。Mariadb完全兼容Mysql，命令基本都一样。"><a href="#设置软链接。Mariadb完全兼容Mysql，命令基本都一样。" class="headerlink" title="设置软链接。Mariadb完全兼容Mysql，命令基本都一样。"></a>设置软链接。Mariadb完全兼容Mysql，命令基本都一样。</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ln -s /usr/bin/mysql /vhs/kangle/bin/mysql</span><br><span class="line">ln -s /usr/bin/mysqldump /vhs/kangle/bin/mysqldump</span><br></pre></td></tr></table></figure><h2 id="安装PHP"><a href="#安装PHP" class="headerlink" title="安装PHP"></a>安装PHP</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install php php-cli php-mysql php-gd php-xml php-pdo php-mbsring</span><br></pre></td></tr></table></figure><h3 id="安装ioncube"><a href="#安装ioncube" class="headerlink" title="安装ioncube"></a>安装ioncube</h3><p>ioncube官网下载：<a href="https://www.ioncube.com/loaders.php">下载链接</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 下载ioncube</span><br><span class="line">cd /usr/local</span><br><span class="line">wget http://downloads3.ioncube.com/loader_downloads/ioncube_loaders_lin_x86-64.tar.gz</span><br><span class="line">tar zxvf ioncube_loaders_lin_x86-64.tar.gz</span><br><span class="line">cp /usr/local/ioncube_loaders_lin_x86-64/ioncube_loader_lin_5.4.so /usr/lib64/php/modules</span><br><span class="line"></span><br><span class="line"># 在/etc/php.d目录下新建ioncube.ini文件。内容如下</span><br><span class="line">zend_extension=/usr/lib64/php/modules/ioncube_loader_lin_5.4.so</span><br></pre></td></tr></table></figure><h2 id="安装pureftpd"><a href="#安装pureftpd" class="headerlink" title="安装pureftpd"></a>安装pureftpd</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 下载pureftpd</span><br><span class="line">wget http://download.pureftpd.org/pub/pure-ftpd/releases/pure-ftpd-1.0.49.tar.gz</span><br><span class="line"># 解压</span><br><span class="line">tar xzf pure-ftpd-1.0.49.tar.gz</span><br><span class="line"># 进入目录</span><br><span class="line">cd pure-ftpd-1.0.49</span><br><span class="line"># 配置编译参数</span><br><span class="line">./configure --prefix=/vhs/pure-ftpd with --with-extauth --with-throttling --with-peruserlimits</span><br><span class="line"># 编译安装</span><br><span class="line">make &amp;&amp; make check &amp;&amp; make install</span><br></pre></td></tr></table></figure><h3 id="设置pureftpd启动服务"><a href="#设置pureftpd启动服务" class="headerlink" title="设置pureftpd启动服务"></a>设置pureftpd启动服务</h3><p>在<code>/vhs/pure-ftpd/sbin</code>下新建<code>pureftpd.sh</code>,内容如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/bash</span><br><span class="line">/vhs/pure-ftpd/sbin/pure-authd --daemonize -s /var/run/ftpd.sock -r /vhs/kangle/bin/pureftp_auth</span><br><span class="line">sleep 1</span><br><span class="line">/vhs/pure-ftpd/sbin/pure-ftpd --daemonize -lextauth:/var/run/ftpd.sock</span><br></pre></td></tr></table></figure><p>在<code>/usr/lib/systemd/system/</code>下新建<code>pureftpd.service</code>,内容如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Pure-FTPd FTP Server</span><br><span class="line">After=syslog.target</span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">ExecStart=/usr/bin/sh /vhs/pure-ftpd/sbin/pureftpd.sh</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><h4 id="创建软链接"><a href="#创建软链接" class="headerlink" title="创建软链接"></a>创建软链接</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s &#x27;/usr/lib/systemd/system/pureftpd.service&#x27; &#x27;/etc/systemd/system/multi-user.target.wants/pureftpd.service&#x27;</span><br></pre></td></tr></table></figure><h3 id="pureftpd命令"><a href="#pureftpd命令" class="headerlink" title="pureftpd命令"></a>pureftpd命令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">启动pureftpd</span><br><span class="line">systemctl start pureftpd.service</span><br><span class="line">关闭pureftpd</span><br><span class="line">systemctl stop pureftpd.service）</span><br></pre></td></tr></table></figure><h2 id="安装easypanel"><a href="#安装easypanel" class="headerlink" title="安装easypanel"></a>安装easypanel</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 下载easypenel</span><br><span class="line">wget http://download.kangleweb.com/easypanel/easypanel-2.6.26-x86_64-6.tar.gz</span><br><span class="line"># 解压</span><br><span class="line">tar xzf easypanel-2.6.26-x86_64-6.tar.gz</span><br><span class="line"># 关闭kangle服务</span><br><span class="line">/vhs/kangle/bin/kangle -q</span><br><span class="line"># 复制文件</span><br><span class="line">cp -a easypanel-2.6.26-x86_64/* /vhs/kangle/</span><br></pre></td></tr></table></figure><h2 id="装完后开始设置php"><a href="#装完后开始设置php" class="headerlink" title="装完后开始设置php"></a>装完后开始设置php</h2><p>不用ep自带的php52，打开<code>/vhs/kangle/ext/tpl_php52/config.xml</code>找到<code>&lt;cmd name=&quot;nodephp&quot; </code>行，修改为:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;cmd name=&#x27;nodephp&#x27; file=&#x27;/usr/bin/php-cgi&#x27; listen=&#x27;local&#x27; lock=&#x27;0&#x27; type=&#x27;mp&#x27; proto=&#x27;fastcgi&#x27;&gt;</span><br><span class="line">  &lt;env PHP_FCGI_MAX_REQUESTS=&#x27;0&#x27; PHPRC=&#x27;/etc/php.ini&#x27;/&gt;</span><br><span class="line">  &lt;/cmd&gt;</span><br></pre></td></tr></table></figure><h2 id="防火墙放行"><a href="#防火墙放行" class="headerlink" title="防火墙放行"></a>防火墙放行</h2><p>如果是本地防火墙放行了，不能访问建议你去看一下你的服务提供商的防火墙是否放行。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">systemctl start firewalld</span><br><span class="line">firewall-cmd --add-port=22/tcp --permanent</span><br><span class="line">firewall-cmd --add-service=ftp --permanent</span><br><span class="line">firewall-cmd --add-port=80/tcp --permanent</span><br><span class="line">firewall-cmd --add-port=443/tcp --permanent</span><br><span class="line">firewall-cmd --add-port=3311/tcp --permanent</span><br><span class="line">firewall-cmd --add-port=3312/tcp --permanent</span><br><span class="line">firewall-cmd --add-port=3313/tcp --permanent</span><br><span class="line">firewall-cmd --reload</span><br><span class="line">systemctl restart firewalld</span><br><span class="line">systemctl enable firewalld</span><br></pre></td></tr></table></figure><h2 id="启动kangle和pureftpd"><a href="#启动kangle和pureftpd" class="headerlink" title="启动kangle和pureftpd"></a>启动kangle和pureftpd</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start kangle.service</span><br><span class="line">systemctl start pureftpd.service</span><br></pre></td></tr></table></figure><h2 id="关于BUG"><a href="#关于BUG" class="headerlink" title="关于BUG"></a>关于BUG</h2><p>使用yum安装的php5.4，会导致在线文件管理打开一片空白，其他页面正常，还在测试解决当中。</p>]]></content>
      
      
      <categories>
          
          <category> 建站知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> mysql </tag>
            
            <tag> kangle </tag>
            
            <tag> easypanel </tag>
            
            <tag> Mariadb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用万用表检测汽车是否存在漏电</title>
      <link href="/posts/5f0518cf.html"/>
      <url>/posts/5f0518cf.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->不知不觉干汽修工作也两年多了，当初那种懵懂的少年也变成油腻大叔，不禁感叹时间真快。想了想还是要记录下这些年工作的学习笔记，这样才能不懂也可以回来瞧瞧。?好记性不如烂笔头呀。<p>修车经常遇到一些客户反应汽车停放几天就没有电，车子启动不了。要使用机械钥匙开门，然后请外出救援来搭电，所以很多车主都喜欢带个过江龙，方便搭电。</p><h2 id="关于汽车暗电流"><a href="#关于汽车暗电流" class="headerlink" title="关于汽车暗电流"></a>关于汽车暗电流</h2><p>因为汽车有一些电器设备为了保持数据的记忆功能，必须长期供电，这里大概指的是汽车的防盗模块、ECU控制单元、空调、音响等等，但一般的汽车的暗电流一般不会超过30mA，但是随着现代汽车的发展，把大量的汽车电控密集的集成，导致汽车的用电的设备增多，暗电流也同时增大。</p><h2 id="检测方法"><a href="#检测方法" class="headerlink" title="检测方法"></a>检测方法</h2><ol><li><p>拆下电池负极<br> <img src="https://img.jinjun.top/images/usr/uploads/2020/07/1594778876.jpg" alt="检测汽车是否漏电.jpg"></p></li><li><p>万用表红色表笔插入10A的电流插孔，万用表打到直流10A的挡位。<br> <img src="https://img.jinjun.top/images/usr/uploads/2020/07/1594780499.jpg" alt="检测汽车是否漏电.jpg"></p></li><li><p>万用表接到电瓶的桩头，另外一头接到汽车的负极线，使用尼龙绳固定表笔。</p></li><li><p>关闭汽车的用电设备，关上门窗，用遥控器锁好车门，机械钥匙也可以。</p></li><li><p>这时候，万用表显示就是汽车的暗电流。</p></li><li><p>如果万用表显示值大，可以通过拔可疑的继电器和保险丝。如果是车内保险漏电，可以打开车门，记下当前数值，然后拔车内的保险，如果发现数值变大。可以拆下模块进行检查。</p></li></ol><h3 id="漏电多少算正常"><a href="#漏电多少算正常" class="headerlink" title="漏电多少算正常"></a>漏电多少算正常</h3><p>我的测试结果是0.02A，按汽车正常的模块工作，一般汽车暗电流在30-50mA以下。这个车的漏电量是属于正常。</p><p>按照公式来计算</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">1000mA=1A</span><br><span class="line"></span><br><span class="line">0.02A=20mA,这是一个正常的数值。</span><br><span class="line"></span><br><span class="line">一般电瓶65安时(AH)，以每个小时放0.02A的电，可以放3250小时。</span><br><span class="line"></span><br><span class="line">总容量/漏电量=漏电小时</span><br><span class="line">漏电小时/24(24H)=天数</span><br><span class="line"></span><br><span class="line">65/0.02mA=3250h</span><br><span class="line">3250/24(H)=135.416667天</span><br></pre></td></tr></table></figure><p>不一定所有的故障都是漏电引起的，可能是发电机发电量过低甚至是不发电，导致电池出现严重的馈电，或者是电池的充电线路存在问题，或者线束或者是搭铁不牢固，导致汽车电瓶不能完全充电，导致用电高峰的时候，蓄电池处于亏点状态，日积月累，也会出现类似的漏电的现象。</p>]]></content>
      
      
      <categories>
          
          <category> 工作笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 汽车 </tag>
            
            <tag> 暗电流 </tag>
            
            <tag> 汽车漏电 </tag>
            
            <tag> 电路检测 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nethogs查找程序占用网卡流量和其进程目录</title>
      <link href="/posts/1b4725b6.html"/>
      <url>/posts/1b4725b6.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->今天晚上突发了一件事，回到家发现家里网络很卡，通过路由器检测家里的NAS一直在上传数据。于是便进入WEB管理页面查看。可能是进行端口映射的时候忘记加上验证了，导致Nas被破解，后台也发现大量的日志。<p><img src="https://img.jinjun.top/images/usr/uploads/2020/07/1594313856.png" alt="我家云.png"></p><p>其实也没有想这么多，top后直接kail掉了进程。重启主机，并没有发现大流量出现，这里和你们分享一下排除的过程。</p><p>这里使用的工具是<a href="https://github.com/raboof/nethogs">nethogs</a>，来自GitHub的开源软件，在Linux可以不依赖内核可以快速检测某个程序占用的大量带宽和进程，为排除节省时间。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Debian/Ubuntu</span><br><span class="line">apt-get install nethogs</span><br><span class="line"></span><br><span class="line">CentOS/RHEL</span><br><span class="line">yum install libpcap nethogs</span><br></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>直接运行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nethogs</span><br></pre></td></tr></table></figure><p><img src="https://img.jinjun.top/images/usr/uploads/2020/07/1594315239.png" alt="nethogs.png"></p><p>就可以找出你的大流量数据，这里显示你的网卡信息和流量的进程和端口</p><p>如果要检测特定的网卡数据，例如eth0</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nethogs eth0</span><br></pre></td></tr></table></figure><p><img src="https://img.jinjun.top/images/usr/uploads/2020/07/1594315384.png" alt="nethogs.png"></p><p>如上面的流量信息显示，<code>PID 2076</code>进程的<code>120.227.161.239</code>的ip访问我的<code>38266</code>端口，左边的ip显示的是你的本地端口，右边是客户端的IP。<code>DEV</code>列显示网卡设备名，<code>SEND</code>是服务器发送的流量，<code>RECEIVED</code>服务器接收的流量。</p><h2 id="查找进程"><a href="#查找进程" class="headerlink" title="查找进程"></a>查找进程</h2><p>这里可以使用lsof和ps命令来查找相对的程序</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">lsof -i:端口</span><br><span class="line"></span><br><span class="line">ps aux|grep PID</span><br></pre></td></tr></table></figure><p><img src="https://img.jinjun.top/images/usr/uploads/2020/07/1594316530.png" alt="我家云.png"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> NAS </tag>
            
            <tag> nethogs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用CSS打造渐变背景动画</title>
      <link href="/posts/b3dac015.html"/>
      <url>/posts/b3dac015.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->最近看见很多网站都使用上了渐变动画，我也来分享一个，纯css3实现一款简单的网页渐变背景动画特效，可以在css属性里修改成你喜欢的渐变颜色值和动画时间。<p><img src="https://img.jinjun.top/images/usr/uploads/2020/06/1593272902.png" alt="渐变效果.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">/* 动态渐变特效*/</span><br><span class="line">body &#123;</span><br><span class="line">background: linear-gradient(-45deg, #EE7752, #E73C7E, #23A6D5, #23D5AB);</span><br><span class="line">background-size: 400% 400%;</span><br><span class="line">animation: Gradient 15s ease infinite;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@-webkit-keyframes Gradient &#123;</span><br><span class="line">0% &#123;background-position: 0 50%;&#125;</span><br><span class="line">50% &#123;background-position: 100% 50%;&#125;</span><br><span class="line">100% &#123;background-position: 0 50%;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@-moz-keyframes Gradient &#123;</span><br><span class="line">0% &#123;background-position: 0 50%;&#125;</span><br><span class="line">50% &#123;background-position: 100% 50%;&#125;</span><br><span class="line">100% &#123;background-position: 0 50%;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@keyframes Gradient &#123;</span><br><span class="line">0% &#123; background-position: 0% 50%; &#125;</span><br><span class="line">50% &#123; background-position: 100% 50%; &#125;</span><br><span class="line">100% &#123; background-position: 0% 50%; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 资源分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Aria2 BT磁力下载无速度或者速度慢解决方法</title>
      <link href="/posts/1fefd9a5.html"/>
      <url>/posts/1fefd9a5.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->由于博主在我家云使用Aria2下载BT种子的时候，有时候速度一直上不去或者直接一动不动。使用迅雷等这些软件有速度，使用aria2下载速度慢，其实BT对Tracker和DHT很依赖，可以添加`Bt Tracker`服务器，来更快追踪下载文件的这些用户，达到更快的想下载速度。<p><code>BT Tracker</code>服务器地址获取：<a href="https://github.com/ngosang/trackerslist">Github</a>。进入<code>BT tacker</code>服务器<code>Github</code>来获取最新地址。</p><p>修改<code>Aria2</code>配置文件<code>aria2.conf</code>或者使用<code>AriaNg</code>WEB UI来进行修改</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bt-tracker=BT服务器地址</span><br><span class="line">#例如</span><br><span class="line">bt-tracker=udp://tracker.moeking.me:6969/announce,http://tracker1.itzmx.com:8080/announce</span><br></pre></td></tr></table></figure><p>添加后下载速度会快很多。经过测试，不是很冷门的种子资源，速度都不会很差。</p>]]></content>
      
      
      <categories>
          
          <category> 资源分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Aria2 </tag>
            
            <tag> BT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux系统信息个人常用命令</title>
      <link href="/posts/e8af6330.html"/>
      <url>/posts/e8af6330.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->###系统<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">uname -a               #查看内核/操作系统/CPU信息</span><br><span class="line">head -n 1 /etc/issue   #查看操作系统版本</span><br><span class="line">cat /proc/cpuinfo      #查看CPU信息</span><br><span class="line">hostname               #查看计算机名</span><br><span class="line">lspci -tv              #列出所有PCI设备</span><br><span class="line">lsusb -tv              #列出所有USB设备</span><br><span class="line">lsmod                  #列出加载的内核模块</span><br><span class="line">env                    #查看环境变量</span><br></pre></td></tr></table></figure><h3 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">free -m                # 查看内存使用量和交换区使用量</span><br><span class="line">df -h                  # 查看各分区使用情况</span><br><span class="line">cd &lt;目录名&gt;            #进入目录</span><br><span class="line">du -sh &lt;目录名&gt;        # 查看指定目录的大小</span><br><span class="line">grep MemTotal /proc/meminfo    #查看内存总量</span><br><span class="line">grep MemFree /proc/meminfo     #查看空闲内存量</span><br><span class="line">uptime                 #查看系统运行时间、用户数、负载</span><br><span class="line">cat /proc/loadavg      #查看系统负载</span><br></pre></td></tr></table></figure><h3 id="磁盘和分区"><a href="#磁盘和分区" class="headerlink" title="磁盘和分区"></a>磁盘和分区</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mount | column -t      #查看挂接的分区状态</span><br><span class="line">fdisk -l               #查看所有分区</span><br><span class="line">swapon -s              #查看所有交换分区</span><br><span class="line">hdparm -i /dev/hda     #查看磁盘参数(仅适用于IDE设备)</span><br><span class="line">dmesg | grep IDE       #查看启动时IDE设备检测状况</span><br></pre></td></tr></table></figure><h3 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ifconfig               #查看所有网络接口的属性</span><br><span class="line">iptables -L            #查看防火墙设置</span><br><span class="line">route -n               #路由表</span><br><span class="line">netstat -lntp          #查看所有监听端口</span><br><span class="line">netstat -antp          #查看所有已经建立的连接</span><br><span class="line">netstat -s             #查看网络统计信息</span><br></pre></td></tr></table></figure><p>###进程</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ps -ef                #查看所有进程</span><br><span class="line">top                   #实时显示进程状态</span><br></pre></td></tr></table></figure><p>###用户</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">w                     #查看活动用户</span><br><span class="line">id &lt;用户名&gt;           #查看指定用户信息</span><br><span class="line">last                  #查看用户登录日志</span><br><span class="line">cut -d: -f1 /etc/passwd  #查看系统所有用户</span><br><span class="line">cut -d: -f1 /etc/group   #查看系统所有组</span><br><span class="line">crontab -l           #查看当前用户的计划任务</span><br><span class="line">sudo/su              #获取管理员权限</span><br></pre></td></tr></table></figure><h3 id="服务"><a href="#服务" class="headerlink" title="服务"></a>服务</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chkconfig --list     #列出所有系统服务</span><br><span class="line">chkconfig --list | grep on   #列出所有启动的系统服务</span><br></pre></td></tr></table></figure><h3 id="程序"><a href="#程序" class="headerlink" title="程序"></a>程序</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh &lt;文件名&gt;   #安装rpm包</span><br><span class="line">rpm -qa         #查看所有安装的软件包</span><br><span class="line">rpm -Uvh        #升级rpm包</span><br><span class="line">rpm -e          #卸载rpm包</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 个人笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux(Deepin、UOS)升级最新内核版本</title>
      <link href="/posts/5344a8c8.html"/>
      <url>/posts/5344a8c8.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->最近安装了UOS个人版，虽然官方内核5.3但是貌似内核有点问题，我炫龙毁灭者DC还是不能关机和重启。貌似是双显卡的窝。还是升级了内核和解决了个人安装UOS遇到问题。下面简单说一下ddepin、uos升级内核的方法。<p>这里UOS要开启开发者模式，不然无法获取root权限。deepin没有这个选项，可以直接通过su、sudo来获取权限。</p><h2 id="查询当前内核"><a href="#查询当前内核" class="headerlink" title="查询当前内核"></a>查询当前内核</h2><p>可以通过以下命令来确认当前内核版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo uname -r</span><br><span class="line">sudo uname -a</span><br><span class="line">cat /etc/issue</span><br></pre></td></tr></table></figure><h2 id="替换-x2F-更新Linux内核"><a href="#替换-x2F-更新Linux内核" class="headerlink" title="替换&#x2F;更新Linux内核"></a>替换&#x2F;更新Linux内核</h2><p>deepin&#x2F;UOS(其实这两个是一家的)和Ubuntu都是基于Debian的发行版本，这里使用Ubuntu构建的内核。下载<code>deb</code>封装内核包都可以完美兼容deepin、UOS。</p><p>选择最近发布的稳定版本，下载地址：<a href="https://kernel.ubuntu.com/~kernel-ppa/mainline/">https://kernel.ubuntu.com/~kernel-ppa/mainline/</a><br>Linux内核版本：<a href="https://www.kernel.org/">https://www.kernel.org/</a></p><p>这里我使用的是64位版本，使用选择amd64，其他处理器架构请自己选择<br><img src="https://img.jinjun.top/images/usr/uploads/2020/05/1589984344.png" alt="amd64.png"></p><p>简单了解包的名称</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">linux-headers-xxx_all.deb（内核头文件包1）、</span><br><span class="line">linux-headers-xxx-generic_xxx_amd64.deb（内核头文件包2）</span><br><span class="line">linux-modules-xxx-generic_xxx_amd64.deb（内核驱动包）、</span><br><span class="line">linux-image-unsigned-xxx-generic_xxx_amd64.deb（内核镜像包）、</span><br></pre></td></tr></table></figure><p>下载完成后，可以在用户下载目录找到该文件，这里我使用的是UOS自带的浏览器</p><p>用户下载目录路径：<code>/home/用户名/Downloads</code> 或者在文件浏览器中使用<code>在终端打开</code> ，存放在其他的目录请自行指定目录。</p><p>执行以下命令安装内核包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /home/jun/Downloads ##如果在在使用终端打开，请忽略</span><br><span class="line">sudo dpkg -i *.deb</span><br></pre></td></tr></table></figure><p>安装完成重启系统，运行查询内核的命令来检测内核是否安装成功。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Deepin </tag>
            
            <tag> UOS </tag>
            
            <tag> Linux </tag>
            
            <tag> 内核 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux(deepin/UOS)关机重启命令</title>
      <link href="/posts/504ba52.html"/>
      <url>/posts/504ba52.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->Linux常用的命令`reboot`、`halt`等等，当你深入了解服务器或者桌面环境的时候，需要什么操作那就需要完全理解。<h3 id="shutdown-命令"><a href="#shutdown-命令" class="headerlink" title="shutdown 命令"></a>shutdown 命令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">shutdown </span><br><span class="line">shutdown now </span><br><span class="line">shutdown 13:20   </span><br><span class="line">shutdown -p now  ### 关闭机器 </span><br><span class="line">shutdown -H now  ### 停止机器       </span><br><span class="line">shutdown -r09:35 ### 在 09:35am 重启机器 </span><br><span class="line">shutdown -c  ### 取消准备执行的关机命令</span><br></pre></td></tr></table></figure><h3 id="halt-命令"><a href="#halt-命令" class="headerlink" title="halt 命令"></a>halt 命令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">halt             ### 停止机器 </span><br><span class="line">halt -p          ### 关闭机器 </span><br><span class="line">halt --reboot    ### 重启机器</span><br></pre></td></tr></table></figure><p>###poweroff 命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">poweroff           ### 关闭机器 </span><br><span class="line">poweroff --halt    ### 停止机器 </span><br><span class="line">poweroff --reboot  ### 重启机器 </span><br></pre></td></tr></table></figure><p>###reboot 命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">reboot           ### 重启机器 </span><br><span class="line">reboot --halt    ### 停止机器 </span><br><span class="line">reboot -p        ### 关闭机器</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Reboot </tag>
            
            <tag> halt </tag>
            
            <tag> PowerOff </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux VPS主机修改VPS默认SSH端口</title>
      <link href="/posts/f0f0f03.html"/>
      <url>/posts/f0f0f03.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->最近看见服务器的防御记录出现了好多扫描爆破的端口记录，但是在Linux系统给予默认的端口22，如果我们不去修改，就会被别有用心的人有了利用的空间，不管是人工猜测还是密码器爆破，都可能从默认端口猜测到密码。<p>如果在开始就给服务器修改默认端口和安装一些安全软件，这样给服务器生产环境带来全威胁大大降低。</p><h4 id="第一步，进入系统并编辑文件sshd-config"><a href="#第一步，进入系统并编辑文件sshd-config" class="headerlink" title="第一步，进入系统并编辑文件sshd_config"></a>第一步，进入系统并编辑文件sshd_config</h4><p>使用xshell或者putty登录VPS，默认的VPS一般是22端口，然后输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi?/etc/ssh/sshd_config</span><br></pre></td></tr></table></figure><p><img src="https://img.jinjun.top/images/usr/uploads/2020/08/1596897933.jpg" alt="SSH"></p><p>我们只需要修改22数字为任意的数字即可</p><h4 id="第二步，重启SSH"><a href="#第二步，重启SSH" class="headerlink" title="第二步，重启SSH"></a>第二步，重启SSH</h4><p>我们在上面修改且退出之后，需要重启SSH才可以生效。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#CentOS系统</span><br><span class="line">service sshd restart</span><br><span class="line">#Debian/Ubuntu系统</span><br><span class="line">service ssh restart</span><br></pre></td></tr></table></figure><p>如果我们使用的是CENTOS系统或者debian&#x2F;ubuntu，使用不同的命令重启SSH。</p><p>这样，重启之后，默认的端口就改变，我们就可以用新的端口登录SSH，或者SFTP，这样安全性更高。</p><h4 id="第三步，设置防火墙"><a href="#第三步，设置防火墙" class="headerlink" title="第三步，设置防火墙"></a>第三步，设置防火墙</h4><p>一般的上面2步骤就完毕，但是有些时候为了确保还需要设定防火墙是否开启。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#如果防火墙使用的iptables（Centos 6），修改端口为9999</span><br><span class="line">iptables -I INPUT -p tcp --dport 9999 -j ACCEPT</span><br><span class="line">service iptables save</span><br><span class="line">service iptables restart</span><br><span class="line"></span><br><span class="line">#如果使用的是firewall（CentOS 7）</span><br><span class="line">firewall-cmd --zone=public --add-port=9999/tcp --permanent </span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><p>重启系统后。就可以使用新端口SSH登录，不过对于更安全的登录方式当属使用密钥登录。</p>]]></content>
      
      
      <categories>
          
          <category> 建站知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> VPS </tag>
            
            <tag> SSH </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DUX-for-typecho 添加侧边栏滑动显示内容</title>
      <link href="/posts/c0a88cd1.html"/>
      <url>/posts/c0a88cd1.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->看到DUX主题有左右滑动显示内容的边框栏，这样看着毕竟美观一点，但是凭着皮尺部的尺寸葫芦画瓢弄修复一下，这样看着毕竟协调一点。<p>##简单教程</p><ul><li>打开主题下<code>sidebar.php</code>文件</li></ul><p>搜索以下内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php if (!empty($this-&gt;options-&gt;sidebarBlock) &amp;&amp; in_array(&#x27;ShowRecentPosts&#x27;, $this-&gt;options-&gt;sidebarBlock)): ?&gt;</span><br><span class="line">    &lt;div class=&quot;widget widget-tops&quot;&gt;</span><br><span class="line">        &lt;ul class=&quot;widget-nav&quot;&gt;&lt;li class=&quot;active&quot;&gt;最新文章&lt;/li&gt;&lt;/ul&gt;</span><br><span class="line">        &lt;ul class=&quot;widget-navcontent&quot;&gt;</span><br><span class="line">            &lt;li class=&quot;item item-01 active&quot;&gt;</span><br><span class="line">                &lt;ul&gt;</span><br><span class="line">&lt;?php $this-&gt;widget(&#x27;Widget_Contents_Post_Recent&#x27;,&#x27;pageSize=6&#x27;)-&gt;to($post); ?&gt;</span><br><span class="line">&lt;?php while($post-&gt;next()): ?&gt;</span><br><span class="line">                    &lt;li&gt;&lt;time&gt;&lt;?php $post-&gt;date(&#x27;m-d&#x27;); ?&gt;&lt;/time&gt;&lt;a href=&quot;&lt;?php $post-&gt;permalink(); ?&gt;&quot; title=&quot;&lt;?php $post-&gt;title(); ?&gt;&quot;&gt;&lt;?php $post-&gt;title(); ?&gt;&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">&lt;?php endwhile; ?&gt;</span><br><span class="line">                &lt;/ul&gt;</span><br><span class="line">            &lt;/li&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;?php endif; ?&gt;</span><br></pre></td></tr></table></figure><p>替换成以下内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--站点信息栏--&gt;</span><br><span class="line">&lt;?php if (!empty($this-&gt;options-&gt;sidebarBlock) &amp;&amp; in_array(&#x27;ShowRecentPosts&#x27;, $this-&gt;options-&gt;sidebarBlock)): ?&gt;</span><br><span class="line">    &lt;div class=&quot;widget widget-tops&quot;&gt;</span><br><span class="line">        &lt;ul class=&quot;widget-nav&quot;&gt;&lt;li class=&quot;active&quot;&gt;最新文章&lt;/li&gt;</span><br><span class="line">        &lt;li class=&quot;active&quot;&gt;最新文章&lt;/li&gt;</span><br><span class="line">&lt;li class=&quot;&quot;&gt;热门文章&lt;/li&gt;        </span><br><span class="line">&lt;li class=&quot;&quot;&gt;强烈推荐&lt;/li&gt;</span><br><span class="line">&lt;li class=&quot;&quot;&gt;联系我们&lt;/li&gt;&lt;/ul&gt;</span><br><span class="line">        &lt;ul class=&quot;widget-navcontent&quot;&gt;</span><br><span class="line">            &lt;li class=&quot;item item-01 active&quot;&gt;</span><br><span class="line">                &lt;ul&gt;</span><br><span class="line">&lt;?php $this-&gt;widget(&#x27;Widget_Contents_Post_Recent&#x27;,&#x27;pageSize=6&#x27;)-&gt;to($post); ?&gt;</span><br><span class="line">&lt;?php while($post-&gt;next()): ?&gt;</span><br><span class="line">                    &lt;li&gt;&lt;time&gt;&lt;?php $post-&gt;date(&#x27;m-d&#x27;); ?&gt;&lt;/time&gt;&lt;a href=&quot;&lt;?php $post-&gt;permalink(); ?&gt;&quot; title=&quot;&lt;?php $post-&gt;title(); ?&gt;&quot;&gt;&lt;?php $post-&gt;title(); ?&gt;&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">&lt;?php endwhile; ?&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">    &lt;/li&gt;</span><br><span class="line">    &lt;li class=&quot;item item-02&quot;&gt;</span><br><span class="line">&lt;ul&gt;</span><br><span class="line">测试</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line">&lt;/li&gt;</span><br><span class="line">&lt;li class=&quot;item item-03&quot;&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">测试</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">&lt;/li&gt;</span><br><span class="line">&lt;li class=&quot;item item-04&quot;&gt;</span><br><span class="line">&lt;ul&gt;</span><br><span class="line">            测试</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line">&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;?php endif; ?&gt;</span><br></pre></td></tr></table></figure><p>这里要自己DIY内容，我不知道你们喜欢什么风格的。</p><p>让看看效果吧。是不是跟WP版的一模一样。哈哈！</p><p><img src="https://img.jinjun.top/images/usr/uploads/2020/05/1589212023.png" alt="侧边栏.png"></p>]]></content>
      
      
      <categories>
          
          <category> Typecho </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typecho </tag>
            
            <tag> DUX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS7/8源码编译安装Tengine并设置开机启动</title>
      <link href="/posts/328d0ab6.html"/>
      <url>/posts/328d0ab6.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->> 简介<p><img src="https://img.jinjun.top/images/usr/uploads/2020/05/1588871732.png" alt="Tengine.png"></p><p>Tengine是由淘宝网发起的Web服务器项目。它在<a href="http://nginx.org/">Nginx</a>的基础上，针对大访问量网站的需求，添加了很多高级功能和特性。Tengine的性能和稳定性已经在大型的网站得到了很好的检验。它的最终目标是打造一个高效、稳定、安全、易用的Web平台。</p><h2 id="安装编译依赖环境"><a href="#安装编译依赖环境" class="headerlink" title="安装编译依赖环境"></a>安装编译依赖环境</h2><p>1、 安装依赖</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install gcc gcc-c++  bzip2 perl curl curl-devel  expat-devel gettext-devel openssl-devel libxml2 libxml2-devel libjpeg-devel libpng-devel freetype-devel libmcrypt-devel autoconf</span><br></pre></td></tr></table></figure><p>2、 扩展安装源</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum -y install epel-release</span><br><span class="line">yum -y install libmcrypt libmcrypt-devel mcrypt mhash</span><br></pre></td></tr></table></figure><p>3、 安装编译组件</p><p>(1) pcre：一个Perl库，包括 perl 兼容的正则表达式库。nginx rewrite依赖于PCRE库。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/src &amp;&amp; wget https://ftp.pcre.org/pub/pcre/pcre-8.44.tar.gz &amp;&amp; tar zxvf pcre-8.44.tar.gz &amp;&amp; cd pcre-8.44 &amp;&amp; ./configure --prefix=/usr/local/pcre &amp;&amp; make &amp;&amp; make install</span><br></pre></td></tr></table></figure><p>(2) jemalloc：是一个更好的内存管理工具，使用jemalloc可以更好的优化Tengine的内存管理。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/src &amp;&amp; wget https://github.com/jemalloc/jemalloc/releases/download/5.2.0/jemalloc-5.2.0.tar.bz2 &amp;&amp; tar xvf jemalloc-5.2.0.tar.bz2 &amp;&amp; cd jemalloc-5.2.0 &amp;&amp; ./configure --prefix=/usr/local/jemalloc &amp;&amp; make &amp;&amp; make install</span><br></pre></td></tr></table></figure><p>(3) Zlib：提供资料压缩之用的函式库，当Tengine想启用GZIP压缩的时候就需要使用到Zlib</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/src &amp;&amp; wget http://zlib.net/zlib-1.2.11.tar.gz &amp;&amp; tar zxvf zlib-1.2.11.tar.gz &amp;&amp; cd zlib-1.2.11 &amp;&amp; ./configure --prefix=/usr/local/zlib &amp;&amp; make &amp;&amp; make install</span><br></pre></td></tr></table></figure><p>(4) OpenSSL：是一个强大的安全套接字层密码库，囊括主要的密码算法、常用的密钥和证书封装管理功能及SSL协议，并提供丰富的应用程序供测试或其它目的使用。主要是为了让tengine支持Https的访问请求。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/src &amp;&amp; wget https://www.openssl.org/source/openssl-1.1.1.tar.gz &amp;&amp; tar zxvf openssl-1.1.1.tar.gz &amp;&amp; cd openssl-1.1.1 &amp;&amp; ./config --prefix=/usr/local/openssl &amp;&amp; make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h2 id="创建WWW用户执行Tengine"><a href="#创建WWW用户执行Tengine" class="headerlink" title="创建WWW用户执行Tengine"></a>创建WWW用户执行Tengine</h2><p>这里为了安全起见还是添加一个专用的账户来执行Tengine，不建议用root用户启动。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">groupadd www</span><br><span class="line">useradd -m -s /sbin/nologin -g www www</span><br></pre></td></tr></table></figure><h2 id="编译安装Tengine"><a href="#编译安装Tengine" class="headerlink" title="编译安装Tengine"></a>编译安装Tengine</h2><p>主要的核心组件安装完成后，就可以安装tengine。</p><p>下载Tengine，可以在<a href="http://tengine.taobao.org/">http://tengine.taobao.org/</a> 获取。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/src &amp;&amp; wget http://tengine.taobao.org/download/tengine-2.3.2.tar.gz &amp;&amp; tar -zxvf tengine-2.3.2.tar.gz &amp;&amp; cd tengine-2.3.2</span><br></pre></td></tr></table></figure><p>配置编译安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./configure --prefix=/usr/local/tengine --user=www --group=www --with-pcre=/usr/local/src/pcre-8.42 --with-openssl=/usr/local/src/openssl-1.1.1 --with-jemalloc=/usr/local/src/jemalloc-5.2.0 --with-zlib=/usr/local/src/zlib-1.2.11 --with-http_gzip_static_module --with-http_realip_module --with-http_stub_status_module --with-http_concat_module=shared --with-http_ssl_module --with-http_v2_module</span><br></pre></td></tr></table></figure><p>配置<code>--with-pcre 、--with-openssl、--with-jemalloc、--with-zlib</code>的路径为源文件的路径。不然会出错</p><p>检查配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">echo $?</span><br><span class="line">// 如果输出0则下一步</span><br><span class="line">make -j4&amp;&amp;make install</span><br><span class="line">// -j 则是调用多核心，进行并行编译。建议是cpu核心的两倍</span><br></pre></td></tr></table></figure><h2 id="Tengine设置自动启动"><a href="#Tengine设置自动启动" class="headerlink" title="Tengine设置自动启动"></a>Tengine设置自动启动</h2><p>系统用户登录系统后启动的服务 的目录 <code>/usr/lib/systemd/system</code><br>如需要开机没有登陆情况下就能运行的程序在系统目录内<code>/lib/systemd/system</code></p><p>我希望在系统开机就保持程序的正常运行，这里我把配置放在系统目录下。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">// 系统用户登录启动服务</span><br><span class="line">cd /lib/systemd/system</span><br><span class="line">// 添加tengine配置</span><br><span class="line">vi tengine.service</span><br><span class="line">//快捷创建文件</span><br><span class="line">vi /lib/systemd/system/nginx.service</span><br></pre></td></tr></table></figure><p>添加以下配置信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=The nginx HTTP and reverse proxy server</span><br><span class="line">After=syslog.target network.target remote-fs.target nss-lookup.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">PIDFile=/usr/local/nginx/logs/nginx.pid</span><br><span class="line">ExecStartPre=/usr/local/nginx/sbin/nginx -t</span><br><span class="line">ExecStart=/usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf</span><br><span class="line">ExecReload=/bin/kill -s HUP $MAINPID</span><br><span class="line">ExecStop=/bin/kill -s QUIT $MAINPID</span><br><span class="line">PrivateTmp=true</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p>设置文件权限</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 745 nginx.service</span><br></pre></td></tr></table></figure><p>设置开机启动</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable tengine.service</span><br></pre></td></tr></table></figure><blockquote><p>Tengine相关指令</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">启动nginx服务??? systemctl start nginx.service</span><br><span class="line">设置开机自启动?? systemctl enable nginx.service</span><br><span class="line">停止开机自启动?? systemctl disable nginx.service</span><br><span class="line">查看服务当前状态 systemctl status nginx.service</span><br><span class="line">重新启动服务???? systemctl restart nginx.service</span><br><span class="line">查看所有已启动的服务? systemctl list-units --type=service</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 建站知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Tenginx </tag>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>修改Nginx名称伪装任意WEB Server</title>
      <link href="/posts/384cbd91.html"/>
      <url>/posts/384cbd91.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->![Nginx][1]<p>Nginx是轻量化、高性能的Web server软件，其占用低，并发能力强等等，受到很多人的欢迎。但是随之而来的各种机器人扫描器，倘若伪装成其他的web服务器，这里也可以欺骗一下扫描器等等这些东西，防君子不防小人。</p><p>以下修改需要下载Nginx编译包解压并需要在以下文件中修改，修改后进行编译安装。</p><h2 id="src-x2F-core-x2F-nginx-h"><a href="#src-x2F-core-x2F-nginx-h" class="headerlink" title="src&#x2F;core&#x2F;nginx.h"></a>src&#x2F;core&#x2F;nginx.h</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#define NGINX_VER          &quot;nginx/&quot; NGINX_VERSION</span><br><span class="line">//修改为</span><br><span class="line">#define NGINX_VER          &quot;NEWS/&quot; NGINX_VERSION</span><br><span class="line"></span><br><span class="line">#define NGINX_VAR          &quot;NGINX&quot;</span><br><span class="line">//修改为</span><br><span class="line">#define NGINX_VAR          &quot;NEWS&quot;</span><br></pre></td></tr></table></figure><h2 id="src-x2F-http-x2F-ngx-http-header-filter-module-c"><a href="#src-x2F-http-x2F-ngx-http-header-filter-module-c" class="headerlink" title="src&#x2F;http&#x2F;ngx_http_header_filter_module.c"></a>src&#x2F;http&#x2F;ngx_http_header_filter_module.c</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">static u_char ngx_http_server_string[] = &quot;Server: nginx&quot; CRLF;</span><br><span class="line">//修改为</span><br><span class="line">static u_char ngx_http_server_string[] = &quot;Server: NEWS&quot; CRLF;</span><br></pre></td></tr></table></figure><h2 id="src-x2F-http-x2F-ngx-http-special-response-c"><a href="#src-x2F-http-x2F-ngx-http-special-response-c" class="headerlink" title="src&#x2F;http&#x2F;ngx_http_special_response.c"></a>src&#x2F;http&#x2F;ngx_http_special_response.c</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&quot;&lt;hr&gt;&lt;center&gt;nginx&lt;/center&gt;&quot; CRLF</span><br><span class="line">//修改为</span><br><span class="line">&quot;&lt;hr&gt;&lt;center&gt;NEWS&lt;/center&gt;&quot; CRLF</span><br></pre></td></tr></table></figure><h2 id="src-x2F-http-x2F-v2-x2F-ngx-http-v2-filter-module-c"><a href="#src-x2F-http-x2F-v2-x2F-ngx-http-v2-filter-module-c" class="headerlink" title="src&#x2F;http&#x2F;v2&#x2F;ngx_http_v2_filter_module.c"></a>src&#x2F;http&#x2F;v2&#x2F;ngx_http_v2_filter_module.c</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&quot;http2 output header: \&quot;server: nginx\&quot;&quot;);</span><br><span class="line">//修改为</span><br><span class="line">&quot;http2 output header: \&quot;server: NEWS\&quot;&quot;);</span><br></pre></td></tr></table></figure><p>通过修改上面4个文件，我们已将nginx服务器名修改为了<code>NEWS</code>，如果不想去找到文件一个一个修改，也可以使用<code>sed</code>命令直接替换：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#执行更名操作</span><br><span class="line">sed -i &quot;s#\&quot;NGINX\&quot;#\&quot;NEWS\&quot;#&quot; src/core/nginx.h</span><br><span class="line">sed -i &quot;s#\&quot;nginx/\&quot;#\&quot;NEWS/\&quot;#&quot; src/core/nginx.h</span><br><span class="line">sed -i &quot;s#Server: nginx#Server: NEWS#&quot; src/http/ngx_http_header_filter_module.c</span><br><span class="line">sed -i &quot;s#\&quot;&lt;hr&gt;&lt;center&gt;nginx&lt;\/center&gt;\&quot;#\&quot;&lt;hr&gt;&lt;center&gt;NEWS&lt;\/center&gt;\&quot;#&quot; src/http/ngx_http_special_response.c</span><br><span class="line">sed -i &quot;s#server: nginx#server: NEWS#&quot;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 建站知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Tenginx </tag>
            
            <tag> Nginx </tag>
            
            <tag> WEB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux挂载空闲磁盘（查看、分区、格式化、挂载）</title>
      <link href="/posts/104b3c9e.html"/>
      <url>/posts/104b3c9e.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->此步骤适合所有的Linux的系统，不管是CentOS、Ubuntu等等这些系统怎么更新，底层的Linux的命令基本是不会变化的。<p>提醒：挂载操作会清空数据，请确定挂载盘无数据或者未使用</p><p>远程连接SSH登录上服务器，进行以下操作</p><h2 id="查看服务器未挂载的空闲磁盘"><a href="#查看服务器未挂载的空闲磁盘" class="headerlink" title="查看服务器未挂载的空闲磁盘"></a>查看服务器未挂载的空闲磁盘</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fdisk -l</span><br></pre></td></tr></table></figure><p><img src="https://img.jinjun.top/images/usr/uploads/2020/05/1588429665.png" alt="fdisk.png"></p><p>这里看出，服务器的<code>/dev/vdb</code>容量为42.9G的磁盘没有挂载</p><h2 id="格式化磁盘"><a href="#格式化磁盘" class="headerlink" title="格式化磁盘"></a>格式化磁盘</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fdisk /dev/vdb</span><br></pre></td></tr></table></figure><p><img src="https://img.jinjun.top/images/usr/uploads/2020/05/1588430752.png" alt="fdisk.png"></p><blockquote><p>大致的意思</p></blockquote><p>大致流程是:<code>n -&gt; p -&gt; 1 -&gt; 回车 -&gt; 回车 -&gt; w</code><br>n：添加一个新分区<br>p：主分区<br>两个回车是指开始和结束的磁盘扇区大小<br>w：写入磁盘</p><h2 id="创建分区"><a href="#创建分区" class="headerlink" title="创建分区"></a>创建分区</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkfs.ext4 /dev/vdb1</span><br></pre></td></tr></table></figure><p>这里可以选择使用ext3 推荐使用ext4</p><p><img src="https://img.jinjun.top/images/usr/uploads/2020/05/1588431435.png" alt="fdisk.png"></p><h2 id="挂载磁盘到分区"><a href="#挂载磁盘到分区" class="headerlink" title="挂载磁盘到分区"></a>挂载磁盘到分区</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir /home</span><br><span class="line">mount /dev/vdb1 /home</span><br></pre></td></tr></table></figure><p>在系统的根目录创建一个home，把这个磁盘挂载到此目录，挂载位置可以自己定义。</p><p>##查看磁盘信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df</span><br></pre></td></tr></table></figure><p><img src="https://img.jinjun.top/images/usr/uploads/2020/05/1588432153.png" alt="fdisk.png"></p><h2 id="查看磁盘所有信息"><a href="#查看磁盘所有信息" class="headerlink" title="查看磁盘所有信息"></a>查看磁盘所有信息</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fdisk -l</span><br></pre></td></tr></table></figure><p><img src="https://img.jinjun.top/images/usr/uploads/2020/05/1588432396.png" alt="fdisk.png"></p><h2 id="设置开机自动挂载"><a href="#设置开机自动挂载" class="headerlink" title="设置开机自动挂载"></a>设置开机自动挂载</h2><p>将信息写入fstab</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/fstab</span><br><span class="line">//最后一行添加以下代码</span><br><span class="line">/dev/vdb1 /home ext4 defaults 0 1</span><br></pre></td></tr></table></figure><p>###快捷命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;/dev/vdb1 /home ext4 defaults 0 1&quot; &gt;&gt; /etc/fstab</span><br></pre></td></tr></table></figure><p>如果你分区用的是ext3，这里也要用ext3;挂载目录也要修改为你磁盘挂载目录</p>]]></content>
      
      
      <categories>
          
          <category> 建站知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CentOS </tag>
            
            <tag> Linux </tag>
            
            <tag> 挂载磁盘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WPS Office/WPS Pro企业版激活码分享</title>
      <link href="/posts/ffde195a.html"/>
      <url>/posts/ffde195a.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->![WPS.png][1]<blockquote><p>金山软件股份有限公司自主研发的一款办公软件套装，可以实现办公软件最常用的文字、表格、演示等多种功能。具有内存占用低、运行速度快、体积小巧、强大插件平台支持、免费提供海量在线存储空间及文档模板、支持阅读和输出PDF文件、全面兼容微软Office97-2010格式（doc&#x2F;docx&#x2F;xls&#x2F;xlsx&#x2F;ppt&#x2F;pptx等）独特优势。覆盖Windows、Linux、Android、iOS等多个平台。</p></blockquote><p>现在激活码也不稳定了，貌似WPS更新了规则，某些激活码有时间限制，2016版超稳。</p><blockquote><p>WPS Office2016企业版</p></blockquote><p>THUV2-32HH7-6NMHN-PTX7Y-QQCTH<br>R8R8P-MTT6F-KLRPM-J7CAB-PJM8C<br>A4XV7-QP9JN-E7FCB-VQFRD-4NLKC<br>7LR67-WTXPA-KLUHV-GEK2E-QW4CK<br>EUYTH-3KWKL-PJMX7-XBCPW-9U2DD<br>U2PWU-H7D9H-69T3B-JEYC2-3R2NG<br>7G2HE-JR8KL-ABB9D-Y7789-GLNFL<br>9DP6T-9AGWG-KWV33-9MPC8-JDCVF</p><blockquote><p><a href="https://ep.wps.cn/download">WPS Office2019</a>企业版</p></blockquote><p>694BF-YUDBG-EAR69-BPRGB-ATQXH<br>FLHAP-TEUGA-9MA3A-3TY3Q-V9EPD<br>7LR67-WTXPA-KLUHV-GEK2E-QW4CK<br>EUYTH-3KWKL-PJMX7-XBCPW-9U2DD<br>U2PWU-H7D9H-69T3B-JEYC2-3R2NG</p><blockquote><p><a href="https://ep.wps.cn/download">WPS Pro</a></p></blockquote><p>694BF-YUDBG-EAR69-BPRGB-ATQXH<br>R8R8P-MTT6F-KLRPM-J7CAB-PJM8C<br>7LR67-WTXPA-KLUHV-GEK2E-QW4CK<br>EUYTH-3KWKL-PJMX7-XBCPW-9U2DD<br>THUV2-32HH7-6NMHN-PTX7Y-QQCTH<br>A4XV7-QP9JN-E7FCB-VQFRD-4NLKC<br>U2PWU-H7D9H-69T3B-JEYC2-3R2NG<br>7G2HE-JR8KL-ABB9D-Y7789-GLNFL<br>9DP6T-9AGWG-KWV33-9MPC8-JDCVF</p>]]></content>
      
      
      <categories>
          
          <category> 资源分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WPS </tag>
            
            <tag> WPS Office </tag>
            
            <tag> WPS Pro </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BT宝塔面板Nginx设置反向代理</title>
      <link href="/posts/83504d40.html"/>
      <url>/posts/83504d40.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->## 前言<p>宝塔面板很多人使用，自己也使用快两年了。最近想去蔷外查点文献，无奈环境太恶劣。</p><p>这里使用一台海外VPS，部署完了Nginx环境，就可以设置网站的反向代理，也不需要太多的技术，小白也可以简单为某站点做镜像加速。</p><h2 id="场景应用"><a href="#场景应用" class="headerlink" title="场景应用"></a>场景应用</h2><ol><li>加速CDN源网站，并做多节点负载。</li><li>用来访问某些404网站</li><li>保护源站IP，开启缓存，隐藏主站不受到外来的攻击。</li><li>反代别人的网站，还可以利用<code>suds_filter</code>替换修改别人的网站内容。(这不道德行为，不建议亲们尝试)</li></ol><h2 id="入门教程"><a href="#入门教程" class="headerlink" title="入门教程"></a>入门教程</h2><p>首先创建一个站点，填入域名，其他什么PHP版本随意也用不上。</p><p>如果源站是HTTPS协议，那反代域名也安装一个SSL证书。不然会报错。</p><p><img src="https://img.jinjun.top/images/usr/uploads/2020/04/1587914412.png" alt="反向代理.png"></p><ul><li>目标URL：填写含http&#x2F;https的被代URL</li><li>发送域名：填写不含http&#x2F;https的被代域名</li><li>内容替换：按需填写，用来直接替换被代网站源码，通常的操作应该是被代的域名替换为主代的域名</li><li>开启反向代理：以上信息填写完成后打勾即可开启反向代理模式</li><li>开启缓存：建议开启，能让访问主代加载速度更快，不过缺点就是内容更新会有滞后</li></ul><blockquote><p>也可以把源站的内容分布在多个反代服务器中缓存，然后使用域名分区解析，这样也可以达到低成本CDN的方案。但是有一种也很恶心的，反代别人的网站，替换掉网站的内容，这种行为钧言觉得窃取别人的劳动的成果表示严重抗议。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 建站知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tenginx </tag>
            
            <tag> Nginx </tag>
            
            <tag> 宝塔面板 </tag>
            
            <tag> CDN </tag>
            
            <tag> 反向代理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决Typecho使用CDN无法获取真实IP地址</title>
      <link href="/posts/50270466.html"/>
      <url>/posts/50270466.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->最近收到不少的垃圾评论，但是在后台显示都是差不多一样的IP。我赶紧去查了一下IP的所在地，发现都是阿里云CDN节点的节点的IP。这时候才发现明明开启了防评论过滤，怎么会无效呢？那就获取真实ip，这里提供一个小代码来解决这个问题。<p>在博客的根目录找到<code>config.inc.php</code>添加以下代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//** 防止CDN造成无法获取客户真实IP地址 */</span><br><span class="line">if(isset($_SERVER[&#x27;HTTP_X_FORWARDED_FOR&#x27;])) </span><br><span class="line">&#123;</span><br><span class="line">    $list = explode(&#x27;,&#x27;,$_SERVER[&#x27;HTTP_X_FORWARDED_FOR&#x27;]);</span><br><span class="line">    $_SERVER[&#x27;REMOTE_ADDR&#x27;] = $list[0];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>保存代码，CDN全站刷新后，看评论ip是否真实</p>]]></content>
      
      
      <categories>
          
          <category> Typecho </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typecho </tag>
            
            <tag> CDN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>typecho社交应用分享小卡片优化</title>
      <link href="/posts/bfeb51bf.html"/>
      <url>/posts/bfeb51bf.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->看见wp主题很多通过浏览器分享的页面，都会生成一个小卡片。看着炫酷，总比看着一寸长长的链接好吧，后来发现浏览器是通过OG协议去抓取相当于的内容。og是一种新的HTTP头部标记，即Open Graph Protocol，有兴趣的可以查看去[OG官网文档][1]了解一下。<p><img src="https://img.jinjun.top/images/usr/uploads/2020/04/1586796126.jpg" alt="微信图片.jpg"></p><p>第一个带卡片的是微信的分享只显示一个链接的图片，下面两个为谷歌浏览器的分享已经可以看到og协议已经生效。</p><h3 id="OG协议大致包含以下信息："><a href="#OG协议大致包含以下信息：" class="headerlink" title="OG协议大致包含以下信息："></a>OG协议大致包含以下信息：</h3><p><code>og:type</code> 页面内容类型，博客通常使用article文章类型即可。<br><code>og:title</code> 这里是文章标题<br><code>og:description</code> 页面的简单描述，可以使用文章摘要<br><code>og:site_name</code> 页面所在网站名，使用博客网站名称<br><code>og:url</code> 文章页面url地址<br><code>og:image</code> 文章略缩图地址</p><h3 id="那么typecho怎么添加og协议"><a href="#那么typecho怎么添加og协议" class="headerlink" title="那么typecho怎么添加og协议"></a>那么typecho怎么添加og协议</h3><p>在当前主题目录中，找到<code>header.php</code>文件，在<code>head</code>标签内插入以下内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta property=&quot;og:type&quot; content=&quot;&lt;?php if ($this-&gt;is(&#x27;index&#x27;)): ?&gt;website&lt;?php else: ?&gt;acticle&lt;?php endif; ?&gt;&quot;&gt;</span><br><span class="line">&lt;meta property=&quot;og:title&quot; content=&quot;&lt;?php if ($this-&gt;is(&#x27;index&#x27;)): ?&gt;&lt;?php $this-&gt;options-&gt;title(); ?&gt;&lt;?php else: ?&gt;&lt;?php $this-&gt;archiveTitle(&#x27;/&#x27;,&#x27;&#x27;,&#x27; - &#x27;); ?&gt;&lt;?php $this-&gt;options-&gt;title(); ?&gt;&lt;?php endif; ?&gt;&quot;&gt;</span><br><span class="line">&lt;meta property=&quot;og:site_name&quot; content=&quot;&lt;?php $this-&gt;options-&gt;title();?&gt;&quot;&gt;</span><br><span class="line">&lt;meta property=&quot;og:description&quot; content=&quot;&lt;?php if ($this-&gt;is(&#x27;index&#x27;)): ?&gt;&lt;?php $this-&gt;options-&gt;description() ?&gt;&lt;?php else: ?&gt;&lt;?php $this-&gt;excerpt(80) ?&gt;&lt;?php endif; ?&gt;&quot;&gt;</span><br><span class="line">&lt;meta property=&quot;og:url&quot; content=&quot;&lt;?php $this-&gt;permalink(); ?&gt;&quot;/&gt;</span><br><span class="line">&lt;meta property=&quot;og:image&quot; content=&quot;&lt;?php if ($this-&gt;is(&#x27;index&#x27;)): ?&gt;&lt;?php $this-&gt;options-&gt;themeUrl(&#x27;img/logo.png&#x27;); ?&gt;&lt;?php else: ?&gt;&lt;?php echo showThumb($this,null,true); ?&gt;&lt;?php endif; ?&gt;&quot;&gt;</span><br></pre></td></tr></table></figure><p>这里要提醒一下，不要照搬要仔细看一下，其中<code>og:description</code>是根据首页和文章页来判断，首页显示站点的描述，文章页是截取文章的前60个字也可以自己修改和<code>og:image</code>首页是调用logo，文章页调用的自己主题的缩略图函数，默认选取文章第一张图片，如果要实现主题匹配，需要修改为自己的typecho主题缩略图函数调用。</p>]]></content>
      
      
      <categories>
          
          <category> Typecho </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typecho </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Typecho主题开发相关函数</title>
      <link href="/posts/f1cbbab0.html"/>
      <url>/posts/f1cbbab0.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->站点名称<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php $this-&gt;options-&gt;title() ?&gt;</span><br></pre></td></tr></table></figure><p>站点网址</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php $this-&gt;options -&gt;siteUrl(); ?&gt;</span><br></pre></td></tr></table></figure><p>完整路径标题如分享几个Typecho中常用的调用函数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php $this-&gt;archiveTitle(array(&#x27;category&#x27; =&gt; &#x27;分类 %s 下的文章&#x27;, &#x27;search&#x27; =&gt; &#x27;包含关键字 %s 的文章&#x27;, &#x27;tag&#x27; =&gt; &#x27;标签 %s 下的文章&#x27;, &#x27;author&#x27; =&gt; &#x27;%s 发布的文章&#x27;), &#x27;&#x27;, &#x27; - &#x27;); ?&gt;&lt;?php $this -&gt;options-&gt;title(); ?&gt;</span><br></pre></td></tr></table></figure><p>站点说明</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php $this-&gt;options-&gt;description() ?&gt;</span><br></pre></td></tr></table></figure><p>模板文件夹地址</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php $this-&gt;options-&gt;themeUrl(); ?&gt;</span><br></pre></td></tr></table></figure><p>导入模板文件夹内的php文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php $this&lt; /span&gt;-&gt;need(&#x27;.php&#x27;); ?&gt;</span><br></pre></td></tr></table></figure><p>文章或者页面的作者</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php $this-&gt;author(); ?&gt;</span><br></pre></td></tr></table></figure><p>作者头像</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt; ?php $this-&gt;author-&gt;gravatar(&#x27;40&#x27;) ?&gt;</span><br></pre></td></tr></table></figure><p>此处输出的完整的img标签，40是头像的宽和高。</p><p>该文作者全部文章列表链接</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php $this-&gt;author-&gt;permalink (); ?&gt;</span><br></pre></td></tr></table></figure><p>该文作者个人主页链接</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php $this-&gt;author-&gt;url(); ?&gt;</span><br></pre></td></tr></table></figure><p>该文作者的邮箱地址</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php $this-&gt;author-&gt;mail(); ?&gt;</span><br></pre></td></tr></table></figure><p>后台地址与登陆地址</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php $this-&gt;options-&gt;adminUrl(); ?&gt;//后台地址</span><br><span class="line">&lt;?php $this-&gt;options-&gt;adminUrl(&#x27;login.php&#x27;); ?&gt;//登陆地址</span><br></pre></td></tr></table></figure><p>上一篇与下一篇调用代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">上一篇: &lt;?php $this-&gt;thePrev(&#x27;%s&#x27;,&#x27;没有了&#x27;); ?&gt;</span><br><span class="line">下一篇: &lt;?php $this-&gt;theNext(&#x27;%s&#x27;,&#x27;没有了&#x27;); ?&gt;</span><br></pre></td></tr></table></figure><p>文章最后编辑时间</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php echo gmdate(&#x27;Y-m-d H:i&#x27;, $this-&gt;modified + Typecho_Widget::widget(&#x27;Widget_Options&#x27;)-&gt;timezone); ?&gt;</span><br></pre></td></tr></table></figure><p>当前文章id</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php $this-&gt;cid(); ?&gt;</span><br></pre></td></tr></table></figure><p>调用某分类文章，pageSize是数量，mid是分类号：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php $this-&gt;widget(&#x27;Widget_Archive@index&#x27;, &#x27;pageSize=6&amp;type=category&#x27;, &#x27;mid=47′)</span><br><span class="line">-&gt;parse(&#x27;&lt;li&gt;&lt;a href=&quot;&#123;permalink&#125;&quot;&gt;&#123;title&#125;&lt;/a&gt;&lt;/li&gt;&#x27;); ?&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>标签相关文章</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php $this-&gt;related(5)-&gt;to($relatedPosts); ?&gt;</span><br><span class="line">&lt;ul&gt;</span><br><span class="line">&lt;?php while ($relatedPosts-&gt;next()): ?&gt;</span><br><span class="line">&lt;li&gt;&lt;a href=&quot;&lt;?php $relatedPosts-&gt;permalink(); ?&gt;&quot; title=&quot;&lt;?php $relatedPosts-&gt;title(); ?&gt;&quot;&gt;&lt;?php $relatedPosts-&gt;title(); ?&gt;&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">&lt;?php endwhile; ?&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure><p>翻页代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php $this-&gt;pageNav(&#x27;上一页&#x27;, &#x27;下一页&#x27;, &#x27;5&#x27;, &#x27;......&#x27;); ?&gt;//显示多个页码的</span><br><span class="line">&lt;?php $this-&gt;pageLink(&#x27;下一页&#x27;,&#x27;next&#x27;); ?&gt;</span><br><span class="line">&lt;?php $this-&gt;pageLink(&#x27;上一页&#x27;); ?&gt;//只显示上一页下一页</span><br></pre></td></tr></table></figure><p>页码显示</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php if($this-&gt;_currentPage&gt;1) echo &#x27;第&#x27;.$this-&gt;_currentPage.&#x27;页&#x27;; ?&gt;</span><br><span class="line">当前页码：&lt;?php if($this-&gt;_currentPage&gt;1) echo $this-&gt;_currentPage;  else echo 1;?&gt;</span><br><span class="line">总页码：&lt;?php echo   ceil($this-&gt;getTotal() / $this-&gt;parameter-&gt;pageSize); ?&gt;</span><br></pre></td></tr></table></figure><p>判断是否为首页，输出相关内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php if ($this-&gt;is(&#x27;index&#x27;)): ?&gt;</span><br><span class="line">//首页输出内容</span><br><span class="line">&lt;?php else: ?&gt;</span><br><span class="line">//还可以判断is语法</span><br><span class="line">$this-&gt;is(&#x27;index&#x27;);</span><br><span class="line">$this-&gt;is(&#x27;archive&#x27;);</span><br><span class="line">$this-&gt;is(&#x27;single&#x27;);</span><br><span class="line">$this-&gt;is(&#x27;page&#x27;);</span><br><span class="line">$this-&gt;is(&#x27;post&#x27;);</span><br><span class="line">$this-&gt;is(&#x27;category&#x27;);</span><br><span class="line">$this-&gt;is(&#x27;tag&#x27;);</span><br><span class="line">或者</span><br><span class="line">$this-&gt;is(&#x27;category&#x27;, &#x27;default&#x27;);</span><br><span class="line">$this-&gt;is(&#x27;page&#x27;, &#x27;start&#x27;);</span><br><span class="line">$this-&gt;is(&#x27;post&#x27;, 1);</span><br><span class="line">&lt;?php endif; ?&gt;</span><br></pre></td></tr></table></figure><p>判断为当前页的第几篇文章，并单独输出内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php if ($this-&gt;sequence == 0): ?&gt;</span><br><span class="line">//需要的插入</span><br><span class="line">&lt;?php endif; ?&gt;</span><br></pre></td></tr></table></figure><p>文章或页面，评论数目</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php $this-&gt;commentsNum(&#x27;No Comments&#x27;, &#x27;1 Comment&#x27; , &#x27;%d Comments&#x27;); ?&gt;</span><br></pre></td></tr></table></figure><p>截取部份文章（首页每篇文章显示摘要），350是字数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php $this-&gt;excerpt(350, &#x27;.. .&#x27;); ?&gt;</span><br></pre></td></tr></table></figure><p>调用自定义字段</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php $this-&gt;fields-&gt;fieldName ?&gt;</span><br></pre></td></tr></table></figure><p>RSS地址</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php $this-&gt;options-&gt;feedUrl(); ?&gt;</span><br></pre></td></tr></table></figure><p>获取最新post</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php $this-&gt;widget(&#x27;Widget_Contents_Post_Recent&#x27;, &#x27;pageSize=8&amp;type=category&#x27;)-&gt;parse(&#x27;&lt;li&gt;&lt;a href=&quot;&#123;permalink&#125;&quot;&gt;&#123;title&#125;&lt;/a&gt;&lt;/li&gt;&#x27;); ?&gt;</span><br></pre></td></tr></table></figure><p>分类描述</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php echo $this-&gt;getDescription(); ?&gt;</span><br></pre></td></tr></table></figure><p>纯文字分类名称，不带链接</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php $this-&gt;category(&#x27;,&#x27;, false); ?&gt;</span><br></pre></td></tr></table></figure><p>获取文章分类列表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul&gt;</span><br><span class="line">&lt;?php $this-&gt;widget(&#x27;Widget_Metas_Category_List&#x27;)-&gt;parse(&#x27;&lt;li&gt;&lt;a href=&quot;&#123;permalink&#125;&quot;&gt;&#123;name&#125;&lt;/a&gt; (&#123;count&#125;)&lt;/li&gt;&#x27;); ?&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure><p>获取某分类post</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">$this-&gt;widget(&#x27;Widget_Archive@indexyc&#x27;, &#x27;pageSize=8&amp;type=category&#x27;, &#x27;mid=1&#x27;)</span><br><span class="line">-&gt;parse(&#x27;&lt;li&gt;&lt;a href=&quot;&#123;permalink&#125;&quot; title=&quot;&#123;title&#125;&quot;&gt;&#123;title&#125;&lt;/a&gt;&lt;/li&gt;&#x27;); ?&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure><p>获取最新评论列表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul&gt;</span><br><span class="line">    &lt;?php $this-&gt;widget(&#x27;Widget_Comments_Recent&#x27;)-&gt;to($comments); ?&gt;</span><br><span class="line">    &lt;?php while($comments-&gt;next()): ?&gt;</span><br><span class="line">        &lt;li&gt;&lt;a href=&quot;&lt;?php $comments-&gt;permalink(); ?&gt;&quot;&gt;&lt;?php $comments-&gt;author(false); ?&gt;&lt;/a&gt;: &lt;?php $comments-&gt;excerpt(50, &#x27;...&#x27;); ?&gt;&lt;/li&gt;</span><br><span class="line">    &lt;?php endwhile; ?&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure><p>首页获取 最新文章 代码限制条数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php while ($this-&gt;next()): ?&gt;</span><br><span class="line">&lt;?php if ($this-&gt;sequence &lt;= 3): ?&gt;</span><br><span class="line">// html逻辑</span><br><span class="line">&lt;?php endif; ?&gt;</span><br><span class="line">&lt;?php endwhile; ?&gt;</span><br></pre></td></tr></table></figure><p>最新文章</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php $this-&gt;widget(&#x27;Widget_Contents_Post_Recent&#x27;)-&gt;to($post); ?&gt;</span><br><span class="line">&lt;?php while($post-&gt;next()): ?&gt;</span><br><span class="line">&lt;a href=&quot;&lt;?php $post-&gt;permalink(); ?&gt;&quot; title=&quot;&lt;?php $post-&gt;title(); ?&gt;&quot;&gt;</span><br><span class="line">&lt;?php $post-&gt;title(25, &#x27;...&#x27;); ?&gt;&lt;/a&gt;</span><br><span class="line">&lt;?php endwhile; ?&gt;</span><br></pre></td></tr></table></figure><p>获取最新评论列表第二个版本，只显示访客评论不显示博主也就是作者或者说自己发的评论</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php $this-&gt;widget(&#x27;Widget_Comments_Recent&#x27;,&#x27;ignoreAuthor=true&#x27;)-&gt;to($comments); ?&gt;</span><br><span class="line">&lt;?php while($comments-&gt;next()): ?&gt;</span><br><span class="line">&lt;li&gt;&lt;a href=&quot;&lt;?php $comments-&gt;permalink(); ?&gt;&quot;&gt;&lt;?php $comments-&gt;author(false); ?&gt;&lt;/a&gt;: &lt;?php $comments-&gt;excerpt(50, &#x27;...&#x27;); ?&gt;&lt;/li&gt;</span><br><span class="line">&lt;?php endwhile; ?&gt;</span><br></pre></td></tr></table></figure><p>获取文章时间归档</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul&gt;</span><br><span class="line">&lt;?php $this-&gt;widget(&#x27;Widget_Contents_Post_Date&#x27;, &#x27;type=month&amp;format=F Y&#x27;)-&gt;parse(&#x27;&lt;li&gt;&lt;a href=&quot;&#123;permalink&#125;&quot;&gt;&#123;date&#125;&lt;/a&gt;&lt;/li&gt;&#x27;); ?&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure><p>获取标签集合，也就是标签云</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php $this-&gt;widget(&#x27;Widget_Metas_Tag_Cloud&#x27;, &#x27;ignoreZeroCount=1&amp;limit=28&#x27;)-&gt;to($tags); ?&gt;</span><br><span class="line">&lt;?php while($tags-&gt;next()): ?&gt;</span><br><span class="line">&lt;a href=&quot;&lt;?php $tags-&gt;permalink(); ?&gt;&quot; class=&quot;size-&lt;?php $tags-&gt;split(5, 10, 20, 30); ?&gt;&quot;&gt;&lt;?php $tags-&gt;name(); ?&gt;&lt;/a&gt;</span><br><span class="line">&lt;?php endwhile; ?&gt;</span><br></pre></td></tr></table></figure><p>输出随机颜色标签云</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php $this-&gt;widget(&#x27;Widget_Metas_Tag_Cloud&#x27;, &#x27;ignoreZeroCount=1&amp;limit=30&#x27;)-&gt;to($tags); ?&gt;</span><br><span class="line">&lt;ul class=&quot;tags-list&quot;&gt;</span><br><span class="line">&lt;?php while($tags-&gt;next()): ?&gt;</span><br><span class="line">&lt;li&gt;&lt;a style=&quot;color: rgb(&lt;?php echo(rand(0, 255)); ?&gt;, &lt;?php echo(rand(0,255)); ?&gt;, &lt;?php echo(rand(0, 255)); ?&gt;)&quot; href=&quot;&lt;?php $tags-&gt;permalink(); ?&gt;&quot; title=&#x27;&lt;?php $tags-&gt;name(); ?&gt;&#x27;&gt;&lt;?php $tags-&gt;name(); ?&gt;&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">&lt;?php endwhile; ?&gt;</span><br><span class="line">&lt;?php else: ?&gt;</span><br><span class="line">&lt;li&gt;&lt;?php _e(&#x27;没有任何标签&#x27;); ?&gt;&lt;/li&gt;</span><br><span class="line">&lt;?php endif; ?&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure><p>调用该文相关文章列表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php $this-&gt;related(5)-&gt;to($relatedPosts); ?&gt;</span><br><span class="line">    &lt;?php if ($relatedPosts-&gt;have()): ?&gt;    //这句也可以写成 if (count($relatedPosts-&gt;stack))</span><br><span class="line">    &lt;?php while ($relatedPosts-&gt;next()): ?&gt;</span><br><span class="line">        &lt;li&gt;&lt;a href=&quot;&lt;?php $relatedPosts-&gt;permalink(); ?&gt;&quot; title=&quot;&lt;?php $relatedPosts-&gt;title(); ?&gt;&quot;&gt;&lt;?php $relatedPosts-&gt;title(); ?&gt;&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">    &lt;?php endwhile; ?&gt;</span><br><span class="line">    &lt;?php else : ?&gt;</span><br><span class="line">        &lt;li&gt;无相关文章&lt;/li&gt;</span><br><span class="line">    &lt;?php endif; ?&gt;</span><br></pre></td></tr></table></figure><p>隐藏head区域的程序版本和模版名称</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php $this-&gt;header(&quot;generator=&amp;template=&quot;); ?&gt;</span><br></pre></td></tr></table></figure><p>获取读者墙</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$period = time() - 999592000; // 時段: 30 天, 单位: 秒</span><br><span class="line">$counts = Typecho_Db::get()-&gt;fetchAll(Typecho_Db::get()</span><br><span class="line">-&gt;select(&#x27;COUNT(author) AS cnt&#x27;,&#x27;author&#x27;, &#x27;url&#x27;, &#x27;mail&#x27;)</span><br><span class="line">-&gt;from(&#x27;table.comments&#x27;)</span><br><span class="line">-&gt;where(&#x27;created &gt; ?&#x27;, $period )</span><br><span class="line">-&gt;where(&#x27;status = ?&#x27;, &#x27;approved&#x27;)</span><br><span class="line">-&gt;where(&#x27;type = ?&#x27;, &#x27;comment&#x27;)</span><br><span class="line">-&gt;where(&#x27;authorId = ?&#x27;, &#x27;0&#x27;)</span><br><span class="line">-&gt;group(&#x27;author&#x27;)</span><br><span class="line">-&gt;order(&#x27;cnt&#x27;, Typecho_Db::SORT_DESC)</span><br><span class="line">-&gt;limit(25)</span><br><span class="line">);</span><br><span class="line">$mostactive = &#x27;&#x27;;</span><br><span class="line">$avatar_path = &#x27;http://www.gravatar.com/avatar/&#x27;;</span><br><span class="line">foreach ($counts as $count) &#123;</span><br><span class="line">  $avatar = $avatar_path . md5(strtolower($count[&#x27;mail&#x27;])) . &#x27;.jpg&#x27;;</span><br><span class="line">  $c_url = $count[&#x27;url&#x27;]; if ( !$c_url ) $c_url = Helper::options()-&gt;siteUrl;</span><br><span class="line">  $mostactive .= &quot;&lt;a href=&#x27;&quot; . $c_url . &quot;&#x27; title=&#x27;&quot; . $count[&#x27;author&#x27;] . &quot; (参与&quot; . $count[&#x27;cnt&#x27;] . &quot;次互动)&#x27; target=&#x27;_blank&#x27;&gt;&lt;img src=&#x27;&quot; . $avatar . &quot;&#x27; alt=&#x27;&quot; . $count[&#x27;author&#x27;] . &quot;的头像&#x27; class=&#x27;avatar&#x27; width=&#x27;32&#x27; height=&#x27;32&#x27; /&gt;&lt;/a&gt;\n&quot;;</span><br><span class="line">&#125;</span><br><span class="line">echo $mostactive; ?&gt;</span><br></pre></td></tr></table></figure><p>登陆与未登录用户展示不同内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php if($this-&gt;user-&gt;hasLogin()): ?&gt;</span><br><span class="line">登陆可见</span><br><span class="line">&lt;?php else: ?&gt;</span><br><span class="line">未登录和登陆均可见</span><br><span class="line">&lt;?php endif; ?&gt;</span><br></pre></td></tr></table></figure><p>导航页面列表调用隐藏特定的页面 这个演示隐藏了album和search两个页面</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul&gt;</span><br><span class="line">&lt;li&lt;?php if($this-&gt;is(&#x27;index&#x27;)): ?&gt; class=&quot;current&quot;&lt;?php endif; ?&gt;&gt;&lt;a href=&quot;&lt;?php $this-&gt;options-&gt;siteUrl(); ?&gt;&quot;&gt;主页&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">&lt;?php $this-&gt;widget(&#x27;Widget_Contents_Page_List&#x27;)-&gt;to($pages); ?&gt;</span><br><span class="line">    &lt;?php while($pages-&gt;next()): ?&gt;</span><br><span class="line">    &lt;?php if (($pages-&gt;slug != &#x27;album&#x27;) &amp;&amp; ($pages-&gt;slug != &#x27;search&#x27;)): ?&gt;</span><br><span class="line">    &lt;li&lt;?php if($this-&gt;is(&#x27;page&#x27;, $pages-&gt;slug)): ?&gt; class=&quot;current&quot;&lt;?php endif; ?&gt;&gt;&lt;a href=&quot;&lt;?php $pages-&gt;permalink(); ?&gt;&quot; title=&quot;&lt;?php $pages-&gt;title(); ?&gt;&quot;&gt;&lt;?php $pages-&gt;title(); ?&gt;&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">    &lt;?php endif; ?&gt;</span><br><span class="line">    &lt;?php endwhile; ?&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure><p>根据页面类型显示不同内容</p><p>判断为首页则显示内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php if ($this-&gt;is(&#x27;post&#x27;)): ?&gt;</span><br><span class="line">想要显示的内容1 </span><br><span class="line">&lt;?php endif; ?&gt;</span><br></pre></td></tr></table></figure><p>判断不同页面显示内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php if ($this-&gt;is(&#x27;index&#x27;)): ?&gt;</span><br><span class="line">//首页 显示内容</span><br><span class="line">&lt;?php elseif ($this-&gt;is(&#x27;post&#x27;)): ?&gt;</span><br><span class="line">//文章 显示内容</span><br><span class="line">&lt;?php else: ?&gt;&lt;</span><br><span class="line">//页面 显示内容</span><br><span class="line">&lt;?php endif; ?&gt;</span><br></pre></td></tr></table></figure><p>这里可以利用<code>&lt;?php elseif ($this-&gt;is(&#39;函数&#39;)): ?&gt;</code>添加其他函数，继续显示不同的内容</p><p>获取文章第一张缩略图</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php $this-&gt;attachments(1)-&gt;attachment-&gt;url(); ?&gt;</span><br></pre></td></tr></table></figure><p>获取<em>缩略图</em>指当前文章第一个附件地址，确保第一附件为图片</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php?if($this-&gt;attachments(1)-&gt;attachment-&gt;isImage)?$this-&gt;attachments(1)-&gt;attachment-&gt;url();??&gt;</span><br></pre></td></tr></table></figure><p>判断是否为图片，继续输出</p><ul><li><p>自定义首页描述description</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php if($thisis(&#x27;index&#x27;)): ?&gt;</span><br><span class="line">&lt;?php this-&gt;header(&#x27;description=详细描述内容部分内容，自定义即可。&#x27;); ?&gt;</span><br><span class="line">&lt;?php else:?&gt;</span><br><span class="line">&lt;?php $this-&gt; header(); ?&gt;</span><br><span class="line">&lt;?php endif;?&gt;</span><br></pre></td></tr></table></figure></li><li><p>登录与未登录显示不同内容</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php if($this-user-&gt;hasLogin()): ?&gt;</span><br><span class="line">登陆可见</span><br><span class="line">&lt;?php eles: ?&gt;</span><br><span class="line">未登录和登陆均可见</span><br><span class="line">&lt;?php endif;?&gt;</span><br></pre></td></tr></table></figure><ul><li>Typecho侧边栏不显示博主评论</li></ul><p><code>pageSize=6</code> 显示多少条</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php $this-&gt;widget(&#x27;Widget_Comments_Recent&#x27;,&#x27;pageSize=6&amp;ignoreAuthor=true&#x27;)-&gt;to($comments); ?&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Typecho </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typecho </tag>
            
            <tag> 代码片段 </tag>
            
            <tag> 主题开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>首个Typecho写作客户端 - 南博nabo</title>
      <link href="/posts/6cfeb5fe.html"/>
      <url>/posts/6cfeb5fe.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->![docs-nabo.png][1]<p>最近也使用上了南博APP来写作，这篇文章来自南博发布。</p><p>之前一直羡慕wordpress有客户端，现在typecho的安卓客户端简洁大气的<code>南博</code>它来了他真的来了没错又更新了，作者也花了很多心机来优化。</p><blockquote><p>南博介绍</p></blockquote><p>开发者:权那他<br>南博App - typecho客户端<br>这是权那他为typecho博客而开发的android客户端<br>利用XMLRPC接口，无需繁琐操作，简单方便，轻松快捷。<br>目前版本已经支持多博客使用，独立页面编辑，撰写&#x2F;编辑&#x2F;删除文章，评论处理，评论回复，数据统计，评论查看，图片上传，文件管理等功能</p><p>官方地址：<a href="https://nabo.krait.cn/">南博APP</a>    XMLRPC：<a href="https://github.com/kraity/typecho-xmlrpc">XMLRPC替换</a></p><blockquote><p>开发日志</p></blockquote><h3 id="2020-03-30更新至V1-8"><a href="#2020-03-30更新至V1-8" class="headerlink" title="2020.03.30更新至V1.8"></a>2020.03.30更新至V1.8</h3><p>XML-RPC请求变动，请到官网按要求进行更新<br>新增自定义消息推送(使用教程请到官网查看)<br>新增使用小提示(提示帮助小伙伴)<br>优化性能 修复已知BUG</p><h3 id="2020-03-17更新至V1-7"><a href="#2020-03-17更新至V1-7" class="headerlink" title="2020.03.17更新至V1.7"></a>2020.03.17更新至V1.7</h3><p>XML-RPC请求变动，请到官网按要求进行更新<br>全新 UI3.0<br>优化性能<br>修复已知BUG 欢迎大家提交建议和报错日志</p><h3 id="2020-03-08更新至V1-6"><a href="#2020-03-08更新至V1-6" class="headerlink" title="2020.03.08更新至V1.6"></a>2020.03.08更新至V1.6</h3><p>XML-RPC请求变动，请到官网按要求进行更新<br>使用SQLite数据库<br>新增自动保存<br>新增我的动态<br>新增自定义字段<br>新增本地草稿<br>新增内置浏览器<br>修复已知BUG 欢迎大家提交建议和报错日志</p>]]></content>
      
      
      <categories>
          
          <category> Typecho </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typecho </tag>
            
            <tag> 南博 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一些让你爱上做图的 Photoshop 小技巧</title>
      <link href="/posts/da23745a.html"/>
      <url>/posts/da23745a.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->> 经常用Photoshop 比如一些快捷键 如何运用这些快捷键 让P图更加顺手 便捷<p><img src="https://img.jinjun.top/images/usr/uploads/2020/04/1585748422.png" alt="photoshop.png"><br><img src="https://img.jinjun.top/images/usr/uploads/2020/04/1585748488.png" alt="photoshop.png"></p>]]></content>
      
      
      <categories>
          
          <category> 资源分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PS </tag>
            
            <tag> Photoshop </tag>
            
            <tag> 做图小技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>聊聊对博客的理解</title>
      <link href="/posts/c2b36ec2.html"/>
      <url>/posts/c2b36ec2.html</url>
      
        <content type="html"><![CDATA[<p>最初建立网站是源于一种对技术的热衷，记录一下生活。记得当时还是学生时代，第一次接触网吧，感觉玩游戏很爽，什么CF、QQ飞车等等，第一次被老爸发现在网吧玩，回家肯定少不了一顿揍。那时候使用诺基亚按键手机的时候，就接触网站。那时候感觉是挺好玩的，撸的免费的BY分销虚拟主机，景安的免费虚拟机，现在想想还是挺有趣的!!!很多网站都是建来玩玩的，过两天又删除源码。慢慢就懂得了很多，也喜欢上了折腾。玩了一段时间就不玩，也逐步放弃网站的运营。后来读了技校，才慢慢拾起建站，注册了算比较符合自己的域名，就是本站现在用的域名。</p><p>现在毕业出来工作差不多快3年，更新的博文幅度一直不大。工作当然有工作的事情要解决，所以慢慢就荒废了。很久都没有过来除草，当然也会更新一些水文。</p><p>当然为什么要选择typecho，之前用wordpress感觉好高大上，文章数量数量上来加上各种插件，速度也就慢慢降下来，加上CDN加速还是感觉出来。也用过emlog感觉还是还是不行，虽然扩展性不错，国人做的，目前更新的6.0版本更是眼前一亮。最后还是选择了typecho，简单，快捷，简单的几个数据库表就可以完成一个博客，文档清晰简单明了，速度还不错。</p><p>关于运营，当然了很多博客的最终方向还是选择了盈利方向，例如添加广告，满屏都是广告，内容五分之一都是广告覆盖。作为一个广告密集恐惧症来说，打开网页的那一瞬间我就想关闭。之前想申请谷歌广告来着想想还是算了，慢慢建站你才发现广告不是唯一的出路。当然了，很多网站做到一两个月就关闭了，也许有各种各样的原因。</p><p>网站刚刚用的是wordress、emlog后来改用typecho，数据也没有备份，推倒重建，现在才知道备份有多重要。我也不记得我自己重置了几次服务器环境装了多少次环境，折腾了几次。慢慢了就失去的兴趣。服务器维护也是一件挺不容易的事情，还要要与cc或者dd打交道，研究攻防策略。</p><p>网站开始在百度上一直没有收录，直到现在百度还是收录了首页，可能是因为TOP域名吧，搜索引擎都不怎么喜欢。本来想着用海外的vps，无奈国内速度太好所以还在选择在阿里云上安家！建站大约两年半多时间！！内容基本没有多少，至今都没有达到100篇文章，我也不知道在干什么。两年了，还在迷茫！</p><p>博客现在的内容主要是建站、分享、折腾、原创之类的东西，以前每天是去收集这些东西，没有一点乐趣，纯粹是为了完成任务，现在想想从最开始随性而为到现在步步限制，创造更多的原创性文章，自己憋出来原创文章，可能没有几个人看，但是还是会写。几年后回来看看，直的感慨万分，原来以前你是这样的。</p><p>正如《浪子心声》“命里有时终须有，命里无时莫强求”，随性随心，做到网站真真正正是自己的博客，为自己而活的网站，而非为收录或者其他而活！</p>]]></content>
      
      
      <categories>
          
          <category> 钧言钧语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 点滴 </tag>
            
            <tag> 生活 </tag>
            
            <tag> 记事本 </tag>
            
            <tag> 畅谈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Typecho PHP7 Mysql无法连接</title>
      <link href="/posts/b12848a4.html"/>
      <url>/posts/b12848a4.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->由于把老站的数据库恢复，之前使用的是PHP5，现在升级到了PHP7，由于PHP7的新特征，不兼容PHP5部分函数。Typecho直接导致无法连接上数据库。<p>解决这个问题的方法也很简单</p><p>在网站的根目录下找到<code>config.inc.php</code>文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/** 定义数据库参数 */</span><br><span class="line">$db = new Typecho_Db(&#x27;Mysql&#x27;, &#x27;xxxx&#x27;);</span><br></pre></td></tr></table></figure><p>修改成</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/** 定义数据库参数 */</span><br><span class="line">$db = new Typecho_Db(&#x27;Pdo_Mysql&#x27;, &#x27;xxxx&#x27;);</span><br></pre></td></tr></table></figure><p>也就是把Mysql修改为Pdo_Mysql即可！</p>]]></content>
      
      
      <categories>
          
          <category> Typecho </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typecho </tag>
            
            <tag> PHP </tag>
            
            <tag> PHP扩展 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>windows命令行查看文件的MD5、SHA1、SHA256</title>
      <link href="/posts/381fa8c7.html"/>
      <url>/posts/381fa8c7.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->有时候我们下载了文件，想要比较下载是否一致，可以使用下面命令来显示MD5或者SHA1，来对比两个文件的MD5值。<p>我们可以在要效验的文件夹中，按快捷键：<code>ctrl+shift+r</code> 快速打开cmd，也可以在资源管理器地址栏中输入<code>cmd</code>快速进入当前目录的命令行，非常方便。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">certutil -hashfile &lt;filename&gt;?MD5</span><br><span class="line">certutil -hashfile &lt;filename&gt;?SHA1</span><br><span class="line">certutil -hashfile &lt;filename&gt;?SHA256</span><br></pre></td></tr></table></figure><blockquote><p>选项</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-gmt -- 将时间显示为 GMT</span><br><span class="line">-seconds -- 用秒和毫秒显示时间</span><br><span class="line">-v -- 详细操作</span><br><span class="line">-privatekey -- 显示密码和私钥数据</span><br></pre></td></tr></table></figure><blockquote><p>使用案例</p></blockquote><p>不带参数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CertUtil -hashfile D:\centos7.iso MD5</span><br></pre></td></tr></table></figure><p>带参数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CertUtil -v -hashfile D:\centos7.iso MD5</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 资源分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> MD5 </tag>
            
            <tag> SHA1 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>给网站logo添加扫光特效CSS纯代码</title>
      <link href="/posts/ea28f9f3.html"/>
      <url>/posts/ea28f9f3.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->看到大前端主题有logo扫光特效，感觉挺酷的，我这个白嫖的主题也给弄上这高大尚的效果。<p>将以下代码加到你的网站css里面，typecho可以放在style.css里面，部分主题可能没有这个，随便添加css文件里面，能被引用到就行了。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">.logo:before&#123;content: &quot;&quot;;</span><br><span class="line">    position: absolute;</span><br><span class="line">    width: 110px;</span><br><span class="line">    height: 10px;</span><br><span class="line">    background-color: rgba(255, 255, 255, 0.5);</span><br><span class="line">    -webkit-transform: rotate(-45deg);</span><br><span class="line">    transform: rotate(-45deg);/*角度倾斜45*/-webkit-animation: blink 1.5s ease-in 1s infinite;/*光扫过去的时间，自己修改，可以加快*/</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@-webkit-keyframes blink &#123;</span><br><span class="line">    from &#123;left: 10px;top: 0;&#125;</span><br><span class="line">    to &#123;left: 320px;top: 0;&#125;</span><br><span class="line">&#125;</span><br><span class="line">@-o-keyframes blink &#123;</span><br><span class="line">    from &#123;left: 10px;top: 0;&#125;</span><br><span class="line">    to &#123;left: 320px;top: 0;&#125;</span><br><span class="line">&#125;</span><br><span class="line">@-moz-keyframes blink &#123;</span><br><span class="line">    from &#123;left: 10px;top: 0;&#125;</span><br><span class="line">    to &#123;left: 320px;top: 0;&#125;</span><br><span class="line">&#125;</span><br><span class="line">@keyframes blink &#123;</span><br><span class="line">    from &#123;left: -100px;top: 0;&#125;</span><br><span class="line">    to &#123;left: 320px;top: 0;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>使用说明</p></blockquote><ul><li><code>F12</code> 找到你的logo所在的div，然后找该div的class</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;h1 class=&quot;logo&quot;&gt;  &lt;a href=&quot;https://img.jinjun.top/images/&quot;&gt;</span><br><span class="line">&lt;img src=&quot;https://img.jinjun.top/images/usr/themes/DUX/img/logo.png&quot; alt=&quot;钧言极客&quot;&gt;钧言极客&lt;/a&gt;  &lt;/h1&gt;</span><br></pre></td></tr></table></figure><p>这里看class是logo，如果不是请自行修改<code>.logo:before&#123;</code>的<code>logo</code>改成你的<code>logo的class</code>，完成以上常规操作就可以啦。</p>]]></content>
      
      
      <categories>
          
          <category> 建站知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
            <tag> 静态网站 </tag>
            
            <tag> 纯代码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows修改电脑软件默认安装目录</title>
      <link href="/posts/811ae5c7.html"/>
      <url>/posts/811ae5c7.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->都知道Windows系统的电脑，默认的安装位置在C盘上，当然我个人是不喜欢把程序放在C盘，但是个别的默认安装真的无力吐槽，都喜欢往C盘上装，还有国内个别软件还喜欢带全家桶套餐。下面通过修改注册表来修改电脑的默认安装位置。<p>1、 快捷键(win+R)弹出运行表</p><p>2、 往运行表输入（regedit.exe）打开注册表编辑</p><p> <img src="https://img.jinjun.top/images/usr/uploads/2020/03/1584368964.png" alt="Windows"></p><p> <img src="https://img.jinjun.top/images/usr/uploads/2020/03/1584369057.png" alt="Windows"></p><p>3、 注册表找到路径<code>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion</code></p><p> <img src="https://img.jinjun.top/images/usr/uploads/2020/03/1584369298.png" alt="Windows"></p><p>4、 把注册表里面的带有C盘符的改成D或者其他盘符即可，双击打开<code>ProgramFilesDir</code>，在数值数据修改自己想要设定的默认安装目录，盘符要注意是输入<strong>大写字母</strong></p><p> <strong>CommonFilesDir</strong>*:公共文件目录(建议保留C盘)</p><p> <strong>ProgramFilesDir</strong>:安装目录(修改这个)</p><p> <img src="https://img.jinjun.top/images/usr/uploads/2020/03/1584370031.png" alt="Windows"></p><p>这里使用64位的系统，分为两个目录<code>ProgramFilesDir</code>和<code>ProgramFilesDir (x86)</code> ，建议都修改。</p>]]></content>
      
      
      <categories>
          
          <category> 资源分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>优化javascript加载速度的方法(解决JS加载速度慢的问题)</title>
      <link href="/posts/acf18197.html"/>
      <url>/posts/acf18197.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->最近站点的JS文件加载有点慢，用了CDN加速还是存在拥堵的现象。特效JS文件越来越多，如果等JS全部渲染完成才显示网页，这样站点加载速度真的很慢很慢。最后在脚本之家看到这个方法，分享出来，也为自己保留一下。<blockquote><p>传统的jS文件加载</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;####&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>测试结果：<br>正常范围：85ms~90ms<br>加载最低耗时：80ms</p><blockquote><p>高速加载JS文件</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">document.write(&quot;&lt;scr&quot;+&quot;ipt src=\&quot;####&quot;&gt;&lt;/sc&quot;+&quot;ript&gt;&quot;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>测试结果：<br>正常范围：17ms<del>46ms<br>加载最低耗时：0ms</del>14ms</p><blockquote><p>加载多个JS文件</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line"></span><br><span class="line">document.write(&quot;&lt;scr&quot;+&quot;ipt src=&quot;xx1.js&quot;&gt;&lt;/sc&quot;+&quot;ript&gt;&quot;) ;</span><br><span class="line">document.write(&quot;&lt;scr&quot;+&quot;ipt src=&quot;xx2.js&quot;&gt;&lt;/sc&quot;+&quot;ript&gt;&quot;) ;</span><br><span class="line">document.write(&quot;&lt;scr&quot;+&quot;ipt src=&quot;xx3.js&quot;&gt;&lt;/sc&quot;+&quot;ript&gt;&quot;) ;</span><br><span class="line">/* 以此类推添加JS */</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 建站知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用钉钉通知接收SSH登录提醒</title>
      <link href="/posts/2f601a10.html"/>
      <url>/posts/2f601a10.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->之前看到一些关于服务器安全性的问题，才知道服务器安全是多么的脆弱。有很多不注意的细节都可能引发安全问题，所以需要一个服务器登录的报警，来提供服务器的安全登录的一个审计和消息提醒。<p>##步骤</p><ul><li>在你想要通知群里，添加一个钉钉机器人</li></ul><p><img src="https://img.jinjun.top/images/usr/uploads/2020/03/1583586619.png" alt="钉钉.png"></p><ul><li>写入以下脚本</li></ul><p>服务器IP和钉钉的WebHook地址的token。其他文字也可自定义修改。</p><p>该文件需要root权限写入。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">#获取登录者的用户名</span><br><span class="line">user=$USER</span><br><span class="line">#获取登录者的IP地址</span><br><span class="line">ip=$&#123;SSH_CLIENT%% *&#125;</span><br><span class="line">#获取登录的时间</span><br><span class="line">time=$(date +%F%t%k:%M)</span><br><span class="line">#服务器的IP地址</span><br><span class="line">server=&#x27;xxx.xxx.xxx.xxx&#x27;</span><br><span class="line"></span><br><span class="line">function SendMessageToDingDing()&#123;</span><br><span class="line"></span><br><span class="line">#你钉钉机器人的地址。</span><br><span class="line">local url=&quot;https://oapi.dingtalk.com/robot/send?access_token=你钉钉机器人的token&quot;</span><br><span class="line"></span><br><span class="line">local UA=&quot;Mozilla/5.0(WindowsNT6.2;WOW64)AppleWebKit/535.24(KHTML,likeGecko)Chrome/19.0.1055.1Safari/535.24&quot;</span><br><span class="line"></span><br><span class="line">local res=`curl -XPOST -s -L -H&quot;Content-Type:application/json&quot; -H&quot;charset:utf-8&quot; $url -d&quot;&#123;\&quot;msgtype\&quot;:\&quot;text\&quot;,\&quot;text\&quot;:&#123;\&quot;content\&quot;:\&quot;$1\n$2\&quot;&#125;&#125;&quot;`</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">SendMessageToDingDing &quot;服务器登录提醒&quot; &quot;时间 $time,用户 $user,用户地址 $ip,服务器地址 $server&quot;</span><br></pre></td></tr></table></figure><p>写入<code>/etc/ssh/sshrc</code>文件，如果没有自行新建一个sshrc文件。</p><p><img src="https://img.jinjun.top/images/usr/uploads/2020/03/1583587985.png" alt="钉钉.png"></p><p>现在收到登录提醒，往后有任何的登录，你都可以收到消息。</p><blockquote><p>注意</p></blockquote><ol><li>创建了<code>~/.ssh/rc</code>的用户登录时候会执行该文件，<code>/etc/ssh/sshrc</code>会被忽略。</li><li>如果SSH登录时候，开启<code>-N</code>选项不会触发，端口转发时会触发。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SSH </tag>
            
            <tag> 钉钉 </tag>
            
            <tag> 登录提醒 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>联通互联网卡Tiny动态免流模式</title>
      <link href="/posts/2d168bbc.html"/>
      <url>/posts/2d168bbc.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->看到最近有很多免流APP铺天盖地的出现，他们有一个共同的特点通过host来欺骗运营商的计费系统，来达到免流的目的。还有很多免流的方法，例如：酸酸乳、斗鱼接口、V2.....<p>现在大部分都是QQ浏览器的动态模式，捉包也比较好捉，下一篇文章会说到。这里用别人的接口来构建，这里感谢他们。</p><h2 id="准备工具"><a href="#准备工具" class="headerlink" title="准备工具"></a>准备工具</h2><p>TinyProxy：<a href="http://pan.8dns.cn/Android/TinyProxy_2.5.9.apk">TinyProxy 2.59</a><br>联通互联网卡：王卡、天神、梦想E卡等<br>一台安卓神机以及一个爱折腾的心</p><h2 id="免流简要"><a href="#免流简要" class="headerlink" title="免流简要"></a>免流简要</h2><p>联通QQ浏览器动态模式目前可免的定向卡：(小天神卡轻松破40G)(腾讯大王卡40G不免)(工商梦想E卡轻松破40G)这些卡我都测试过了，更多的联通定向卡自行测试。貌似带腾讯互联网包免流量只能免40G。</p><h2 id="免流规则"><a href="#免流规则" class="headerlink" title="免流规则"></a>免流规则</h2><p>先安装TinyProxy，复制以下模式到TinyProxy粘贴配置然后开启就可以起飞了。</p><p><strong>PS</strong>：TinyProxy设置自启动、锁定后台活动，不要设置电池优化不然也可能导致跳点高或者是掉线</p><blockquote><p>免流代理IP</p></blockquote><p>深圳IP：<code>157.255.173.185</code><br>重庆IP：<code>58.144.152.23</code><br>上海IP：<code>210.22.247.193</code><br>天津IP：<code>111.161.111.158</code><br>上海IP：<code>116.128.146.115</code></p><blockquote><p>动态更新模式API</p></blockquote><ol><li><code>http://kc.iikira.com/kingcard</code></li><li><code>http://cs.xxzml.cn/a/a/a.php</code></li><li><code>http://cs.xxzml.cn/k/get_tinyproxy_config.php</code></li><li><code>https://api.xomue.cn/wkdt.php</code></li><li><code>https://gitee.com/r0x/WK/raw/master/wk.htm</code></li></ol><p>这里感谢大佬的更新，白嫖党表示谢过！！！</p><blockquote><p>联通动态模式一</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">listen_port=65080;</span><br><span class="line">worker_proc=0;</span><br><span class="line">mode=3gnet;</span><br><span class="line">daemon=on;</span><br><span class="line">uid=3004;</span><br><span class="line"></span><br><span class="line">#这里填写接口，更新失败直接更换接口</span><br><span class="line">token_api=&quot;http://kc.iikira.com/kingcard&quot;;</span><br><span class="line"></span><br><span class="line">#这里是代理IP，优先使用离自己近的</span><br><span class="line">http_ip=210.22.247.196;</span><br><span class="line">http_port=8090;</span><br><span class="line">http_del=&quot;X-Online-Host,Host&quot;;</span><br><span class="line">http_first=&quot;[M] http://[H][U] http://box.10155.com:80:http://ysj.iread.wo.com.cn:80\r\nQ-GUID:[Q_G]\r\nQ-Token:[Q_T]\r\n&quot;;</span><br><span class="line"></span><br><span class="line">#这里是代理IP，优先使用离自己近的</span><br><span class="line">https_connect=on;</span><br><span class="line">https_ip=210.22.247.196;</span><br><span class="line">https_port=8091;</span><br><span class="line">https_del=&quot;X-Online-Host,Host&quot;;</span><br><span class="line">https_first=&quot;[M] http://box.10155.com:80:http://ysj.iread.wo.com.cn:80\r\nQ-GUID:[Q_G]\r\nQ-Token:[Q_T]\r\n[M] [H] [V]\r\n&quot;;</span><br><span class="line"></span><br><span class="line">dns_tcp=http;</span><br><span class="line">dns_listen_port=65053;</span><br><span class="line">dns_url=&quot;119.29.29.29&quot;;</span><br></pre></td></tr></table></figure><blockquote><p>联通动态模式二</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">listen_port=65080;</span><br><span class="line">worker_proc=0;</span><br><span class="line">mode=3gnet;</span><br><span class="line">daemon=on;</span><br><span class="line">uid=3004;</span><br><span class="line"></span><br><span class="line">#这里填写接口，更新失败直接更换接口</span><br><span class="line">token_api=&quot;http://kc.iikira.com/kingcard&quot;;</span><br><span class="line"></span><br><span class="line">http_ip=210.22.247.196;</span><br><span class="line">http_port=8090;</span><br><span class="line">http_del=&quot;X-Online-Host,Host&quot;;</span><br><span class="line">http_first=&quot;[M] http://[H][U] [V]\r\nQ-GUID: [Q_G]\r\nQ-Token: [Q_T]\r\nHost: [H]\r\n&quot;;</span><br><span class="line"></span><br><span class="line">#这里是代理IP，优先使用离自己近的</span><br><span class="line">https_connect=on;</span><br><span class="line">https_ip=210.22.247.196;</span><br><span class="line">https_port=8091;</span><br><span class="line">https_del=&quot;X-Online-Host,Host&quot;;</span><br><span class="line">https_first=&quot;[M] [H] [V]\r\nHost: [H]\r\nQ-GUID: [Q_G]\r\nQ-Token: [Q_T]\r\n&quot;;</span><br><span class="line"></span><br><span class="line">#这里是代理IP，优先使用离自己近的</span><br><span class="line">dns_tcp=http;</span><br><span class="line">dns_listen_port=65053;</span><br><span class="line">dns_url=&quot;119.29.29.29&quot;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 资源分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 中国联通 </tag>
            
            <tag> 免流 </tag>
            
            <tag> 互联网卡 </tag>
            
            <tag> TinyProxy </tag>
            
            <tag> 腾讯大王卡 </tag>
            
            <tag> 小天神 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用阿里云日志服务搭建一个屌炸天的访问统计</title>
      <link href="/posts/6e3047e6.html"/>
      <url>/posts/6e3047e6.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->通常我们都是使用js统计的方式(Google,百度分析,腾讯分析等) 这样的话存在一点点问题，JS延迟或者存在广告拦截插件拦截的现象，导致的统计不准确等问题。现在可以通过阿里云提供的日志服务来分析NGINX日志的方法，再加上数据大屏显示，实现更准确的访问统计分析服务。<p>下面就是实现的结果，炫酷吧！</p><p><img src="https://img.jinjun.top/images/usr/uploads/2020/02/1581695726.png" alt="阿里云日志服务.png"></p><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><ul><li>一台安装NGINX的服务器，并开启access_log</li><li>一个套路云(阿里云)的账号</li></ul><h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h2><p>进入<a href="https://homenew.console.aliyun.com/">阿里云控制台</a>，开通<a href="https://sls.console.aliyun.com/">日志分析服务</a>，创建Project，名称自己想。</p><p><strong>PS</strong>：如果使用阿里云服务器，所属的地域需要选择和轻量化&#x2F;ECS相同的地区，其他机器可以选择邻近一点即可。</p><p><img src="https://img.jinjun.top/images/usr/uploads/2020/02/1581696483.png" alt="阿里云日志服务.png"></p><p>创建Logstore和shard。</p><p><img src="https://img.jinjun.top/images/usr/uploads/2020/02/1581697343.png" alt="阿里云日志服务.png"></p><p>创建好了Project和Logstore，现在就添加我们数据源</p><p><img src="https://img.jinjun.top/images/usr/uploads/2020/02/1581697949.png" alt="阿里云日志服务.png"></p><p>进去之后，确认好当前Project，选择刚刚创建好的Logstore，没有也可以创建</p><p><img src="https://img.jinjun.top/images/usr/uploads/2020/02/1581698020.png" alt="阿里云日志服务.png"></p><p>确认无误点击下一步，来到创建机器组</p><p>这里我的服务器是轻量化的学生机，所以ECS识别不到，采用自建机器的方法</p><p><img src="https://img.jinjun.top/images/usr/uploads/2020/02/1581698263.png" alt="阿里云日志服务.png"></p><p>进入服务器运行命令，安装Logtail</p><p><img src="https://img.jinjun.top/images/usr/uploads/2020/02/1581698903.png" alt="阿里云日志服务.png"></p><p>这里安装好了Logtail，并配置好了AliUid，并记下你的内网IP，其他主机商的记下当前ip。回到阿里云继续下一步</p><p><img src="https://img.jinjun.top/images/usr/uploads/2020/02/1581699175.png" alt="阿里云日志服务.png"></p><p>这里名称自定义，IP填刚刚Logtail安装完成显示出来的，注意机器有内网要填写内网ip，否则无法检测到心跳就是无法连接</p><p><img src="https://img.jinjun.top/images/usr/uploads/2020/02/1581699465.png" alt="阿里云日志服务.png"></p><p>这里配置Logtail，日志路径填自己存放日志的目录<code>/WWW/WWWlog</code>是宝塔面板存放网站访问日志的地方，其他可以根据自己目录修改，<code>*.log</code>表示匹配目录下所有的log文件</p><p>NGINX日志配置，如果你没有改动<code>log_format</code>，请填写默认规则</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">log_format combined &#x27;$remote_addr - $remote_user [$time_local] &#x27;</span><br><span class="line">                    &#x27;&quot;$request&quot; $status $body_bytes_sent &#x27;</span><br><span class="line">                    &#x27;&quot;$http_referer&quot; &quot;$http_user_agent&quot;&#x27;;</span><br></pre></td></tr></table></figure><p>可能需要一段小小的日志格式，自己去网站日志选择复制检测即可，下一步，此时机器有日志产生就会成功推送。</p><blockquote><p>这时候系统会自动为你配置一个NGINX仪表盘，点击进入就可以看到屌炸天的统计表</p></blockquote><p><img src="https://img.jinjun.top/images/usr/uploads/2020/02/1581700366.png" alt="阿里云日志服务.png"><br><img src="https://img.jinjun.top/images/usr/uploads/2020/02/1581700484.png" alt="阿里云日志服务.png"></p><h2 id="关于白嫖"><a href="#关于白嫖" class="headerlink" title="关于白嫖"></a>关于白嫖</h2><p>阿里云只提供了一部分免费额度，适合我们这些小博主喜欢折腾，如果你的网站日志较大，请小心超额，也不是很贵。</p><table><thead><tr><th>计费项</th><th>价格</th><th>免费额度</th></tr></thead><tbody><tr><td>读写流量</td><td>0.18 元&#x2F;GB</td><td>500 MB&#x2F;月</td></tr><tr><td>存储空间</td><td>0.0115 元&#x2F;GB*天</td><td>500 MB&#x2F;月</td></tr><tr><td>索引流量</td><td>0.35 元&#x2F;GB</td><td>500 MB&#x2F;月</td></tr><tr><td>活跃 Shard 租用</td><td>0.04 元&#x2F;天</td><td>31 个*天&#x2F;月</td></tr><tr><td>读写次数</td><td>0.12 元&#x2F;百万次</td><td>100万 次&#x2F;月</td></tr><tr><td>外网读取流量</td><td>0.8 元&#x2F;GB</td><td>0</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 建站知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 阿里云 </tag>
            
            <tag> Nginx </tag>
            
            <tag> 访问统计 </tag>
            
            <tag> 日志服务 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>查询Linux本机IP</title>
      <link href="/posts/910495ac.html"/>
      <url>/posts/910495ac.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->最近使用hyper-V安装了好几个测试机，都是基于Linux的环境，如果想远程访问需要本机IP进行网络绑定公网设备，下面来聊聊Linux怎么获取本机IP，大概分下面几种<h2 id="ip-addr"><a href="#ip-addr" class="headerlink" title="ip addr"></a>ip addr</h2><p><img src="https://img.jinjun.top/images/usr/uploads/2020/02/1581601236.png" alt="linux.png"></p><h2 id="hostname"><a href="#hostname" class="headerlink" title="hostname"></a>hostname</h2><p><img src="https://img.jinjun.top/images/usr/uploads/2020/02/1581601346.png" alt="linux.png"></p><h2 id="ifconfig"><a href="#ifconfig" class="headerlink" title="ifconfig"></a>ifconfig</h2><p><img src="https://img.jinjun.top/images/usr/uploads/2020/02/1581602082.png" alt="linux.png"></p><p>提示找不到命令行，执行安装net-tools</p><p>&#96;&#96;&#96;&#96;&#96;&#96;<br>##安装net-tools<br>yum install net-tools<br>##更新系统<br>yum update<br>##查询网络<br>ifconfig</p><p>&#96;&#96;&#96;</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CentOS </tag>
            
            <tag> Linux </tag>
            
            <tag> 虚拟机 </tag>
            
            <tag> IPv6 </tag>
            
            <tag> IPv4 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用阿里云OSS搭建静态网站并开启CDN加速</title>
      <link href="/posts/cad38c4a.html"/>
      <url>/posts/cad38c4a.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->## 前言<p>随着互联网时代快速发展，更加的廉价的成本和更加便捷的扩展的特点，越来越多的服务器&#x2F;VPS 铺天盖地的优惠，成本也是越来越低。但是你想搭建自己的一个个人主页展示，就不必要去上什么云服务器什么的，免费的GitHub、Gitee这些都可以满足你需求，但是追求速度和稳定性，可以考虑使用阿里云OSS，搭建一个静态网站。</p><h2 id="准备条件"><a href="#准备条件" class="headerlink" title="准备条件"></a>准备条件</h2><ul><li>阿里云账号 </li><li>一枚靓靓的域名，如果使用国内存储要备案域名。</li><li>静态网站的网页文件</li></ul><h2 id="干就完了"><a href="#干就完了" class="headerlink" title="干就完了"></a>干就完了</h2><ul><li>创建一个 <code>Bucket</code> 存储桶 ，选择你需要的存放区域，读写权限选择<code>私有</code>或者<code>公开读</code></li></ul><p><img src="https://img.jinjun.top/images/usr/uploads/2020/02/1581318087.png" alt="oss.png"></p><ul><li>上传文件到 <code>Bucket</code>，我这里直接页面上传，如果你的文件比较大或者比较多建议使用OSS的其他工具 <a href="https://help.aliyun.com/document_detail/61872.html?spm=5176.8465980.0.0.4e701450t2eTdm">ossbrowser</a> 进行上传。 这里有个骚操作，居然不支持文件夹上传，就算上传了也不会继承原来的目录，不然就全部丢在&#x2F;目录下，要创建文件夹才上传文件。</li></ul><p><img src="https://img.jinjun.top/images/usr/uploads/2020/02/1581318988.png" alt="oss.png"></p><p> 创建和本地路径一样文件夹，上传对应的文件。有点麻烦</p><p><img src="https://img.jinjun.top/images/usr/uploads/2020/02/1581319118.png" alt="oss.png"></p><ul><li>开启oss的静态网站功能</li></ul><p> 这里设置你的默认首页和404页面</p><p> <img src="https://img.jinjun.top/images/usr/uploads/2020/02/1581319282.png" alt="oss.png"></p><ul><li>绑定域名</li></ul><p> 现在可以通过oss提供的默认域名进行访问，但是想这么长的地址记得住？这时候就需要绑定你自己的域名，OSS提供完整的快速域名绑定和一键开启CDN。</p><p>如果域名在阿里云，就可以自动修改解析记录，但是域名在别人的账号或者不在阿里云，这时候需要自行去修改DNS解析记录。使用国内的存储需要备案域名，海外就不需要验证域名备案信息。</p><p><img src="https://img.jinjun.top/images/usr/uploads/2020/02/1581319799.png" alt="oss.png"></p><p><img src="https://img.jinjun.top/images/usr/uploads/2020/02/1581320090.png" alt="oss.png"></p><p>这里就绑定好域名了，其实阿里云也可以在域名解析页面去进行快速开启阿里云的CDN加速服务。</p><h2 id="添加阿里云CDN加速"><a href="#添加阿里云CDN加速" class="headerlink" title="添加阿里云CDN加速"></a>添加阿里云CDN加速</h2><p>加速域名填你的域名，源站信息选OSS域名 ，域名选你的oss创建的域名。端口设置80或者443，加速区域这个就自己理解。</p><p><img src="https://img.jinjun.top/images/usr/uploads/2020/02/1581320432.png" alt="CDN.png"></p><ul><li>开启私有Bucket回源，静态网站这样只能通过CDN访问</li></ul><p><img src="https://img.jinjun.top/images/usr/uploads/2020/02/1581320831.png" alt="CDN.png"></p><ul><li>这里也是要添加一下CNAME记录，让域名加入CDN<br><img src="https://img.jinjun.top/images/usr/uploads/2020/02/1581321068.png" alt="CDN.png"></li></ul><p>去DNS解析添加相对应的CNAME记录</p><p><img src="https://img.jinjun.top/images/usr/uploads/2020/02/1581321032.png" alt="CDN.png"></p><p>CDN还可以开通HTTPS支持等参数，这里就不做多的解释了。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>网站就基本搭建好了，可以正常访问。也通过阿里云CDN国内加速，速度不用担心嗖嗖的闪电一样。阿里云也提供极高的SLA保证，正常使用，一个月也产生不了几块钱，除非你被cc或者欠费了，这也是题外话了。</p>]]></content>
      
      
      <categories>
          
          <category> 建站知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 阿里云 </tag>
            
            <tag> CDN </tag>
            
            <tag> OSS </tag>
            
            <tag> 静态网站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>给HS8145V光猫打开IPv6功能</title>
      <link href="/posts/8464117d.html"/>
      <url>/posts/8464117d.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->## 敲小黑板<p>iPv6是英文”Internet Protocol Version 6”（互联网协议第6版）的缩写，是互联网工程任务组（IETF）设计的用于替代IPv4的下一代IP协议，其地址数量号称可以为全世界的每一粒沙子编上一个地址。</p><p>由于IPv4最大的问题在于网络地址资源有限，严重制约了互联网的应用和发展。IPv6的使用，不仅能解决网络地址资源数量的问题，而且也解决了多种接入设备连入互联网的障碍?</p><p>这里知识来自：<a href="https://baike.baidu.com/item/IPv6/172297?fr=aladdin">百度百科 - IPv6</a></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>我这个猫是自己从淘宝买的，为什么要自己买呢？给联通坑多了，花了不少冤枉钱，就在上年，刚刚看到冰激凌套有优惠，69一个月送200M宽带。然后就把自己的王卡宽带注销，糊里糊涂就上贼车。</p><p>没几天师傅上门，帮我安装迁线其实就是把光猫的数据重新下发，因为我本来就是联通的线路所以不用重新拉线，还是沿用之前那个100M小光猫，后来测速的时候不达标，师傅说这个光猫不支持千兆的网络，要我重新换，叫200块钱买断。我不干，我去淘宝买了一个hs8145v，回来刷了公版。才是200多带WiFi功能。</p><h2 id="操作过程"><a href="#操作过程" class="headerlink" title="操作过程"></a>操作过程</h2><ul><li>先登录路由器管理页面</li></ul><p><img src="https://img.jinjun.top/images/usr/uploads/2020/02/1581066028.png" alt="HS8145V.png"></p><p>这里是自己差点忘记密码了</p><ul><li>找到WAN设置</li></ul><p><img src="https://img.jinjun.top/images/usr/uploads/2020/02/1581066170.png" alt="HS8145V.png"></p><p><img src="https://img.jinjun.top/images/usr/uploads/2020/02/1581066260.png" alt="HS8145V.png"></p><p>这里我已经调好IPv6的设置了，这里就删除重新做了。</p><ul><li>先把参数截图，删除你的<code>INTERNET</code>设置</li></ul><p><img src="https://img.jinjun.top/images/usr/uploads/2020/02/1581066820.png" alt="HS8145V.png"></p><p>然后重新配置一个<code>INTERNET</code>配置，把IPv4修改成IPv4&#x2F;IPv6</p><p><img src="https://img.jinjun.top/images/usr/uploads/2020/02/1581066859.png" alt="HS8145V.png"></p><p><img src="https://img.jinjun.top/images/usr/uploads/2020/02/1581066966.png" alt="HS8145V.png"></p><p>下面的参数，默认就可以了一定要把宽带账号密码写上去。</p><ul><li>配置IPv6</li></ul><p><img src="https://img.jinjun.top/images/usr/uploads/2020/02/1581067162.png" alt="HS8145V.png"></p><p>开启默认路由打上小勾勾，WAN名称选择刚刚新创建的配置。</p><p><img src="https://img.jinjun.top/images/usr/uploads/2020/02/1581067306.png" alt="HS8145V.png"></p><p>这里已经出来了，IPv6的参数，配置成功。</p><h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><p>IPv6验证测试：<a href="http://www.test-ipv6.com/">IPv6连接测试</a></p><p><img src="https://img.jinjun.top/images/usr/uploads/2020/02/1581067532.png" alt="HS8145V.png"></p>]]></content>
      
      
      <categories>
          
          <category> 资源分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IPv6 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 使用dd命令快速生成大文件</title>
      <link href="/posts/9e648902.html"/>
      <url>/posts/9e648902.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->最近在测试NAS的服务器，需要把NAS的服务器的磁盘迅速填满来实测磁盘的性能，再来实测性能看看是否掉盘。如果我们像测试家里的电脑磁盘那样，向新的磁盘疯狂写入Steam的游戏或者各种大文件。非常麻烦。正好，Linux的dd命令可以帮助到我们。刚刚重温一下Linux命令，总结一下学习笔记：<h3 id="dd参数"><a href="#dd参数" class="headerlink" title="dd参数"></a>dd参数</h3><ul><li><code>if</code>&#x3D;文件名：输入文件名，默认为标准输入。即指定源文件。</li><li><code>of</code>&#x3D;文件名：输出文件名，默认为标准输出。即指定目的文件。</li><li><code>ibs</code>&#x3D;bytes：一次读入bytes个字节，即指定一个块大小为bytes个字节。</li><li><code>obs</code>&#x3D;bytes：一次输出bytes个字节，即指定一个块大小为bytes个字节。</li><li><code>bs</code>&#x3D;bytes：同时设置读入&#x2F;输出的块大小为bytes个字节。</li><li><code>cbs</code>&#x3D;bytes：一次转换bytes个字节，即指定转换缓冲区大小。</li><li><code>skip</code>&#x3D;blocks：从输入文件开头跳过blocks个块后再开始复制。</li><li><code>seek</code>&#x3D;blocks：从输出文件开头跳过blocks个块后再开始复制。</li><li><code>count</code>&#x3D;blocks：仅拷贝blocks个块，块大小等于ibs指定的字节数。</li></ul><p>这里摘致：<a href="https://www.runoob.com/linux/linux-comm-dd.html">菜鸟教程</a></p><h4 id="创建指定文件-写入磁盘"><a href="#创建指定文件-写入磁盘" class="headerlink" title="创建指定文件,写入磁盘"></a>创建指定文件,写入磁盘</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dd if=/dev/zero of=hello.bin bs=100M count=1</span><br></pre></td></tr></table></figure><p>往当前目录写入一个100M的hello.bin文件，这时候文件生成的速度取决于你的磁盘读写性能，写入完成，会显示磁盘的写入速度和文件生成的时间。</p><h4 id="创建指定文件，但是不写入磁盘"><a href="#创建指定文件，但是不写入磁盘" class="headerlink" title="创建指定文件，但是不写入磁盘"></a>创建指定文件，但是不写入磁盘</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dd if=/dev/zero of=hello.bin bs=1M count=0 seek=1024</span><br></pre></td></tr></table></figure><p>上面的命令，创建的文件在文件显示1G，但是不实际占用磁盘占用，因此创建速度很快。<br>seek的作用是跳过文件中的指定大小，这就达到创建大文件，但是不实际写入磁盘。<br>当然，因为不写入硬盘，你想在10T都可以，如果你想在服务器进行下载，还是建议生成一个实际的文件。</p>]]></content>
      
      
      <categories>
          
          <category> 建站知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>友情链接</title>
      <link href="/posts/eb3a5ea6.html"/>
      <url>/posts/eb3a5ea6.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->## 博客信息<ul><li>博客名称：钧言极客</li><li>博客地址：<a href="https://www.jinjun.top/">https://www.jinjun.top/</a></li><li>博客头像：<a href="https://www.jinjun.top/img/avatar.jpg">https://www.jinjun.top/img/avatar.jpg</a></li><li>博客简介：记录生活、爱好学习、不爱折腾</li></ul><h3 id="申请格式"><a href="#申请格式" class="headerlink" title="申请格式"></a>申请格式</h3><ul><li>博客地址：网站名称</li><li>博客地址：http&#x2F;https</li><li>博客头像：图标链接｜没有则默认</li></ul><h3 id="盆友须知"><a href="#盆友须知" class="headerlink" title="盆友须知"></a>盆友须知</h3><ul><li>遵守中国相关法律法规！</li><li>本站交友链的目的，纯属为了交盆友(σ≧?≦)σ</li><li>网站必须本着<strong>社会主义核心价值观</strong>，不涉及违法违纪，内容向上！</li><li>添加后经常互访留言QWQ我也会不定期去康康！</li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux 提示 bash:ls:command not found</title>
      <link href="/posts/777563a0.html"/>
      <url>/posts/777563a0.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->![linux.png][1]<p>安装完GO语言，执行ls命令找不到命令，Sudo都不行，发现原因是环境变量PATH被修改。</p><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>执行以下命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export PATH=/bin:/usr/bin:$PATH</span><br></pre></td></tr></table></figure><p>然后，重新ls</p><p><img src="https://img.jinjun.top/images/usr/uploads/2020/02/1580638637.png" alt="linux.png"></p><p>问题解决！</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CentOS </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在 Linux 搭建 Go语言开发环境</title>
      <link href="/posts/4d633950.html"/>
      <url>/posts/4d633950.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->![Golang.jpg][1]<p>最近在折腾内网穿透，想把家里的迷你机搭建的环境放到外网进行访问。而折腾了<code>frp</code>，<code>ngork</code>，<code>nps</code>等等，还是感觉nps比较强大，而nps需要安装Go环境，通过查询资料后安装完成，记录一下安装的踩坑。</p><h2 id="通过包管理器安装"><a href="#通过包管理器安装" class="headerlink" title="通过包管理器安装"></a>通过包管理器安装</h2><p>Debian&#x2F;Ubuntu</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">apt-get -y install golang</span><br><span class="line">#创建目录并定义GOPATH环境变量指向该目录</span><br><span class="line">mkdir ~/work</span><br><span class="line">echo &#x27;export GOPATH=&quot;$HOME/work&quot;&#x27; &gt;&gt; ~/.bashrc</span><br><span class="line">source ~/.bashrc</span><br></pre></td></tr></table></figure><p>CentOS&#x2F;RHEl</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">yum -y install golang</span><br><span class="line">#创建目录并定义GOPATH环境变量指向该目录。</span><br><span class="line">mkdir ~/work</span><br><span class="line">echo &#x27;export GOPATH=&quot;$HOME/work&quot;&#x27; &gt;&gt; ~/.bashrc</span><br><span class="line">source ~/.bashrc</span><br></pre></td></tr></table></figure><p><strong>PS</strong>：不过发现通过包管理器安装的Golang，不怎么稳定，还是建议去下载安装包进行编译。</p><h2 id="通过二进制包进行搭建"><a href="#通过二进制包进行搭建" class="headerlink" title="通过二进制包进行搭建"></a>通过二进制包进行搭建</h2><h4 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h4><p>下载的时候需要wget ，Go get 拉取源码需要安装Git，解压需要用到Tar</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install wget git tar</span><br></pre></td></tr></table></figure><h4 id="下载二进制文件-GO中文网下载"><a href="#下载二进制文件-GO中文网下载" class="headerlink" title="下载二进制文件  GO中文网下载"></a>下载二进制文件  <a href="https://studygolang.com/dl">GO中文网下载</a></h4><p><img src="https://img.jinjun.top/images/usr/uploads/2020/02/1580624425.png" alt="Golang.png"></p><p>确定你的处理器框架是X64 还是32位的，下载相对应的安装包。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -c https://studygolang.com/dl/golang/go1.13.7.linux-arm64.tar.gz</span><br></pre></td></tr></table></figure><h4 id="解压到指定的目录"><a href="#解压到指定的目录" class="headerlink" title="解压到指定的目录"></a>解压到指定的目录</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -C /opt/ -zxvf go1.13.7.linux-arm64.tar.gz</span><br></pre></td></tr></table></figure><h3 id="添加环境变量"><a href="#添加环境变量" class="headerlink" title="添加环境变量"></a>添加环境变量</h3><p>这里针对单用户设置环境变量（如果是多用户添加到<code>/etc/profile</code>）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.bash_profile</span><br></pre></td></tr></table></figure><p>添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export GOROOT=/opt/go</span><br><span class="line">export PATH=$PATH:$GOROOT/bin</span><br><span class="line">export GOPATH=~/go</span><br></pre></td></tr></table></figure><p><code>GOROOT</code>是告诉Go去哪里找到你的Go安装目录，你安装在哪里就填写哪里<br><code>GOPATH</code>是你的Go的存放可执行文件、源、编译目录<br><code>PATH</code>是Linux调用动态库，一般不用理会</p><h4 id="更新环境变量"><a href="#更新环境变量" class="headerlink" title="更新环境变量"></a>更新环境变量</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source ~/.bash_profile</span><br></pre></td></tr></table></figure><p>查看版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">go version</span><br><span class="line">#输出下面表示安装完成</span><br><span class="line">go version go1.13.6 linux/amd64</span><br></pre></td></tr></table></figure><h2 id="验证安装"><a href="#验证安装" class="headerlink" title="验证安装"></a>验证安装</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">## 创建一个hello目录</span><br><span class="line">mkdir -p ~/go/src/hello</span><br><span class="line"></span><br><span class="line">## 新建一个hello.go</span><br><span class="line">vim ~/go/src/hello/hello.go</span><br><span class="line"></span><br><span class="line">## 添加hello测试</span><br><span class="line">package main</span><br><span class="line">import &quot;fmt&quot;</span><br><span class="line">func main() &#123;</span><br><span class="line">   fmt.Printf(&quot;Hello, World\n&quot;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">## 构建一个hello.go文件</span><br><span class="line">cd ~/go/src/hello</span><br><span class="line">go build</span><br><span class="line"></span><br><span class="line">## 测试运行</span><br><span class="line">./hello</span><br></pre></td></tr></table></figure><p>如果输出<code>Hello，World</code> 表示Go环境验证成功。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Golang </tag>
            
            <tag> Go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux python2升级python3</title>
      <link href="/posts/9691fbfa.html"/>
      <url>/posts/9691fbfa.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->想升级宝塔的6.x环境，但是centos6不兼容宝塔6.x只能停留在5.9版本。发现Python需要的3.以上，想centos6是否能升级宝塔最新版，目前大部分都使用Python3.x，但是有些Linux的环境还是依旧停留在2.x版本，所以要进行升级一下。<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>操作系统：CentOS 6.10</p><p>Python版本：2.6.6</p><h2 id="升级步骤"><a href="#升级步骤" class="headerlink" title="升级步骤"></a>升级步骤</h2><ul><li>编译环境</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum groupinstall &#x27;Development Tools&#x27; </span><br><span class="line">yum install zlib-devel bzip2-devel openssl-devel ncurese-devel </span><br></pre></td></tr></table></figure><ul><li>下载Python版本</li></ul><p>下载地址：<a href="https://www.python.org/ftp/python/">Python</a></p><p><img src="https://img.jinjun.top/images/usr/uploads/2020/02/1580515505.png" alt="Python.png"></p><p>这里有两种方法下载</p><p><img src="https://img.jinjun.top/images/usr/uploads/2020/02/1580515895.png" alt="Python.png"></p><ol><li>先下载文件，再用<code>XFTP</code>上传到目标主机</li><li>使用<code>wget</code>进行下载，这里我使用这个。</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://www.python.org/ftp/python/3.8.1/Python-3.8.1.tgz</span><br></pre></td></tr></table></figure><ul><li>编译Python</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf Python-3.8.1.tgz</span><br><span class="line">cd Python-3.8.1 </span><br><span class="line">./configure --prefix=/usr/local/Python3  </span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p><code>--prefix</code>是指定目录安装，将Python3安装在<code>/usr/local/Python3</code>目录下，如果不指定目录就覆盖到系统的Python目录，看人个人取舍。</p><ul><li>查看Linux的python版本</li></ul><p>输入<code>python</code>后，这里的版本是python2.X</p><p><img src="https://img.jinjun.top/images/usr/uploads/2020/02/1580516500.png" alt="Python.png"></p><ul><li>建立指向新python3和pip3的软连接</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ln -s /usr/local/Python3/bin/python3 /usr/bin/python </span><br><span class="line">ln -s /usr/local/Python3/bin/pip3 /usr/bin/pip </span><br></pre></td></tr></table></figure><p><img src="https://img.jinjun.top/images/usr/uploads/2020/02/1580517460.png" alt="Python.png"></p><p>提示 <code>ln: creating symbolic link /usr/bin/python: File exists</code></p><p>需要把原来的<code>/usr/bin/python</code> 备份一下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv /usr/bin/python /usr/bin/python.bak</span><br></pre></td></tr></table></figure><p>如果想恢复原来的python2指向也可以执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp /usr/bin/python.bak /usr/bin/python</span><br></pre></td></tr></table></figure><ul><li>重新查询python版本</li></ul><p><img src="https://img.jinjun.top/images/usr/uploads/2020/02/1580518296.png" alt="Python.png"></p><p>这里已经完成Python的版本升级，大功告成，奥利给！！</p><h2 id="修复yum配置"><a href="#修复yum配置" class="headerlink" title="修复yum配置"></a>修复yum配置</h2><p><img src="https://img.jinjun.top/images/usr/uploads/2020/02/1580518540.png" alt="Python.png"></p><p>这里出现了yum配置问题，因为执行yum需要Python2版本，所以我们还要修改yum的配置。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/bin/yum</span><br></pre></td></tr></table></figure><p><img src="https://img.jinjun.top/images/usr/uploads/2020/02/1580518891.png" alt="Python.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/libexec/urlgrabber-ext-down</span><br></pre></td></tr></table></figure><p>yum就可以愉快的跑起来了。</p><p>把<code>#! /usr/bin/python</code>修改为<code>#! /usr/bin/python2</code>你没有看错，就是这么简单，保存即可。</p><p>这样，Python3和Python2就可以同时存在了。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 宝塔面板 </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用国内外 JavaScript 库 CDN 加速服务</title>
      <link href="/posts/e0b8631c.html"/>
      <url>/posts/e0b8631c.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->![javascript.png][1]<p>今天发现Bootcss的CDN加速服务又挂了，导致了页面异常。只能寻找JavaScript库的CDN的加速解决方案，不想JS放在本地，想白嫖。国内可以选择的有七牛、又拍、75CDN….等等这些CDN的共享库。速度给力，也可以解放本地调用带来的延迟。</p><p>此外，还有JsDelivr和cdnjs这两家海外的服务提供商，托管JavaScript、CSS、fonts等所有类型文件的CDN加速服务。最骚的是JsDelivr居然支持GitHub加速，还有国内的节点加速，实在是可以拿来搞事情。</p><p>下面记录一下目前比较主流的国内外公共库CDN</p><h2 id="Staticfile-CDN"><a href="#Staticfile-CDN" class="headerlink" title="Staticfile CDN"></a><a href="http://staticfile.org/">Staticfile CDN</a></h2><blockquote><p>七牛云存储提供，我们的目标是提供这样一个仓库，让它尽可能全面收录优秀的开源库，并免费为之提供 CDN 加速服务，使之有更好的访问速度和稳定的环境</p></blockquote><h2 id="又拍云JS加速库"><a href="#又拍云JS加速库" class="headerlink" title="又拍云JS加速库"></a><a href="http://jscdn.upai.com/">又拍云JS加速库</a></h2><blockquote><p>又拍云为您托管常用的JavaScript库，您可以在自己的网页上直接通过script标记引用这些资源。这样做不仅可以为您节省流量，还能通过我们的CDN加速，获得更快的访问速度。</p></blockquote><h2 id="BootCDN"><a href="#BootCDN" class="headerlink" title="BootCDN"></a><a href="http://www.bootcdn.cn/">BootCDN</a></h2><blockquote><p>Bootstrap 中文网开源项目免费 CDN 加速服务 - 我们致力于为 Bootstrap、jQuery、Angular、Vue.js 一样优秀的开源项目提供稳定、快速、免费的 CDN 加速服务。BootCDN 是运营时间最长、用户量最大、最早同时支持 HTTPS（SSL）和 HTTP&#x2F;2.0 协议的中立免费 CDN 。</p></blockquote><h2 id="75CDN"><a href="#75CDN" class="headerlink" title="75CDN"></a><a href="https://cdn.baomitu.com/">75CDN</a></h2><blockquote><p>360 前端静态资源库是由奇舞团支持并维护的开源项目免费 CDN 服务，支持 HTTPS 和 HTTP&#x2F;2，囊括上千个前端资源库和 Google 字体库。</p></blockquote><h2 id="烧饼大佬的公益公共库"><a href="#烧饼大佬的公益公共库" class="headerlink" title="烧饼大佬的公益公共库"></a><a href="https://css.loli.net/">烧饼大佬的公益公共库</a></h2><blockquote><p>常用前端公共库 &amp; 和谐使用 Google 公共库、字体库的方法</p></blockquote><h2 id="字节跳动静态资源公共库"><a href="#字节跳动静态资源公共库" class="headerlink" title="字节跳动静态资源公共库"></a><a href="https://cdn.bytedance.com/">字节跳动静态资源公共库</a></h2><blockquote><p>字节跳动静态资源库支持多协议、资源动态拼接、快速检索及资源的动态更新,安全、稳定、实时。</p></blockquote><h2 id="CDNJS"><a href="#CDNJS" class="headerlink" title="CDNJS"></a><a href="http://cdnjs.com/">CDNJS</a></h2><blockquote><p>The free and open source CDN for web related libraries to speed up your website!</p></blockquote><h2 id="jsDelivr"><a href="#jsDelivr" class="headerlink" title="jsDelivr"></a><a href="http://www.jsdelivr.com/">jsDelivr</a></h2><blockquote><p>jsDelivr is a public open-source CDN (Content Delivery Network) where anyone can submit a project to be hosted and delivered by our network.</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 建站知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript </tag>
            
            <tag> CDN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hyper-V虚拟机无法启动提示Start Pxe over IPv4解决方法</title>
      <link href="/posts/a445eee6.html"/>
      <url>/posts/a445eee6.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->最近Win10安装了`Hyper-V`后，创建了虚拟机。启动的时候报错“`Start Pxe over Ipv4`”的错误代码。一直进入不了系统，也是第一次使用微软的`Hyper-V`之前一直使用的是`Vmware`。怎么回事呢，经过一番度娘查询，发现是设置不当造成的。<h2 id="错误代码"><a href="#错误代码" class="headerlink" title="错误代码"></a>错误代码</h2><p><img src="https://img.jinjun.top/images/usr/uploads/2020/01/1579188736.png" alt="Hyper-v.png"></p><p>一直卡在这个画面一分钟左右，会弹出这个页面 使用了微软的Hyper-V的第二代</p><p><img src="https://img.jinjun.top/images/usr/uploads/2020/01/1579189506.png" alt="Hyper-v.png"></p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p><img src="https://img.jinjun.top/images/usr/uploads/2020/01/1579188955.png" alt="Hyper-v.png"></p><p><img src="https://img.jinjun.top/images/usr/uploads/2020/01/1579189018.png" alt="Hyper-v.png"></p><p>把<code>启用安全启动</code>给取消勾选状态，要在虚拟机关机的情况下才能进行操作。不然无法修改任何信息。修改完成后点击保存或者应用设置。然后重新启动虚拟机，这时候就能进入正常的运行状态。</p>]]></content>
      
      
      <categories>
          
          <category> 虚拟化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 虚拟机 </tag>
            
            <tag> VMware </tag>
            
            <tag> Hyper-V </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一年一度大事 支付宝扫福集五福分红包</title>
      <link href="/posts/e3f01634.html"/>
      <url>/posts/e3f01634.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->![五福.png][1]<p>又到一年一度支付宝集五福活动，可谓是一年一度的大事情。支付宝无疑是给年味添了点小乐趣，扫福自然也成为了别人口中的口头禅，今年你集齐五福没有？五福也不必要花钱购买，当然有钱的例外。</p><blockquote><p>每日五福攻略</p></blockquote><p>1、AR扫普通福2张</p><p>2、AR扫专享福4张</p><p>3、组建家庭签到1张</p><p>4、蚂蚁森林浇水1张</p><p>5、支付宝运动1张(1月17日开启)</p><p>6、蚂蚁庄园1张(1月19日开启)</p><p>———</p><p>全家福获取：所有可以集福卡的地方，均有机会获得全家福</p><p>全家福功能：帮还全家花呗，最高金额48888元</p><p>———</p><p>沾福气获取：所有可以集福卡的地方，均有机会获得沾福气</p><p>沾福气功能：可以复制朋友的福卡，包括敬业福和全家福</p>]]></content>
      
      
      <categories>
          
          <category> 资源分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 支付宝 </tag>
            
            <tag> 集五福 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>windows开启和使用Hyper-V安装Linux</title>
      <link href="/posts/a3e90b19.html"/>
      <url>/posts/a3e90b19.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->Hyper-V是微软自带的虚拟化平台，相对于VMware，当然是Vmware方便，更加趋向于真机。<h2 id="安装Hyper-V"><a href="#安装Hyper-V" class="headerlink" title="安装Hyper-V"></a>安装Hyper-V</h2><p>先打开控制面板 - 程序功能</p><p><img src="https://img.jinjun.top/images/usr/uploads/2020/01/1577888316.png" alt="HYper-v.png"></p><p>启用与关闭Windows功能</p><p><img src="https://img.jinjun.top/images/usr/uploads/2020/01/1577888192.png" alt="HYper-v.png"></p><p>勾选Hyper-V功能</p><p><img src="https://img.jinjun.top/images/usr/uploads/2020/01/1577888496.png" alt="HYper-v.png"></p><p>安装完成，重启电脑。</p><p><img src="https://img.jinjun.top/images/usr/uploads/2020/01/1577889157.png" alt="HYper-v.png"></p><h2 id="使用Hyper-V"><a href="#使用Hyper-V" class="headerlink" title="使用Hyper-V"></a>使用Hyper-V</h2><ul><li>创建虚拟机</li></ul><p><img src="https://img.jinjun.top/images/usr/uploads/2020/01/1577889448.png" alt="HYper-v.png"></p><ul><li>点击下一步</li></ul><p><img src="https://img.jinjun.top/images/usr/uploads/2020/01/1577889559.png" alt="Hyper-v.png"></p><ul><li>名称与虚拟机储存位置，根据实际情况分配</li></ul><p><img src="https://img.jinjun.top/images/usr/uploads/2020/01/1577889787.png" alt="Hyper-v.png"></p><ul><li>选择代数，选择2代支持更新的版本 <a href="https://docs.microsoft.com/zh-cn/windows-server/virtualization/hyper-v/plan/Should-I-create-a-generation-1-or-2-virtual-machine-in-Hyper-V?redirectedfrom=MSDN#debian-guest-operating-system-support">微软VM代数介绍</a></li></ul><p><img src="https://img.jinjun.top/images/usr/uploads/2020/01/1577890265.png" alt="Hyper-v.png"></p><ul><li>分配虚拟机的内存 按照你需求自行分配</li></ul><p><img src="https://img.jinjun.top/images/usr/uploads/2020/01/1577890349.png" alt="Hyper-v.png"></p><ul><li>网卡选择一个，否则虚拟机无法连接网络</li></ul><p><img src="https://img.jinjun.top/images/usr/uploads/2020/01/1577890499.png" alt="Hyper-v.png"></p><ul><li>根据实际的磁盘，选择一个合适的位置</li></ul><p><img src="https://img.jinjun.top/images/usr/uploads/2020/01/1577890580.png" alt="Hyper-v.png"></p><ul><li>选择以后安装操作系统</li></ul><p><img src="https://img.jinjun.top/images/usr/uploads/2020/01/1577890667.png" alt="Hyper-v.png"></p><ul><li>点击完成</li></ul><p><img src="https://img.jinjun.top/images/usr/uploads/2020/01/1577890721.png" alt="Hyper-v.png"></p><ul><li>点击刚刚新创建的虚拟机，点击设置</li></ul><p><img src="https://img.jinjun.top/images/usr/uploads/2020/01/1577890920.png" alt="Hyper-v.png"></p><ul><li>SCSI添加一个DVD驱动器 用于加载IOS安装系统</li></ul><p><img src="https://img.jinjun.top/images/usr/uploads/2020/01/1577891224.png" alt="Hyper-v.png"></p><ul><li>连接虚拟机</li></ul><p><img src="https://img.jinjun.top/images/usr/uploads/2020/01/1577890964.png" alt="Hyper-v.png"></p><ul><li>媒体》DVD驱动器》插入磁盘  选择ISO镜像</li></ul><p><img src="https://img.jinjun.top/images/usr/uploads/2020/01/1577894148.png" alt="Hyper-v.png"></p><ul><li>选择镜像文件</li></ul><p><img src="https://img.jinjun.top/images/usr/uploads/2020/01/1577894215.png" alt="Hyper-v.png"></p><ul><li>准备工作完成，点击启动 开启装系统</li></ul><p><img src="https://img.jinjun.top/images/usr/uploads/2020/01/1577894882.png" alt="Hyper-v.png"></p>]]></content>
      
      
      <categories>
          
          <category> 虚拟化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Hyper-V </tag>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2019 再见 ，2020 不期而遇！</title>
      <link href="/posts/e9842b4f.html"/>
      <url>/posts/e9842b4f.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->2019年的小脚步也匆匆远走，2020与你不期而遇。虽然朋友圈到处晒着各种跨年的视频和祝福，但是和自己好像没有什么关系！<p>不禁感叹时间过得真快，一眨眼就365天从自己手中悄悄的溜走了。</p><p>想到上一年，总是感慨  感慨 ，自己立的flag好像也没有实现几个。</p><p>得到了很多，也失去了很多！自己也变的更“懒”了</p><p>无论过去有多少遗憾和感慨</p><p>都挥手和2019 的好好告个别</p><p>新的一年 与更好的自己和世界说一句</p><p>2020 你好！做更好的自己，加油！向未来大路进发</p><p>我只想说经历了，成长了，现在开始，做自己喜欢的事~~努力挣钱！！！</p><p>善待时光，善待自己！</p><p>有诗有酒有知己，有花有茶有欢笑！</p><center> ![timg.gif][1] </center>]]></content>
      
      
      <categories>
          
          <category> 钧言钧语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 点滴 </tag>
            
            <tag> 2020 </tag>
            
            <tag> 跨年 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux(Deepin)中安装rdesktop 远程Windows</title>
      <link href="/posts/d015f3c9.html"/>
      <url>/posts/d015f3c9.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->最近在正式加入`deepin`这个大家庭，有一台`Windows`的服务器要远程查看文件。这里使用`Rdesktop`来解决这个问题，通过使用 rdesktop 所实现的远程桌面协议（RDP），你可以在 Unix/Linux 系统中呈现 Windows 桌面，并进行相应的操作。当然还可以选择其他软件 Anydesk 、Teamviewer ....这些有些还要安装被控端才能连接，简直浪费时间何必不简单粗暴呢！<p>扯太多了，咳咳，进入正题</p><h2 id="安装rdesktop"><a href="#安装rdesktop" class="headerlink" title="安装rdesktop"></a>安装rdesktop</h2><p>Debian&#x2F;Ubuntu&#x2F;Deepin</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install rdesktop</span><br></pre></td></tr></table></figure><p>Red Hat&#x2F;ContOS</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install rdesktop</span><br></pre></td></tr></table></figure><p>在使用deepin安装的时候，发现有些依赖包没有安装。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt --fix-broken install</span><br></pre></td></tr></table></figure><h2 id="使用rdesktop"><a href="#使用rdesktop" class="headerlink" title="使用rdesktop"></a>使用rdesktop</h2><p>直接在终端运行命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rdesktop?-u?username?-p?password??IP??-r?sound:on/off?-g?1024*768</span><br></pre></td></tr></table></figure><blockquote><p>说明</p></blockquote><ol><li>username 和 password 分别是目标电脑的帐号和密码；</li><li>IP 为目标电脑的 IP 地址（可能需要先连接 VPN）；</li><li>sound：on 表示传送目标电脑的声音，off 则为关闭；</li><li>-g 后接想要显示的分辨率，使用?-g workarea 可自适应铺满当前 linux 窗口大小</li><li>使用 -f 参数进入全屏模式，中途可使用Ctrl+Alt+Enter组合键退出全屏（不知道的就郁闷了）;</li><li>-r?disk:share_name&#x3D;&#x2F;local-disk?将本地磁盘映射到远程电脑，其中share_name为显示名称，可自定义，local-disk 表示本地 linux 的一个目录，比如 &#x2F;data。</li><li>-r clipboard:PRIMARYCLIPBOARD 允许在远程主机和本机之间共享剪切板，就是可以复制粘贴。</li></ol><p>以上这些参数，除了IP、用户名 必须要输入，其他参数都可以省略。<br>关于 <code>rdesktop</code> 更为详细的用法，可以查询 <code>man rdesktop</code>。</p><p><img src="https://img.jinjun.top/images/usr/uploads/2019/12/1577377864.png" alt="rdesktop.png"></p><h2 id="快速连接你的主机"><a href="#快速连接你的主机" class="headerlink" title="快速连接你的主机"></a>快速连接你的主机</h2><p>在桌面写一个shell脚本，并赋予权限。双击执行即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">rdesktop?-u?username?-p?password??IP??-r?sound:on/off?-g?1024*768</span><br><span class="line">exit</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Deepin </tag>
            
            <tag> Linux </tag>
            
            <tag> Windows </tag>
            
            <tag> rdesktop </tag>
            
            <tag> 远程管理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>卸载阿里云、腾讯云服务器系统Aget监控</title>
      <link href="/posts/1ab44585.html"/>
      <url>/posts/1ab44585.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->大家都知道，阿里云、腾讯云的服务器都默认勾选了监控服务（AliYunDun/阿里云盾/安骑士/安全云镜），这些Aget探针，会无时无刻记录你的cpu、网络、磁盘IO等等数据，当然了对于大部分朋友来说安装就安装反正占用也低，因为在一定的程度上可以给服务器安全起到安全保护和报警等作用。不想被扫描监控，当然就是消灭它啦！！！<p>卸载这些服务后，在服务器后台管理就显示不了网络和内存占用等等这些信息。对于运维来说就很不友好了，这就要看各位Dalao的取舍了。</p><h2 id="阿里云安骑士卸载"><a href="#阿里云安骑士卸载" class="headerlink" title="阿里云安骑士卸载"></a>阿里云安骑士卸载</h2><p>先使用SSH连接你的阿里云服务器，在终端输入以下命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wget http://update.aegis.aliyun.com/download/uninstall.sh</span><br><span class="line">chmod +x uninstall.sh</span><br><span class="line">./uninstall.sh</span><br><span class="line">wget http://update.aegis.aliyun.com/download/quartz_uninstall.sh</span><br><span class="line">chmod +x quartz_uninstall.sh</span><br><span class="line">./quartz_uninstall.sh</span><br></pre></td></tr></table></figure><p>卸载完成，删除安骑士的残留文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pkill aliyun-service</span><br><span class="line">rm -fr /etc/init.d/agentwatch /usr/sbin/aliyun-service</span><br><span class="line">rm -rf /usr/local/aegis*</span><br></pre></td></tr></table></figure><p>屏蔽云盾的IP连接</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">iptables -I INPUT -s 140.205.201.0/28 -j DROP</span><br><span class="line">iptables -I INPUT -s 140.205.201.16/29 -j DROP</span><br><span class="line">iptables -I INPUT -s 140.205.201.32/28 -j DROP</span><br><span class="line">iptables -I INPUT -s 140.205.225.192/29 -j DROP</span><br><span class="line">iptables -I INPUT -s 140.205.225.200/30 -j DROP</span><br><span class="line">iptables -I INPUT -s 140.205.225.184/29 -j DROP</span><br><span class="line">iptables -I INPUT -s 140.205.225.183/32 -j DROP</span><br><span class="line">iptables -I INPUT -s 140.205.225.206/32 -j DROP</span><br><span class="line">iptables -I INPUT -s 140.205.225.205/32 -j DROP</span><br><span class="line">iptables -I INPUT -s 140.205.225.195/32 -j DROP</span><br><span class="line">iptables -I INPUT -s 140.205.225.204/32 -j DROP</span><br></pre></td></tr></table></figure><h2 id="腾讯云"><a href="#腾讯云" class="headerlink" title="腾讯云"></a>腾讯云</h2><p>腾讯云就比较人性化了，在新构建服务器时候可以选择不安装安全云镜和安全监控，它就不会往你服务器写入Aget。</p><p>如果安装了这些监控软件，可以利用以下命令进行卸载。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/qcloud/stargate/admin/uninstall.sh</span><br><span class="line">/usr/local/qcloud/YunJing/uninst.sh</span><br><span class="line">/usr/local/qcloud/monitor/barad/admin/uninstall.sh</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 建站知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 阿里云 </tag>
            
            <tag> 腾讯云 </tag>
            
            <tag> 监控系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装启用腾讯内部TCPA单边拥塞算法 - 内核加速提高体验</title>
      <link href="/posts/3b16cab8.html"/>
      <url>/posts/3b16cab8.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->> 介绍<p>腾讯TEG操作系统组, 2010年成立，专业的内核团队,维护研发腾讯内部linux操作系统linux,保证百万级server高效稳定运行， 为腾讯业务提供有力支撑。</p><p>腾讯TCPA，由腾讯TEG操作系统组研发，基于RHEL7.4源码，定制化的TCPA。</p><p>优势：TCPA启用后，小文件比BBR能提升40%以上，大文件比BBR能提升5%~10%。TCPA的优势在于小文件的性能提升。程序默认仅加速80、443、8080端口，更适用于建站场景，可自行增加端口。</p><p><img src="https://img.jinjun.top/images/usr/uploads/2019/12/1576161505.png" alt="TCPA.png"></p><h2 id="腾讯TCPA安装"><a href="#腾讯TCPA安装" class="headerlink" title="腾讯TCPA安装"></a>腾讯TCPA安装</h2><p>系统要求：CentOS７以上<br>Boot分区不小于500M（太小可能导致安装内核失败）</p><h3 id="安装必备依赖"><a href="#安装必备依赖" class="headerlink" title="安装必备依赖"></a>安装必备依赖</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install net-tools</span><br></pre></td></tr></table></figure><h3 id="更换系统内核"><a href="#更换系统内核" class="headerlink" title="更换系统内核"></a>更换系统内核</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget http://pan.8dns.cn/liunx/tcpa/kernel-3.10.0-693.5.2.tcpa06.tl2.x86_64.rpm</span><br><span class="line">rpm -ivh kernel-3.10.0-693.5.2.tcpa06.tl2.x86_64.rpm --force</span><br></pre></td></tr></table></figure><h3 id="重启系统"><a href="#重启系统" class="headerlink" title="重启系统"></a>重启系统</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure><p>重启后，重新连接你的服务器，在SSH 查看内核<code>uname -a</code></p><p><img src="https://img.jinjun.top/images/usr/uploads/2019/12/1576163531.png" alt="TCPA.png"></p><h2 id="安装TCPA安装包"><a href="#安装TCPA安装包" class="headerlink" title="安装TCPA安装包"></a>安装TCPA安装包</h2><h3 id="下载TCPA"><a href="#下载TCPA" class="headerlink" title="下载TCPA"></a>下载TCPA</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://pan.8dns.cn/liunx/tcpa/tcpa_packets_180619_1151.tar.gz</span><br></pre></td></tr></table></figure><h3 id="解压安装"><a href="#解压安装" class="headerlink" title="解压安装"></a>解压安装</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tar xf tcpa_packets_180619_1151.tar.gz</span><br><span class="line">cd tcpa_packets</span><br><span class="line">sh install.sh</span><br></pre></td></tr></table></figure><h3 id="启用TCPA"><a href="#启用TCPA" class="headerlink" title="启用TCPA"></a>启用TCPA</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/storage/tcpav2</span><br><span class="line">sh start.sh</span><br></pre></td></tr></table></figure><p>这里就安装完成了，如果不知道是否安装成功可以运行<code>lsmod|grep tcpa</code></p><p><img src="https://img.jinjun.top/images/usr/uploads/2019/12/1576164153.png" alt="TCPA.png"></p><p>这样就安装完成</p><h2 id="添加加速端口"><a href="#添加加速端口" class="headerlink" title="添加加速端口"></a>添加加速端口</h2><p>腾讯TCPA默认对80、443、8080加速，这3个端口，如果用于建站，就不需要添加新的端口。如要指定端口加速，往下看</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/local/storage/tcpav2/start.sh</span><br></pre></td></tr></table></figure><p><img src="https://img.jinjun.top/images/usr/uploads/2019/12/1576164628.png" alt="TCPA.png"></p><h2 id="卸载TCPA"><a href="#卸载TCPA" class="headerlink" title="卸载TCPA"></a>卸载TCPA</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/storage/tcpav2</span><br><span class="line">sh uninstall.sh</span><br></pre></td></tr></table></figure><h2 id="一键脚本"><a href="#一键脚本" class="headerlink" title="一键脚本"></a>一键脚本</h2><p>方便快捷 直接输入命令 回车即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://pan.8dns.cn/shell/tcpa.sh &amp;&amp; bash tcpa.sh</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> TCPA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Typecho 博客文章/页面内添加时间轴记录</title>
      <link href="/posts/29b4101b.html"/>
      <url>/posts/29b4101b.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->> 看到很多Wordress的博主都有时间轴模块来记录自己的建站大事记，很漂亮。其实typecho也可以添加代码来实现。<p><img src="https://img.jinjun.top/images/usr/uploads/2019/12/1575813696.png" alt="typecho.png"></p><p>像这个效果，这里的我是把css代码写在了<code>style.css</code>，比如像handsome主题，可以在后台添加自定义css。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 站点动态时间轴 */</span></span><br><span class="line"><span class="selector-id">#teamnewslist</span> <span class="selector-tag">ol</span>&#123;<span class="attribute">list-style</span>:none;<span class="attribute">margin-left</span>: <span class="number">36px</span>;<span class="attribute">padding-left</span>: <span class="number">14px</span>;<span class="attribute">border-left</span>: <span class="number">2px</span> solid </span><br><span class="line"><span class="number">#eee</span>;<span class="attribute">font-size</span>: <span class="number">18px</span>;<span class="attribute">color</span>: <span class="number">#666</span>;&#125;</span><br><span class="line"><span class="selector-id">#teamnewslist</span> <span class="selector-tag">b</span>&#123;<span class="attribute">font-size</span>: <span class="number">12px</span>;<span class="attribute">font-weight</span>: normal;<span class="attribute">color</span>: <span class="number">#999</span>;<span class="attribute">display</span>: block;<span class="attribute">position</span>: relative;<span class="attribute">margin-bottom</span>:<span class="number">5px</span>;&#125;</span><br><span class="line"><span class="selector-id">#teamnewslist</span> <span class="selector-tag">b</span><span class="selector-pseudo">::after</span>&#123;<span class="attribute">position</span>: absolute;<span class="attribute">top</span>: <span class="number">6px</span>;<span class="attribute">left</span>: -<span class="number">22px</span>;<span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;<span class="attribute">width</span>: <span class="number">14px</span>;<span class="attribute">height</span>: <span class="number">14px</span>;<span class="attribute">border-radius</span>: <span class="number">50%</span>;<span class="attribute">background-color</span>: <span class="number">#fff</span>;<span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#ccc</span>;<span class="attribute">box-shadow</span>: <span class="number">2px</span> <span class="number">2px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">1</span>), -<span class="number">2px</span> -<span class="number">2px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">1</span>)&#125;</span><br><span class="line"><span class="selector-id">#teamnewslist</span> <span class="selector-tag">li</span>&#123;<span class="attribute">list-style</span>:none;<span class="attribute">margin</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">20px</span> <span class="number">0</span>;<span class="attribute">line-height</span>: <span class="number">100%</span>;&#125;</span><br><span class="line"><span class="selector-id">#teamnewslist</span> <span class="selector-tag">li</span><span class="selector-pseudo">:hover</span>&#123;<span class="attribute">color</span>: <span class="number">#555</span>;&#125;</span><br><span class="line"><span class="selector-id">#teamnewslist</span> <span class="selector-tag">li</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">b</span><span class="selector-pseudo">::after</span>&#123;<span class="attribute">border-color</span>: <span class="number">#C01E22</span>;&#125;</span><br><span class="line"><span class="selector-id">#teamnewslist</span> <span class="selector-tag">li</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">b</span>&#123;<span class="attribute">color</span>: <span class="number">#C01E22</span>;&#125;</span><br></pre></td></tr></table></figure><p>把以下代码添加到typecho文章或者添加到页面，但是typecho的MD编辑器的原因。为了防止被MarkDown解析引擎解析建议加上<code>!!!</code>html特权模式才能不被网页前端解析。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;h4&gt;</span><br><span class="line">&lt;span style=&quot;font-size: 20px; color: #99ccff;&quot;&gt;</span><br><span class="line">    &lt;a style=&quot;color: #99ccff;text-decoration: none;&quot;&gt;2019年&lt;/a&gt;</span><br><span class="line">&lt;/span&gt;</span><br><span class="line">&lt;/h4&gt;</span><br><span class="line">&lt;div id=&quot;teamnewslist&quot;&gt;</span><br><span class="line">    &lt;ol&gt;</span><br><span class="line">&lt;li&gt;&lt;b&gt;2019年10月&lt;/b&gt;遭受大规模攻击，导致进入小黑屋三天。收录被K&lt;/li&gt;</span><br><span class="line">&lt;li&gt;&lt;b&gt;2019年7月&lt;/b&gt;修复DUX模板大部分BUG&lt;/li&gt;</span><br><span class="line">&lt;li&gt;&lt;b&gt;2019年06月&lt;/b&gt;完成jinjun.top的域名备案&lt;/li&gt;</span><br><span class="line">&lt;li&gt;&lt;b&gt;2019年03月&lt;/b&gt;腾讯云服务器过期，启用jinjun.top域名&lt;/li&gt;</span><br><span class="line">&lt;li&gt;&lt;b&gt;2019年01月&lt;/b&gt;完成对jinjun.top域名的收购&lt;/li&gt;</span><br><span class="line">&lt;/ol&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>如果想添加一个大事记记录，可以在页面一条条添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;li&gt;&lt;b&gt;2019年01月&lt;/b&gt;你的大事记&lt;/li&gt;</span><br></pre></td></tr></table></figure><p>添加年份记录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;h4&gt;</span><br><span class="line">&lt;span style=&quot;font-size: 20px; color: #99ccff;&quot;&gt;</span><br><span class="line">    &lt;a style=&quot;color: #99ccff;text-decoration: none;&quot;&gt;2019年&lt;/a&gt;</span><br><span class="line">&lt;/span&gt;</span><br><span class="line">&lt;/h4&gt;</span><br></pre></td></tr></table></figure><p>一定要在<code>&lt;div id=&quot;teamnewslist&quot;&gt;</code>标签前面。</p><h4 id="文章来自：如何为我们的博客网站添加时光轴记录"><a href="#文章来自：如何为我们的博客网站添加时光轴记录" class="headerlink" title="文章来自：如何为我们的博客网站添加时光轴记录"></a>文章来自：<a href="https://boke112.com/2964.html">如何为我们的博客网站添加时光轴记录</a></h4>]]></content>
      
      
      <categories>
          
          <category> Typecho </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typecho </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安卓手机装 Linux 系统  让玩机变成无限可能</title>
      <link href="/posts/afb8c4ef.html"/>
      <url>/posts/afb8c4ef.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->> 为什么有本文<p>现在手机更新换代简直快的不要不要的，家里闲置下来的旧手机难道只能换剪子换盆么？No！其实老旧的安卓手机也能焕发新春，接下来就跟钧言博客一起来给手机装个 Linux 系统，体验一把 Android 设备的高逼格玩法~</p><p>可以搭建学习环境 PHP Mysql Python等等等等，你能想到的  liunx都可以帮你完成</p><blockquote><p>准备工作</p></blockquote><ul><li>一台旧手机，我使用的是360 N5  配置是6+32</li><li>需要手机获得 <code>ROOT</code> 权限，否则不能正常使用  </li><li>手机剩余内存大于 <code>512M</code> 即可 </li><li>建议在 <code>WiFi</code>环境下在线安装系统</li></ul><blockquote><p>下载软件</p></blockquote><p>Linux系统支撑软件：<a href="http://github.com/meefik/linuxdeploy/releases">http://github.com/meefik/linuxdeploy/releases</a></p><p>Linux deploy支撑软件：<a href="http://github.com/meefik/busybox/releases">http://github.com/meefik/busybox/releases</a></p><p>JuiceSSH：<a href="http://juicessh.com/changelog#v2.1.4">http://juicessh.com/changelog#v2.1.4</a></p><blockquote><p>完成软件下载·安装之后，先打开第一个软件</p></blockquote><p>##BusyBox</p><p>安装完毕后，运行Busy Box，看到如下界面：</p><p>这个是我已经完成了安装，刚刚打开不好意思没有截到 </p><p><img src="https://img.jinjun.top/images/usr/uploads/2018/11/2734792614.jpg" alt="BusyBox.jpg"></p><p>点击install，等待程序自行运行，在界面中输出## END后退出程序。未安装前是不会有Busy Box的版本信息的，无须在意到时候界面中少了内容。</p><p>P S：Busy Box默认界面语言是英文，可以改成中文，点击右上角部分，在弹出的菜单中选择Settings，接着进入设置界面，找到Language项，点击后选择简体中文，退出设置界面后界面语言就改为中文了。</p><p><img src="https://img.jinjun.top/images/usr/uploads/2018/11/2256580087.jpg" alt="BusyBox设置中文.jpg"></p><p>在设置界面中还可以设置其他参数，看个人喜好，但注意不要修改安装路径，如非要修改，则需要记住修改后的路径，后续步骤需要使用。</p><blockquote><p>BusyBox就安装介绍到此为止  下一步配置Liux Deploy</p></blockquote><p>##Linux deploy</p><p>运行完毕<code>Busy Box</code>的部分后，运行Linux deploy。</p><p><img src="https://img.jinjun.top/images/usr/uploads/2018/11/2558519724.jpg" alt="LinuxDeploy.jpg"></p><p>点击左图左上角部分，选择设置</p><p><img src="https://img.jinjun.top/images/usr/uploads/2018/11/376779088.jpg" alt="设置.jpg"></p><p>在设置界面中找到<code>PATH</code>变量，赋予其值 <code>/system/xbin</code><br>注意这是<code>Busy Box</code>的安装路径，如果前面在<code>Busy Box</code>有修改默认安装路径的话，就要填写修改后的路径。</p><p>设置界面其余部分看个人喜好设置，建议开启锁定Wifi功能。<br>接着退回主界面，点击左图右下角部分。</p><p><img src="https://img.jinjun.top/images/usr/uploads/2018/11/1401444805.jpg" alt="Liunx设置.jpg"></p><ul><li><p>这里我选择的是<code>Arch Liunx</code>系统 </p></li><li><p>这里要注意一下 尽量换成国内的源 因为下载会快很多  <a href="http://www.archlinux.org/mirrors/status/">官方源检查</a></p></li></ul><p>##其他的系统国内源备份</p><ul><li><p><a href="http://mirrors.tuna.tsinghua.edu.cn/">清华大学源镜像</a></p></li><li><p><a href="http://mirrors.163.com/">网易开放源镜像</a></p></li><li><p><a href="http://opsx.alibaba.com/mirror">阿里云开放源镜像</a></p></li></ul><p>这几个基本可以应付了 更多源镜像 后面会分享</p><p> ::aru:nomatter:: 聊了这么多废话 感觉进入主题</p><p><img src="https://img.jinjun.top/images/usr/uploads/2018/11/1691782325.jpg" alt="安装目录.jpg"></p><ul><li>安装路径是Linux系统的安装路径，如要安装在手机自带的存储空间中，则在路径开头加上<code>$&#123;ENV_DIR&#125;</code>，这代表的是存储空间根目录。如要安装在<code>sdcard</code>中，则加上<code>$&#123;EXTERNAL_STORAGE&#125;</code>。</li><li>用户名和密码自定义，本地、远程连接该系统用。</li><li>DNS如需自定义就自行输入，否则保留默认</li></ul><p> 按需开启SSH和图形界面功能</p><p><img src="https://img.jinjun.top/images/usr/uploads/2018/11/2886146520.jpg" alt="开启SSH.jpg"></p><p>退出系统设置界面，点击主界面右上角，选择安装。</p><p><img src="https://img.jinjun.top/images/usr/uploads/2018/11/720639823.jpg" alt="安装系统.jpg"></p><p><img src="https://img.jinjun.top/images/usr/uploads/2018/11/2497819099.jpg" alt="Liunx安装.jpg"></p><p><img src="https://img.jinjun.top/images/usr/uploads/2018/11/4082281434.jpg" alt="安装完成.jpg"></p><p>等待程序自行安装Linux系统，时间不定，看到&lt;&lt;&lt;deploy则安装完毕。如果中间没有报错则安装成功。<br><strong>注意：安装完毕后要先点击停止按钮，再按启动按钮</strong></p>]]></content>
      
      
      <categories>
          
          <category> 虚拟化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> mysql </tag>
            
            <tag> SSH </tag>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>官方源更新特别慢 给Deepin/UOS更换系统镜像源提高速度</title>
      <link href="/posts/445425e1.html"/>
      <url>/posts/445425e1.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->![deepin][1]<p>自带的deeping官方的软件包源，很不好用，卡顿严重，速度还慢，所以准备替换它。</p><p>发现在设置中的指定镜像又不能生效，怀疑是应用商店的镜像源。所以只能动手修改<code>/etc/apt/sources.list</code>文件</p><p>修改为华为云的镜像</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/apt/sources.list</span><br></pre></td></tr></table></figure><p>替换成以下，就是把网址替换一下<code>http://packages.deepin.com</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">## Generated by deepin-installer</span><br><span class="line">deb https://mirrors.huaweicloud.com/deepin/ unstable main contrib non-free?</span><br><span class="line">deb-src https://mirrors.huaweicloud.com/deepin/ unstable main contrib non-free</span><br></pre></td></tr></table></figure><p>保存后，更新一下缓存</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br></pre></td></tr></table></figure><p>** 感觉这个方法太麻烦还可以试试这个 **</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo -e &quot;deb https://mirrors.huaweicloud.com/deepin/ unstable main contrib non-free \ndeb-src https://mirrors.huaweicloud.com/deepin/ unstable main contrib non-free&quot; | sudo tee /etc/apt/sources.list</span><br></pre></td></tr></table></figure><p>替换后速度嗖嗖的上去了，原来官方的镜像只有几百K的速度，实在受不鸟</p><blockquote><p>国内deepin源</p></blockquote><h3 id="中科大"><a href="#中科大" class="headerlink" title="中科大"></a>中科大</h3><p><a href="http://mirrors.ustc.edu.cn/deepin/">http://mirrors.ustc.edu.cn/deepin/</a></p><h3 id="华为云"><a href="#华为云" class="headerlink" title="华为云"></a>华为云</h3><p><a href="https://mirrors.huaweicloud.com/deepin/">https://mirrors.huaweicloud.com/deepin/</a></p><h3 id="阿里云"><a href="#阿里云" class="headerlink" title="阿里云"></a>阿里云</h3><p><a href="https://mirrors.aliyun.com/deepin/">https://mirrors.aliyun.com/deepin/</a></p><h3 id="网易云"><a href="#网易云" class="headerlink" title="网易云"></a>网易云</h3><p><a href="http://mirrors.163.com/deepin/">http://mirrors.163.com/deepin/</a></p><h3 id="清华大学"><a href="#清华大学" class="headerlink" title="清华大学"></a>清华大学</h3><p><a href="https://mirrors.tuna.tsinghua.edu.cn/deepin/">https://mirrors.tuna.tsinghua.edu.cn/deepin/</a></p><p>大家按自己需求换镜像源，替换上面的网址就可以啦。就是这么简单？？？</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Deepin </tag>
            
            <tag> 阿里云 </tag>
            
            <tag> UOS </tag>
            
            <tag> 华为云 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx带宽限制 为小水管的带宽下载和图片开源节流</title>
      <link href="/posts/26dbe883.html"/>
      <url>/posts/26dbe883.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->最近在弄下载服务器，本身也是一台小水管的机器，本着不可能开放服务器全部带宽。主要是怕被人盯上拼命拖数据，导致大部分流量流失，毕竟还有还跑其他应用。<p>Nginx提供了<code>limit_rate</code>和<code>limit_rate_after</code>，来进行会话的并发连接数控制。也就说Nginx可以限制同一个IP的下载速度和访问并发数限制。</p><blockquote><p>图片限制</p></blockquote><p>对于一些小带宽的服务器，可以限制大图延迟加载，小图直接显示不受限制。把正常的图片的大小限定为100K以内，超过就进行限速，速度限定为100K&#x2F;s</p><p>在Nginx的配置文件添加限定图片访问的配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">location ~ .*\.(gif|jpg|jpeg|png|bmp)$</span><br><span class="line"> &#123;     </span><br><span class="line">   expires 30d;</span><br><span class="line">   limit_rate_after 100k;</span><br><span class="line">   limit_rate 100k;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这配置的意思是 <code>expires 30d;</code> 就是在浏览器上面缓存30天，访问时可以不经过Nginx来进行拉取图片，直接在浏览器缓存中拉取。<code>limit_rate_after 100k;``limit_rate 100k;</code> 意思就是当图片加载到100K以后进行限速，最高100K&#x2F;s</p><p><img src="https://img.jinjun.top/images/usr/uploads/2019/11/1574269894.png" alt="Nginx图片限制.png"></p><blockquote><p>下载文件目录限制</p></blockquote><p>文件目录<code>/download</code>下的文件进行限速，用户下载达到 500k 后，便控制其速度在 50k&#x2F;s 以内。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">location /download/ &#123;</span><br><span class="line">    limit_rate_after 500k;</span><br><span class="line">    limit_rate 50k;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 建站知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tenginx </tag>
            
            <tag> Nginx </tag>
            
            <tag> VPS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简单解决Deepin/Linux环境下Chrome中的Flash插件已过期</title>
      <link href="/posts/cf759b22.html"/>
      <url>/posts/cf759b22.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->最近更新到深度Deepin的最新版本，Chrome也随着系统更新一起更新。更新完后发现打开网课无法打开提示flash该插件不受支持。连腾讯视频都看不了，切换到HTML5播放器也不行。<p>以前觉得Chrome对flash支持的很好，毕竟是高级浏览器，但是这几年好像对flash都要弃用了，貌似是阻止对Flash Player的正常运行,Adobe官方好像也放弃更新，目前还是可以通过设置让chrome浏览器支持flash。毕竟还是有很多网站都基于Flash运行，当然迁移到HTML5更新。</p><h2 id="报错信息"><a href="#报错信息" class="headerlink" title="报错信息"></a>报错信息</h2><p><img src="https://img.jinjun.top/images/usr/uploads/2019/11/1574177695.png" alt="flash.png"></p><p><img src="https://img.jinjun.top/images/usr/uploads/2019/11/1574177704.png" alt="flash.png"></p><p><img src="https://img.jinjun.top/images/usr/uploads/2019/11/1574177762.png" alt="flash.png"></p><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>当然我也升级过Flash也不行 也引用了最新版本Flash也不行。</p><p>Deepin的<code>Chrome Flash Playe</code>r插件在<code>/home/jun/.config/google-chrome/PepperFlash/</code></p><p><img src="https://img.jinjun.top/images/usr/uploads/2019/11/1574177828.png" alt="flash.png"></p><p>Flash版本和官方版本一样 为什么还是会出现该插件过期呢？估计是Chrome版本信息问题，那就把Flash插件目录的版本改大，那样不就提示插件过期啦。<br><img src="https://img.jinjun.top/images/usr/uploads/2019/11/1574177871.png" alt="flash.png"></p><p>修改保存一下。ps：最好在关闭Chrome运行</p><p><strong>PS</strong>： 重新打开浏览器看视频</p><p><img src="https://img.jinjun.top/images/usr/uploads/2019/11/1574177924.png" alt="flash.png"></p><p>这样在Deepin下就可以解决Chrome使用Flash的问题 貌似谷歌很想抛弃Flash怎么样放弃掉，有种难舍难分的感觉。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Deepin </tag>
            
            <tag> Linux </tag>
            
            <tag> Chrome </tag>
            
            <tag> Flash </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS下卸载和重装yum源</title>
      <link href="/posts/a37843f8.html"/>
      <url>/posts/a37843f8.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->今天在闲置的CentOS的机器打算更新系统，在运行YUM命令不起来，无奈重新各种报错。更换了DNS和安装源等一系列操作还是无法完成更新系统。最后想想还是重装算了，毕竟重装可以解决90%的问题，但是要牵扯很多东西要备份数据重新安装环境等等，但是如果可以尝试修复的就不用重装系统，毕竟可以省掉很多麻烦。<blockquote><p>查看和卸载现有Yum源</p></blockquote><ul><li>查看系统是否安装YUM</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa |grep yum</span><br></pre></td></tr></table></figure><ul><li>卸载YUM服务</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa|grep yum|xargs rpm -e --nodeps</span><br></pre></td></tr></table></figure><blockquote><p>安装yum源</p></blockquote><p>因为我是使用国内服务器，使用国内新的CentOS的Yum包来替换掉redhat自带的Yum服务。<br>这里我使用阿里云的镜像地址：<a href="https://mirrors.aliyun.com/centos/">https://mirrors.aliyun.com/centos/</a><br>选择对应的版本进行下载，我的环境CRENTOS 6</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wget https://mirrors.aliyun.com/centos/6/os/x86_64/Packages/yum-metadata-parser-1.1.2-16.el6.x86_64.rpm</span><br><span class="line">wget https://mirrors.aliyun.com/centos/6/os/x86_64/Packages/yum-3.2.29-81.el6.centos.noarch.rpm</span><br><span class="line">wget https://mirrors.aliyun.com/centos/6/os/x86_64/Packages/yum-plugin-fastestmirror-1.1.30-41.el6.noarch.rpm?</span><br><span class="line">wget https://mirrors.aliyun.com/centos/6/os/x86_64/Packages/python-urlgrabber-3.9.1-11.el6.noarch.rpm</span><br><span class="line">wget https://mirrors.aliyun.com/centos/6/os/x86_64/Packages/python-iniparse-0.3.1-2.1.el6.noarch.rpm</span><br></pre></td></tr></table></figure><ul><li>安装Python扩展</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh python-iniparse-0.3.1-2.1.el6.noarch.rpm</span><br><span class="line">rpm -ivh python-urlgrabber-3.9.1-11.el6.noarch.rpm</span><br></pre></td></tr></table></figure><ul><li>安装YUM</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh  yum-3.2.29-81.el6.centos.noarch.rpm yum-plugin-fastestmirror-1.1.30-41.el6.noarch.rpm yum-metadata-parser-1.1.2-16.el6.x86_64.rpm</span><br></pre></td></tr></table></figure><ul><li>检查是否安装成功</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum -h</span><br><span class="line">rpm -qa |grep yum</span><br></pre></td></tr></table></figure><blockquote><p>更换erpo源和生成缓存</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-6.repo</span><br><span class="line">yum clean all</span><br><span class="line">yum makecache</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CentOS </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 修改SSH端口+禁止ROOT登陆</title>
      <link href="/posts/a41443f1.html"/>
      <url>/posts/a41443f1.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->其实本身Linux已经很安全了，但是如果密码设置的不够复杂，如果说小写+数字共12位以下，你的SSH还用的默认端口，那强力一点的黑客用不上半小时，就能暴力破解你的密码。所以，最好的方法就是修改掉SSH的端口。<h3 id="一、修改文件：-x2F-etc-x2F-ssh-x2F-sshd-config"><a href="#一、修改文件：-x2F-etc-x2F-ssh-x2F-sshd-config" class="headerlink" title="一、修改文件：&#x2F;etc&#x2F;ssh&#x2F;sshd_config"></a>一、修改文件：&#x2F;etc&#x2F;ssh&#x2F;sshd_config</h3><p>Port 22 #在第三行或第四行，如果前面有井号，请删除，修改为65534以下即可，防火墙开放对应的端口，如果服务提供商提供防火墙也要一并设置。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -I INPUT -p tcp --dport 65534 -j ACCEPT</span><br></pre></td></tr></table></figure><p>可在远程连接中用vi命令，或sftp下载到本地修改，修改后使用以下命令重启ssh服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/sshd restart #centos系统，重启ssh服务命令</span><br><span class="line">/etc/init.d/ssh restart #debian/ubuntu系统，重启ssh服务命令</span><br></pre></td></tr></table></figure><h3 id="二、更加安全的设置，禁止ROOT登陆，采用小号登陆再切换ROOT（此方法不能用SFTP上传文件）"><a href="#二、更加安全的设置，禁止ROOT登陆，采用小号登陆再切换ROOT（此方法不能用SFTP上传文件）" class="headerlink" title="二、更加安全的设置，禁止ROOT登陆，采用小号登陆再切换ROOT（此方法不能用SFTP上传文件）"></a>二、更加安全的设置，禁止ROOT登陆，采用小号登陆再切换ROOT（此方法不能用SFTP上传文件）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">useradd junyan #新建一个小号</span><br><span class="line">passwd junyan #给小号设置密码，需要输入完全相同的二次，注意提示</span><br><span class="line">vi /etc/ssh/sshd_config #修改的文件还是这个</span><br><span class="line">PermitRootLogin yes #把yes，改成no，保存退出，并重启SSH服务（上面有重启命令）</span><br></pre></td></tr></table></figure><p><strong>切记，如果没有新建小号，或小号密码设置错误，你又禁了ROOT，那你只能重启系统或回滚快照，再也登陆不了。</strong></p><p><em>如果不是极度需要安全环境，并且，还需要使用SFTP管理文件，那改掉端口就行了。</em></p>]]></content>
      
      
      <categories>
          
          <category> 建站知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx常用屏蔽规则，让网站更安全</title>
      <link href="/posts/b37085f2.html"/>
      <url>/posts/b37085f2.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->Nginx (engine x) 是一个高性能的HTTP和反向代理服务，目前很大一部分网站均使用了Nginx作为WEB服务器，Nginx虽然非常强大，但默认情况下并不能阻挡恶意访问。<p><img src="https://img.jinjun.top/images/usr/uploads/2019/11/1572713545.jpg" alt="nginxsafe.jpg"></p><p>在开始之前，希望您已经熟悉Nginx常用命令（如停止、重启等操作）及排查nginx错误日志，以免出现问题不知所措。如无特殊注明，以下的命令均添加到server段内，修改nginx配置之前务必做好备份，修改完毕后需要重载一次nginx，否则不会生效。</p><p>##防止文件被下载</p><p>比如将网站数据库导出到站点根目录进行备份，很有可能也会被别人下载，从而导致数据丢失的风险。以下规则可以防止一些常规的文件被下载，可根据实际情况增减。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location ~ \.(zip|rar|sql|bak|gz|7z)$ &#123;</span><br><span class="line">? return 444;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>##屏蔽非常见蜘蛛（爬虫）</p><p>如果经常分析网站日志你会发现，一些奇怪的UA总是频繁的来访问网站，而这些UA对网站收录毫无意义，反而增加服务器压力，可以直接将其屏蔽。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if ($http_user_agent ~* (SemrushBot|python|MJ12bot|AhrefsBot|AhrefsBot|hubspot|opensiteexplorer|leiki|webmeup)) &#123;</span><br><span class="line">? ? ?return 444;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>##禁止某个目录执行脚本</p><p>比如网站上传目录，通常存放的都是静态文件，如果因程序验证不严谨被上传木马程序，导致网站被黑。以下规则请根据自身情况改为您自己的目录，需要禁止的脚本后缀也可以自行添加。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#uploads|templets|data 这些目录禁止执行PHP</span><br><span class="line">location ~* ^/(uploads|templets|data)/.*.(php|php5)$ &#123;</span><br><span class="line">? ? return 444;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>##屏蔽某个IP或IP段</p><p>如果网站被恶意灌水或CC攻击，可从网站日志中分析特征IP，将其IP或IP段进行屏蔽。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#屏蔽192.168.5.23这个IP</span><br><span class="line">deny 192.168.5.23;</span><br><span class="line"></span><br><span class="line">#屏蔽192.168.5.* 这个段</span><br><span class="line">deny 192.168.5.0/24;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>##其它说明</p><p>再次强调，修改nginx配置之前务必做好备份，修改完毕后需要重载一次nginx，否则不会生效。</p><p>上面大部分规则返回444状态码而不是403，因为444状态码在nginx中有特殊含义。nginx的444状态是直接由服务器中断连接，不会向客户端再返回任何消息，比返回403更加暴力。若有不足还请补充和指正。</p>]]></content>
      
      
      <categories>
          
          <category> 建站知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Tenginx </tag>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>修改Typecho后台路由以提高安全性</title>
      <link href="/posts/5d9765c4.html"/>
      <url>/posts/5d9765c4.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->Typecho 安装好后，默认的后台路径是/admin/。但有时默认路径可能存在安全隐患，譬如可能被黑客扫描你admin路径下的可执行脚本。<p>为了提高安全性，一般我们都会修改后台访问入口。系统根目录下的 config.inc.php 文件里，找到</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** 后台路径(相对路径) */</span></span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;__TYPECHO_ADMIN_DIR__&#x27;</span>, <span class="string">&#x27;/admin/&#x27;</span>);</span><br></pre></td></tr></table></figure><p>然后把这个 &#x2F;admin&#x2F; 路径改成自己想要的路径就行了</p><blockquote><p>###更加安全的修改</p></blockquote><p>Typecho 1.0 仍然可以使用。然而，不管是在 0.8 还是在 1.0，都遗漏有安全问题。具体来说，仍然可以通过&#x2F;index.php&#x2F;action&#x2F;login 进入登录页面，暴露后台地址。</p><p>因此，要想办法禁用 &#x2F;index.php&#x2F;action&#x2F;login 和 &#x2F;action&#x2F;login 的访问。比如借助 .htaccess 文件，或者 Nginx 的配置等等。但是注意，禁用后可能自己都访问不了，所以得有 IP 白名单或者别的什么东西。</p><p>或者也可修改 Typecho 的源码。对 &#x2F;var&#x2F;Widget&#x2F;Do.php 和 &#x2F;var&#x2F;Widget&#x2F;Options.php，查找 ‘login’（全小写，含引号），把 login 改为一个相对复杂的值。为了杜绝模板中有相关链接，也需要检查模板甚至插件，有没有添加后台登录链接，有的话就删掉。</p><p>做完这一步，才算是达到了修改后台地址的目的。</p>]]></content>
      
      
      <categories>
          
          <category> Typecho </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typecho </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>typecho搬家，图片链接批量替换字符</title>
      <link href="/posts/b8af0676.html"/>
      <url>/posts/b8af0676.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->最近更换了新的主机和新的域名。以前的数据也有少少备份不能恢复到全部，这里写一下搬家后进行的一些操作把图片都改过来！<blockquote><p>原理</p></blockquote><p>MySQL数据库批量替换字符。</p><blockquote><p>方法</p></blockquote><ul><li>打开phpmyadmin；</li><li>点击你的MySQL数据库；</li><li>点击SQL;</li><li>输入以下代码</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE `typecho_contents` SET `text` = REPLACE(`text`,&#x27;xiaojun.org&#x27;,&#x27;jinjun.top&#x27;);</span><br></pre></td></tr></table></figure><ul><li>点击执行即可</li></ul><p><img src="https://img.jinjun.top/images/usr/uploads/2019/11/1574779950.png" alt="typecho.png"><br><img src="https://img.jinjun.top/images/usr/uploads/2019/11/1574779966.png" alt="typecho.png"></p><blockquote><p>备注</p></blockquote><p>操作前一定要备份数据库！<br>WordPress也可以借鉴此方法，自行替换相应的值即可。typecho批量替换字符</p>]]></content>
      
      
      <categories>
          
          <category> Typecho </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typecho </tag>
            
            <tag> Linux </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>typecho/wordress 实现点击加载更多文章</title>
      <link href="/posts/1522f0f7.html"/>
      <url>/posts/1522f0f7.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->首先找到 index.php, 然后把主题默认的分页导航的容器换成下面的容器。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- typecho用这个 --&gt;</span><br><span class="line">&lt;?php $this-&gt;pageLink(&#x27;点击查看更多&#x27;,&#x27;next&#x27;); ?&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- wordpress用这个 --&gt;</span><br><span class="line">&lt;?php next_posts_link(__(&#x27;点击查看更多&#x27;)); ?&gt;</span><br></pre></td></tr></table></figure><p>然后找到你主题的 footer.php，把下面的 js 代码丢 </body> 前面或者添加到JS文件或者新建一个Js文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">//点击加载更多</span><br><span class="line">jQuery(document).ready(function($) &#123;</span><br><span class="line">    //点击下一页的链接(即那个a标签)</span><br><span class="line">    $(&#x27;.next&#x27;).click(function() &#123;</span><br><span class="line">        $this = $(this);</span><br><span class="line">        $this.addClass(&#x27;loading&#x27;).text(&#x27;正在努力加载&#x27;); //给a标签加载一个loading的class属性，用来添加加载效果</span><br><span class="line">        var href = $this.attr(&#x27;href&#x27;); //获取下一页的链接地址</span><br><span class="line">        if (href != undefined) &#123; //如果地址存在</span><br><span class="line">            $.ajax(&#123; //发起ajax请求</span><br><span class="line">                url: href,</span><br><span class="line">                //请求的地址就是下一页的链接</span><br><span class="line">                type: &#x27;get&#x27;,</span><br><span class="line">                //请求类型是get</span><br><span class="line">                error: function(request) &#123;</span><br><span class="line">                    //如果发生错误怎么处理</span><br><span class="line">                &#125;,</span><br><span class="line">                success: function(data) &#123; //请求成功</span><br><span class="line">                    $this.removeClass(&#x27;loading&#x27;).text(&#x27;点击查看更多&#x27;); //移除loading属性</span><br><span class="line">                    var $res = $(data).find(&#x27;.post&#x27;); //从数据中挑出文章数据，请根据实际情况更改</span><br><span class="line">                    $(&#x27;#content&#x27;).append($res.fadeIn(500)); //将数据加载加进posts-loop的标签中。</span><br><span class="line">                    var newhref = $(data).find(&#x27;.next&#x27;).attr(&#x27;href&#x27;); //找出新的下一页链接</span><br><span class="line">                    if (newhref != undefined) &#123;</span><br><span class="line">                        $(&#x27;.next&#x27;).attr(&#x27;href&#x27;, newhref);</span><br><span class="line">                    &#125; else &#123;</span><br><span class="line">                        $(&#x27;.next&#x27;).remove(); //如果没有下一页了，隐藏</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        return false;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>css 美化按钮：这里就不写了。每个主题风格都不一样，还是自己自定义吧。</p><h4 id="文章来自：MrJu"><a href="#文章来自：MrJu" class="headerlink" title="文章来自：MrJu"></a>文章来自：<a href="https://mrju.cn/20190412.html">MrJu</a></h4>]]></content>
      
      
      <categories>
          
          <category> Typecho </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typecho </tag>
            
            <tag> Javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux安装和配置VNC服务器</title>
      <link href="/posts/71c12feb.html"/>
      <url>/posts/71c12feb.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->新安装的Linux桌面化如何进行远程链接呢？`VNC Server`这个开源软件，它可以让用户远程访问服务器桌面环境。这里使用的环境是`CentOS 7 Minimal`版本安装了Gnome桌面。由于部署在虚拟机上，要使用VNC来进行远程连接控制。这篇文章主要介绍如何安装VNC。<blockquote><p>安装VNC Server</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install tigervnc-server -y</span><br></pre></td></tr></table></figure><blockquote><p>配置 VNC</p></blockquote><p>拷贝一份配置文件，重命名为<code>vncserver@:1.service</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp /lib/systemd/system/vncserver@.service /etc/systemd/system/vncserver@:1.service</span><br></pre></td></tr></table></figure><p>使用编辑器对配置文件进行修改 </p><p><img src="https://img.jinjun.top/images/usr/uploads/2019/10/1572107787.png" alt="vnc.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/systemd/system/vncserver@:1.service</span><br></pre></td></tr></table></figure><p>找到以下代码，划圈圈的替换成自己的用户名和文件目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ExecStart=/sbin/runuser -l &lt;USER&gt; -c &quot;/usr/bin/vncserver %i&quot;</span><br><span class="line">PIDFile=/home/&lt;USER&gt;/.vnc/%H%i.pid</span><br></pre></td></tr></table></figure><p>我这里使用root登录，则修改成</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ExecStart=/sbin/runuser -l root -c &quot;/usr/bin/vncserver %i&quot;</span><br><span class="line">PIDFile=/root/.vnc/%H%i.pid</span><br></pre></td></tr></table></figure><p>修改完成进行保存！下面进行重启一下systemd</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br></pre></td></tr></table></figure><h3 id="设置VNC密码"><a href="#设置VNC密码" class="headerlink" title="设置VNC密码"></a>设置VNC密码</h3><p>如果上面用户名不是root，则需要切换到你设置的用户名下面，才能设置某个用户的密码。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># su xiaojun</span><br><span class="line">sudo vncpasswd</span><br></pre></td></tr></table></figure><p><strong>这里要确保密码要大于6位字符</strong></p><h3 id="开启VNC服务"><a href="#开启VNC服务" class="headerlink" title="开启VNC服务"></a>开启VNC服务</h3><p>永久开启服务和启动服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl enable vncserver@:1.service</span><br><span class="line">sudo systemctl start vncserver@:1.service</span><br></pre></td></tr></table></figure><h3 id="配置防火墙来保证VNC服务正常运行"><a href="#配置防火墙来保证VNC服务正常运行" class="headerlink" title="配置防火墙来保证VNC服务正常运行"></a>配置防火墙来保证VNC服务正常运行</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo firewall-cmd --permanent --add-service vnc-server</span><br><span class="line">sudo systemctl restart firewalld.service</span><br></pre></td></tr></table></figure><blockquote><p>关于VNC的其他命令</p></blockquote><p>关闭 VNC 服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop vncserver@:1.service</span><br></pre></td></tr></table></figure><p>禁止 VNC 服务开机启动</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl disable vncserver@:1.service</span><br></pre></td></tr></table></figure><p>关闭防火墙</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld.service</span><br></pre></td></tr></table></figure><blockquote><p>使用VNC客户端链接liunx远程桌面</p></blockquote><p><img src="https://img.jinjun.top/images/usr/uploads/2019/10/1572109210.png" alt="vnc.png"></p><p>如果出现以下这种现象建议调整画质和颜色等级</p><p><img src="https://img.jinjun.top/images/usr/uploads/2019/10/1572109450.png" alt="vnc.png"></p><p>如果出现这种现象建议调整画质和颜色等级</p><p><img src="https://img.jinjun.top/images/usr/uploads/2019/10/1572110057.png" alt="vnc.png"></p><p>调整后，画质大有改善。没有模糊的感觉，体验感受更好。</p><p><img src="https://img.jinjun.top/images/usr/uploads/2019/10/1572110206.png" alt="vnc1.png"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CentOS </tag>
            
            <tag> Linux </tag>
            
            <tag> VNC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阔别10年，体验Linux版不一样的QQ</title>
      <link href="/posts/64502e4b.html"/>
      <url>/posts/64502e4b.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->10年前，腾讯为龙芯专门制作了龙芯Linux版QQ，然而一个QQ显然无法支撑起整个软件的生态，龙芯芯片到现在也未能大规模推广到民用市场上，大部分都用于军事或者商业市场。如今，得益于国产化替代的推进，华为老大哥也在其笔记本上搭载了深度的Deepin的系统，腾讯也在24号正式发布`QQ linux版 2.0` 支持全部国产平台的Linux版QQ。<p>作为linux的粉丝，赶紧上虚拟机安装了一个的CentOS 7的一个桌面环境。来上手linux QQ</p><p><img src="https://img.jinjun.top/images/usr/uploads/2019/10/1572016613.png" alt="QQ.png"></p><p><img src="https://img.jinjun.top/images/usr/uploads/2019/10/1572016880.png" alt="QQ.png"></p><blockquote><p>安装笔记</p></blockquote><p>首先你得有一个Linux的桌面环境，可以去安装深度或者麒麟</p><p><img src="https://img.jinjun.top/images/usr/uploads/2019/10/1572017145.png" alt="QQ.png"></p><p>使用 wget 命令进行下载到本地 我这里下载rpm包进行安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://qd.myapp.com/myapp/qqteam/linuxQQ/linuxqq_2.0.0-b1-1024_x86_64.rpm</span><br></pre></td></tr></table></figure><p>进行安装前需要安装一下依赖gtk2.0</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install libgtk2.0-0 # Ubuntu</span><br><span class="line">sudo yum install gtk2.x86_64 # centos</span><br></pre></td></tr></table></figure><p>进行安装 我这里使用rpm进行安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo rpm -ivh linuxqq_2.0.0-b1-1024_x86_64.rpm</span><br></pre></td></tr></table></figure><p>输入密码进行安装  完成后桌面有个QQ的图标</p><blockquote><p>体验记录</p></blockquote><p> <img src="https://img.jinjun.top/images/usr/uploads/2019/10/1572017931.png" alt="QQ.png"></p><p>没有什么好说的，这UI真的很像很久很久版本的样子，只支持扫码登录，不支持密码登录。</p><p><img src="https://img.jinjun.top/images/usr/uploads/2019/10/1572018244.png" alt="QQ.png"></p><p>这界面真的很像08的QQ风格，功能简单。聊天页面支持表情（只有emoji图，并不支持同步表情）图片、截屏、文件，功能够用。</p><p><img src="https://img.jinjun.top/images/usr/uploads/2019/10/1572018549.png" alt="QQ.png"></p><p>一看设置，竟然只有一个截屏功能。功能并没有win那样强大。</p><p><img src="https://img.jinjun.top/images/usr/uploads/2019/10/1572018848.png" alt="QQ.png"></p><p>占用内存的确低，低到可怕。不过功能并不多。</p><p>不支持添加好友，单纯拿来聊天也是够用了，斗图还是免了。都不支持表情包同步，希望下个版本更好吧！！</p><blockquote><p>总结</p></blockquote><p>功能并没有win那样强大，但是终于可以摆脱win QQ带来的各种不兼容，这个版本稳定性更强，占用更低。功能虽然很少但是够用。</p>]]></content>
      
      
      <categories>
          
          <category> 资源分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> QQ </tag>
            
            <tag> 腾讯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS7 Minimal安装GNOME图形界面</title>
      <link href="/posts/86ad9a3e.html"/>
      <url>/posts/86ad9a3e.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->CentOS7 Minimal下安装图形化界面的方法，有些时候纯命令的确有时候不方便，图形化界面更加友好方便个人学习和使用，但是在服务器部署环境的情况下个人是不建议去用图形化。<p>由于CentOS 7 Minimal是一个比较简洁的liunx发行版，只有基本的服务，并没有带图形化的界面。反正个人喜欢简简单单，不需要多余的服务，需要再安装一个也不迟。</p><blockquote><p>安装准备</p></blockquote><h3 id="首先使用Root用户登录，不是root安装可能会导致安装失败或者其他权限原因"><a href="#首先使用Root用户登录，不是root安装可能会导致安装失败或者其他权限原因" class="headerlink" title="首先使用Root用户登录，不是root安装可能会导致安装失败或者其他权限原因!!!"></a>首先使用<strong>Root</strong>用户登录，不是root安装可能会导致安装失败或者其他权限原因!!!</h3><h3 id="使用-yum-安装-X窗口系统"><a href="#使用-yum-安装-X窗口系统" class="headerlink" title="使用 yum 安装 X窗口系统"></a>使用 yum 安装 X窗口系统</h3><p><img src="https://img.jinjun.top/images/usr/uploads/2019/10/1572015008.png" alt="liunx图形化.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum -y groupinstall &quot;X Window System&quot; -y</span><br><span class="line">yum install gnome-classic-session gnome-terminal nautilus-open-terminal control-center liberation-mono-fonts</span><br></pre></td></tr></table></figure><p><img src="https://img.jinjun.top/images/usr/uploads/2019/10/1572011509.png" alt="liunx图形化.png"></p><p>输入 <code>y</code> ，然后下载需要的package 进行安装。这个过程大概20分钟左右，耐心等待。</p><p><img src="https://img.jinjun.top/images/usr/uploads/2019/10/1572012000.png" alt="liunx图形化.png"></p><p>当出现<code>Complete!</code> 说明已经安装成功！</p><p>检查一下我们安装的软件以及可以安装的软件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum grouplist</span><br></pre></td></tr></table></figure><p><img src="https://img.jinjun.top/images/usr/uploads/2019/10/1572012344.png" alt="liunx图形化.png"></p><p><code>Available Environment Groups</code>   代表是已经安装<br><code>Available Groups</code> 代表还没有安装的</p><blockquote><p>安装图形化桌面 GNOME</p></blockquote><p><img src="https://img.jinjun.top/images/usr/uploads/2019/10/1572013556.png" alt="liunx图形化.png"></p><p> 标注如上图，安装命令为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum groupinstall &quot;GNOME Desktop&quot; &quot;Graphical Administration Tools&quot;</span><br></pre></td></tr></table></figure><p>出现<code>Complete!</code> 这时候就已经安装完成了。</p><p>这时候可以通过<code>startx</code> 来进入桌面，第一次进入会比较慢，等一下就好了。可以通过VNC来进行远程管理</p><p><img src="https://img.jinjun.top/images/usr/uploads/2019/10/1572014942.png" alt="liunx图形化.png"></p><blockquote><p>修改系统启动即为图形化界面</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ln -sf /lib/systemd/system/runlevel5.target /etc/systemd/system/default.target</span><br><span class="line">startx</span><br></pre></td></tr></table></figure><blockquote><p>安装中文支持和输入法</p></blockquote><p>安装中文语言</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum groupinstall &quot;Chinese Support&quot; -y</span><br></pre></td></tr></table></figure><p>安装输入法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum groupinstall &quot;Input Methods&quot;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> GNOME </tag>
            
            <tag> 桌面环境 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>标签聚合</title>
      <link href="/posts/afeb709b.html"/>
      <url>/posts/afeb709b.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>时间轨迹</title>
      <link href="/posts/24ddc2c2.html"/>
      <url>/posts/24ddc2c2.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux版 - PHPstudy(小皮面板)体验记录</title>
      <link href="/posts/e34fe232.html"/>
      <url>/posts/e34fe232.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->今天`phpstudy`也正式发布了`Linux`的`WEB`面板命名为"`小皮面板`"，之前也听说过但是没有参加内测，作为一个多年的phpstudy的粉丝，感到有点小小遗憾！！没想到还支持深度桌面环境(DeePin)有点意外?回家马上上机安装了一下，给我的的体验还是OK的。感觉和宝塔有点相同，但是各有各的特色。个人不建议马上用到正式的开发环境下，先玩玩、熟悉认为可行后正式生产环境使用。<blockquote><p>功能截图</p></blockquote><p><img src="https://img.jinjun.top/images/usr/uploads/2019/10/1570539341.png" alt="phpstudy.png"></p><blockquote><p>安装过程</p></blockquote><ul><li><strong>Phpstudy Liunx</strong>版本：<a href="https://www.xp.cn/linux.html">https://www.xp.cn/linux.html</a></li></ul><p>使用 SSH 连接工具 连接到您的 Linux服务器后，根据系统执行相应命令开始安装（大约2分钟完成面板安装）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">## CentOS</span><br><span class="line">yum install -y wget &amp;&amp; wget -O install.sh https://download.xp.cn/install.sh &amp;&amp; sh install.sh</span><br><span class="line"></span><br><span class="line">## Ubuntu/Deepin</span><br><span class="line">wget -O install.sh https://download.xp.cn/install.sh &amp;&amp; sudo bash install.sh</span><br><span class="line"></span><br><span class="line">其他系统还在内测</span><br></pre></td></tr></table></figure><p>如果使用阿里云、腾讯等云服务器，要去防火墙添加相关的端口。不然不能访问。</p><blockquote><p>使用体验</p></blockquote><p><img src="https://img.jinjun.top/images/usr/uploads/2019/10/1570540660.png" alt="phpstudy.png"></p><p>这界面相当简洁，一眼明了。左栏是功能栏 。另外这面板使用Docker 内存占用也相当低。也支持网站防火墙和服务器防火墙，也可以查看防火墙报表。</p><p><img src="https://img.jinjun.top/images/usr/uploads/2019/10/1570541363.png" alt="phpstudy.png"></p><p><img src="https://img.jinjun.top/images/usr/uploads/2019/10/1570541506.png" alt="phpstudy.png"></p><p><img src="https://img.jinjun.top/images/usr/uploads/2019/10/1570541454.png" alt="phpstudy.png"></p><p>网站管理的功能，网站目录、PHP版本、SSL、防盗链、反向代理、waf防火墙…..功能该有都有。但是有个功能要吐槽一下，当设置端口访问时候，要手动去服务器防火墙去放行相关的端口。</p><p><img src="https://img.jinjun.top/images/usr/uploads/2019/10/1570542460.png" alt="phpstudy.png"></p><p>数据库管理，上手没有什么难度（难道是习惯了宝塔面板？？）</p><p><img src="https://img.jinjun.top/images/usr/uploads/2019/10/1570542570.png" alt="phpstudy.png"></p><p>也提供在线文件管理，支持新建文件、新建目录、权限管理、重命名、解压缩等这些常规操作，但不支持在线上传文件，官方说下一个版本会支持，有这个功能我基本可以摆脱FTP了，因为都是电脑管理比较多。</p><p><img src="https://img.jinjun.top/images/usr/uploads/2019/10/1570542996.png" alt="phpstudy.png"></p><p>官方也很贴心支持了操作日志，对于安装、删除目录、删除网站的事件可以及时捕获，不至于找来找去也不知道失误在哪里。</p><p><img src="https://img.jinjun.top/images/usr/uploads/2019/10/1570543228.png" alt="phpstudy.png"></p><p><img src="https://img.jinjun.top/images/usr/uploads/2019/10/1570543545.png" alt="phpstudy.png"></p><p>官方也支持软件管理，支持常见的Nginx、apach、mysql、redis等等。大部分的环境都是快速安装的，不支持编译安装。如果官方支持编译安装编译更好！也可以配置环境的相关的性能和配置文件。</p><p><img src="https://img.jinjun.top/images/usr/uploads/2019/10/1570543702.png" alt="phpstudy.png"></p><p><img src="https://img.jinjun.top/images/usr/uploads/2019/10/1570543775.png" alt="phpstudy.png"></p><p><img src="https://img.jinjun.top/images/usr/uploads/2019/10/1570543829.png" alt="phpstudy.png"></p><p><img src="https://img.jinjun.top/images/usr/uploads/2019/10/1570543990.png" alt="phpstudy.png"></p><p>监控，计划任务、服务器防火墙，网站防火墙。这些功能相信也不司空见怪了，感觉有点熟悉感觉。</p><p><img src="https://img.jinjun.top/images/usr/uploads/2019/10/1570544066.png" alt="phpstudy.png"></p><p>这个功能有点炫酷，简直就是服务器监控的全部，有点像监控大屏。支持显示 waf防火墙状态、流量、网站状态、资源监控等等等功能。</p><p><img src="https://img.jinjun.top/images/usr/uploads/2019/10/1570544351.png" alt="phpstudy.png"></p><p>设置 可以设置面板名称、端口、域名、授权IP、授权登录码…..好熟悉的画风。</p><blockquote><p>写在总结</p></blockquote><p>小皮面板还存在很多体验不好的地方。还要多多支持的。给我感受是，面板提供的功能比较强大该支持都支持了。根据官方的动作，短期可能会有不少的更新和带来更完善的功能。后期会酝酿更多的大招。</p><p>对新用户来说，使用这个面板可能感觉不是很顺手。面板也在每个功能页面打上温馨的小提醒和详细的文档链接。对一些新手来说比较有帮助，毕竟现在热心群众也不是很多了。</p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Deepin </tag>
            
            <tag> Linux </tag>
            
            <tag> Docker </tag>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>不想拥有太多情绪</title>
      <link href="/posts/71eb863b.html"/>
      <url>/posts/71eb863b.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->马上国庆假期马上就要结束了，今天表弟也匆匆忙忙赶上去准备返工了。<p>然而这个月也在不知不觉中到了第五天，时间真的过的真快，4号还跑去公司值班一天然后放两天假。7号正式上班。</p><p>国庆那天和表弟他们喝到天昏地暗的。也和他们有大半年没有聚过了，每个人都忙着干自己的事业。只能明年再聚了！！！</p><p>说实话我也不知道国庆节那三天怎么过的，反正在家躺尸两天。旅游不可能的啦，到处塞车，也懒得动在家睡了两天（主要还是懒）</p><p><img src="https://img.jinjun.top/images/usr/uploads/2019/10/1570286824.jpg" alt="timg.jpg"></p><p>过完国庆，马上双十一，然后快过年了。</p><p>弹指一挥间，出来工作也有一年半了，说挣钱了也没有，攒钱了也没有。工资刚刚好够花。从刚参加一个月工资的800到现在一个月工资涨到1918.95，好在买了五险一金。也算可以在这个四线城市立足。</p><p>今年立的Flag，还有好几个没有实现。哎，总是把生活想的太美好，其实生活很残酷。稍微不努力，就掉队。</p>]]></content>
      
      
      <categories>
          
          <category> 钧言钧语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 点滴 </tag>
            
            <tag> 生活 </tag>
            
            <tag> 记事本 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CheungSSH国产运维自动化管理工具</title>
      <link href="/posts/5a5bd127.html"/>
      <url>/posts/5a5bd127.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->> CheungSSH介绍<p>CheungSSH是一款国人自主研发的Linux运维自动化管理服务器软件，秉着为企业降低运营成本，解放管理员双手和自动化生产的理念，创造的一套开源运维自动化系统。</p><blockquote><p>CheungSSH 特点</p></blockquote><ul><li>简单，不需要特定的语法，不需要学习，即使不懂得Linux的人也能操作</li><li>功能完备，命令执行、文件传输、批量部署程序、服务器资产信息收集、计划任务、开放的API等主要功能</li><li>开源，使用免费</li><li>不掺杂Linux之外的概念，让懂得Linux的人使用起来更得心应手</li><li>无需安装任何插件</li><li>Python开发，开源代码</li><li>通过SSH管理服务器，通信安全，无需开启额外的端口和启动额外的程序</li><li>安全存储数据，采用Mysql Oracle数据库</li><li>通过SSH管理登陆，无需额外创建任何管理账号，只需要业务账号即可，即平时登陆服务器的账户。做到无痕操作，不给服务器增加额外负担</li><li>运行速度快，采用缓存技术</li></ul><h2 id="安装-（centos-7安装成功）"><a href="#安装-（centos-7安装成功）" class="headerlink" title="安装 （centos 7安装成功）"></a>安装 （centos 7安装成功）</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone https://gitee.com/CheungSSH_OSC/CheungSSH</span><br><span class="line">cd CheungSSH/bin/</span><br><span class="line">sh install-cheungssh.sh</span><br></pre></td></tr></table></figure><p>更新命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh install-CheungSSH.sh update</span><br></pre></td></tr></table></figure><p>安装过程中会安装apache等各种软件，建议在纯净的环境下安装。</p><p>安装过程中会设置默认的Web端口，如果默认直接回车也可以指定</p><p>默认的管理员信息：<br>管理员账号：<code>cheungssh</code><br>管理员密码：<code>cheungssh</code></p><h2 id="cheungssh框架"><a href="#cheungssh框架" class="headerlink" title="cheungssh框架"></a>cheungssh框架</h2><p><img src="https://img.jinjun.top/images/usr/uploads/2019/10/1569897339.jpg" alt="CheungSSH.jpg"></p><p>作者项目地址：<a href="https://gitee.com/CheungSSH_OSC/CheungSSH">https://gitee.com/CheungSSH_OSC&#x2F;CheungSSH</a></p><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>安装后，进入管理后台，进行服务器添加</p><p><img src="https://img.jinjun.top/images/usr/uploads/2019/10/1569898258.png" alt="cheungssh配置.png"><br><img src="https://img.jinjun.top/images/usr/uploads/2019/10/1569898552.png" alt="cheungssh配置.png"><br><img src="https://img.jinjun.top/images/usr/uploads/2019/10/1569898502.png" alt="cheungssh配置.png"></p><p>更多更多功能请去参考项目的使用文档，国产软件开发不易，希望大家多多支持！！</p>]]></content>
      
      
      <categories>
          
          <category> 资源分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 服务器 </tag>
            
            <tag> 运维教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>宝塔面板Nginx启用Brotli压缩算法提高网站访问速度</title>
      <link href="/posts/8020019d.html"/>
      <url>/posts/8020019d.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->> Brotli介绍<p>Brotli是Google推出的开源压缩算法，通过变种的LZ77算法、Huffman编码以及二阶文本建模等方式进行数据压缩，与其他压缩算法相比，它有着更高的压缩效率，性能也比我们目前常见的Gzip高17-25%，可以帮我们更高效的压缩网页中的各类文件大小及脚本，从而提高加载速度，提升网页浏览体验。</p><p><img src="https://img.jinjun.top/images/usr/uploads/2019/09/1569854114.png" alt="Brotli.png"></p><p>Brotli 凭借它优异的性能迅速占领了市场，对主流浏览器都有广泛的支持Brotli算法。各大CDN厂商也推出了Brotli，可以看出Brotli有多么火热。在考虑资源占用和流量或访问速度等各方面因素，建议启用。钧言极客已经支持Brotli算法，对访问速度有一定的提升。</p><blockquote><p>Brotli安装</p></blockquote><p>这里使用宝塔管理面板来安装。操作环境 <code>Centos 7.6</code> 其他环境也可以借鉴</p><h2 id="下载Brotli"><a href="#下载Brotli" class="headerlink" title="下载Brotli"></a>下载Brotli</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd /www/server    ##进入宝塔环境目录</span><br><span class="line">git clone https://github.com/google/ngx_brotli.git    ##下载brotli</span><br><span class="line">cd ngx_brotli</span><br><span class="line">git submodule update --init    ##更新brotli</span><br></pre></td></tr></table></figure><h2 id="编译安装Nginx"><a href="#编译安装Nginx" class="headerlink" title="编译安装Nginx"></a>编译安装Nginx</h2><p>这里我使用<code>tengine 2.3.1</code>版本 </p><p> 1、 创建一个编译目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /work</span><br><span class="line">cd /work</span><br></pre></td></tr></table></figure><p> 2、 下载并解压tengine</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /work  #如果你在work目录下，此命令省略</span><br><span class="line">wget http://tengine.taobao.org/download/tengine-2.3.1.tar.gz</span><br><span class="line">tar -xzvf tengine-2.3.1.tar.gz</span><br></pre></td></tr></table></figure><p> 3、 查看宝塔Linux面板原先的Tengine的编译参数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -V</span><br></pre></td></tr></table></figure><p>查询的tenginx编译参数 并把<code>configure arguments:</code>之后的参数复制下来</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Tengine version: Tengine/2.3.1</span><br><span class="line">nginx version: nginx/1.16.0</span><br><span class="line">built by gcc 4.8.5 20150623 (Red Hat 4.8.5-36) (GCC)</span><br><span class="line">built with OpenSSL 1.1.1b  26 Feb 2019</span><br><span class="line">TLS SNI support enabled</span><br><span class="line">configure arguments: --user=www --group=www --prefix=/www/server/nginx --add-module=/www/server/nginx/src/ngx_devel_kit --with-openssl=/www/server/nginx/src/openssl --add-module=/www/server/nginx/src/ngx_cache_purge --add-module=/www/server/nginx/src/nginx-sticky-module --add-module=/www/server/nginx/src/lua_nginx_module --with-http_stub_status_module --with-http_ssl_module --with-http_v2_module --with-http_image_filter_module --with-http_gzip_static_module --with-http_gunzip_module --with-ipv6--with-http_sub_module --with-http_flv_module --with-http_addition_module --with-http_realip_module--with-http_mp4_module --with-ld-opt=-Wl,-E --with-pcre --with-cc-opt=-Wno-error --add-module=/www/server/nginx/src/ngx-pagespeed --add-module=/work/nginx-plugin-master</span><br></pre></td></tr></table></figure><p> 4、 进入Tengine解压目录，重新编译Tengine。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /work/tengine-2.3.1</span><br><span class="line">./configure 粘贴上一步复制的参数 --add-module=/www/server/ngx_brotli</span><br><span class="line">make</span><br></pre></td></tr></table></figure><p>编译过程有点慢，耐心等一下。</p><p> 5、 备份原来的Tengine文件，把编译后的Tengine文件替换掉旧的Tengine</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cd /www/server/nginx/sbin</span><br><span class="line">cp nginx nginx.bak</span><br><span class="line">service nginx stop</span><br><span class="line">rm -rf /www/server/nginx/sbin/nginx</span><br><span class="line">cd /work/tengine-2.3.1</span><br><span class="line">cp objs/nginx /www/server/nginx/sbin</span><br><span class="line">service nginx start</span><br></pre></td></tr></table></figure><p> 6、 检查是否编译成功</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -V</span><br></pre></td></tr></table></figure><p><img src="https://img.jinjun.top/images/usr/uploads/2019/09/1569858059.png" alt="Brotli.png"></p><p>这样就算编译成功了。</p><blockquote><p>开启Brotli压缩</p></blockquote><p>在宝塔面板点击左侧软件商店 - Nginx设置 - 配置修改，在http段内添加以下内容启用Brotli压缩。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">brotli on;</span><br><span class="line">brotli_comp_level 6;</span><br><span class="line">brotli_min_length 512;</span><br><span class="line">brotli_types text/plain text/javascript text/css text/xml text/x-component application/javascript application/x-javascript application/xml application/json application/xhtml+xml application/rss+xml application/atom+xml application/x-font-ttf application/vnd.ms-fontobject image/svg+xml image/x-icon font/opentype;</span><br><span class="line">brotli_static always;</span><br></pre></td></tr></table></figure><p>最后保存一下文件，然后重载配置或者重启一下nginx就可以了</p><h3 id="参数说明"><a href="#参数说明" class="headerlink" title="参数说明"></a>参数说明</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">brotli on;               #启用</span><br><span class="line">brotli_comp_level 6;     #压缩等级，默认6，最高11，太高的压缩水平可能需要更多的CPU</span><br><span class="line">brotli_buffers 16 8k;    #请求缓冲区的数量和大小</span><br><span class="line">brotli_min_length 20;    #指定压缩数据的最小长度，只有大于或等于最小长度才会对其压缩。这里指定20字节</span><br><span class="line">brotli_types text/plain; #指定允许进行压缩类型</span><br><span class="line">brotli_static always;    #是否允许查找预处理好的、以.br结尾的压缩文件，可选值为on、off、always</span><br><span class="line">brotli_window 512k;      #窗口值，默认值为512k</span><br></pre></td></tr></table></figure><h3 id="浏览器测试"><a href="#浏览器测试" class="headerlink" title="浏览器测试"></a>浏览器测试</h3><p><img src="https://img.jinjun.top/images/usr/uploads/2019/10/1569888462.png" alt="Brotli.png"></p><p><strong>PS：</strong> brotli只会在https状态下才会生效，http状态会使用Gzip</p>]]></content>
      
      
      <categories>
          
          <category> 建站知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CentOS </tag>
            
            <tag> Linux </tag>
            
            <tag> Tenginx </tag>
            
            <tag> 宝塔面板 </tag>
            
            <tag> Brotli </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用docker中部署BT宝塔面板过程</title>
      <link href="/posts/64501c3a.html"/>
      <url>/posts/64501c3a.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->在使用Docker安装BT宝塔面板之前，先确保服务器已经安装并安装了Docker<p>1、 先拉取一个Docker的liunx系统镜像（这里我使用centos 当然也可以选择其他）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull centos</span><br></pre></td></tr></table></figure><p>2、 创建docker容器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -i -t -d --name baota -p 20:20 -p 21:21 -p 80:80 -p 443:443 -p 888:888 -p 8888:8888 --privileged=true -v /home/www:/www centos</span><br></pre></td></tr></table></figure><p>这条命令的以上创建一个<code>docker</code>容器，然后将真机的20,21,80,443,888,8888这五个端口映射到docker容器中，并且将真机的<code>/root/www</code>文件夹映射到docker的容器的&#x2F;www上。<code>--privileged=true</code> 表示在运行容器时，给容器添加特权，让它拥有写文件的权限，不然会导致安装失败。</p><p>3、 进入docker容器</p><p>利用 <code>docker ps</code> 命令来查看。</p><p><img src="https://img.jinjun.top/images/usr/uploads/2019/09/1569335700.png" alt="docker安装宝塔.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it a4d28b1fb743 /bin/bash</span><br></pre></td></tr></table></figure><p>4、 由于docker的镜像，是一个相对纯净的版本，这里给centos做一个Update更新</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum check-update -y</span><br><span class="line">yum update -y</span><br></pre></td></tr></table></figure><p>5、 执行安装BT宝塔面板</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install.sh &amp;&amp; sh install.sh</span><br></pre></td></tr></table></figure><p>期间有一个安装确认 输入 “Y” 回车 进行确认安装</p><p><img src="https://img.jinjun.top/images/usr/uploads/2019/09/1569336717.png" alt="docker安装宝塔.png"></p><p>这里显示安装成功！我们再去浏览器打开</p><p><img src="https://img.jinjun.top/images/usr/uploads/2019/09/1569336914.png" alt="docker安装宝塔.png"></p><p>这里完成了宝塔的面板的安装，然后去安装运行环境。</p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CentOS </tag>
            
            <tag> Linux </tag>
            
            <tag> 宝塔面板 </tag>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Instantbox搭建Web端的临时开箱即用Linux系统</title>
      <link href="/posts/af45b291.html"/>
      <url>/posts/af45b291.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->有时候想学习一下各种`Liunx`或者想玩几个开源的应用，但是又担心出错心里没有底。不会解决的可能会直接重装系统，这很浪费时间还要承担数据丢失的风险。但是`instantbox`的出现就很好解决了这个难题，它可以使你在只有浏览器的情况下，快速创建一个开箱即用的`Linux`系统，可以自由调整配置和使用时间，不使用可以直接删除。<p><img src="https://img.jinjun.top/images/usr/uploads/2019/09/1569086436.png" alt="instantbox.png"></p><p>目前有<code>Ubuntu</code>、<code>CentOS</code>、<code>Debian</code>、<code>Alpine</code>等主流系统，不过由于是通过<code>Docker</code>实现的，所以平时有些命令操作肯定是不能用了，但一般情况下还是可以满足需求的。</p><blockquote><p>使用截图</p></blockquote><p><img src="https://img.jinjun.top/images/usr/uploads/2019/09/1569086667.png" alt="instantbox1.png"></p><p><img src="https://img.jinjun.top/images/usr/uploads/2019/09/1569086748.png" alt="instantbox2.png"></p><p><img src="https://img.jinjun.top/images/usr/uploads/2019/09/1569086925.png" alt="instantbox3.png"></p><p><img src="https://img.jinjun.top/images/usr/uploads/2019/09/1569089489.png" alt="instantbox.png"></p><blockquote><p>安装方法</p></blockquote><p>Github地址：<a href="https://github.com/instantbox/instantbox">https://github.com/instantbox/instantbox</a></p><p>安装Docker的方法可以搜索本站<code>Docker</code></p><ul><li>安装Instantbox</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">#期间会要你输入端口等信息</span><br><span class="line">mkdir instantbox &amp;&amp; cd $_</span><br><span class="line">bash &lt;(curl -sSL https://raw.githubusercontent.com/instantbox/instantbox/master/init.sh)</span><br><span class="line"></span><br><span class="line"># 安装过程</span><br><span class="line">[root@bogon instantbox]# bash &lt;(curl -sSL https://raw.githubusercontent.com/instantbox/instantbox/master/init.sh)</span><br><span class="line">Welcome to instantbox, please wait...</span><br><span class="line"></span><br><span class="line">docker is installed</span><br><span class="line"># 填写你的ip</span><br><span class="line">Enter your IP (optional): </span><br><span class="line">192.168.158.134</span><br><span class="line"># 填写你的端口</span><br><span class="line">Choose a port (default: 8888): </span><br><span class="line">8888</span><br><span class="line">You&#x27;re all set! </span><br><span class="line"># 你的访问信息</span><br><span class="line">Run &#x27;docker-compose up -d&#x27; then go to http://192.168.158.134:8888 on your browser.</span><br><span class="line"></span><br><span class="line">#启动容器</span><br><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p>然后使用<code>ip:port</code>访问即可。</p><p>对于<code>CentOS</code>系统，还需要开启端口，比如你上面填的<code>8888</code>，使用命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#CentOS 6</span><br><span class="line">iptables -I INPUT -p tcp --dport 8888 -j ACCEPT</span><br><span class="line">service iptables save</span><br><span class="line">service iptables restart</span><br><span class="line"></span><br><span class="line">#CentOS 7</span><br><span class="line">firewall-cmd --zone=public --add-port=8888/tcp --permanent</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><p><strong>小提示</strong> 建议安装的系统都进行一下<code>Update</code>更新一下系统和软件，补全一下常用的命令行。centos这种系统更新时间比较长，不知道是不是机器配置问题。</p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> WEB </tag>
            
            <tag> Instantbox </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决新安装Docker安装完成运行报错</title>
      <link href="/posts/6b1bf670.html"/>
      <url>/posts/6b1bf670.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->服务器新完成Docker安装后，拉取了系统镜像，但是运行 `docker-compose up -d` 时候出现报错。我安装的是Instantbox准备建一个liunx的测试机器，来深入了解Liunx。下面来说一下我的解决方法。<p>报错信息如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker: Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?.</span><br><span class="line"></span><br><span class="line">See &#x27;docker run --help&#x27;.</span><br></pre></td></tr></table></figure><p><img src="https://img.jinjun.top/images/usr/uploads/2019/09/1569082240.png" alt="Dacker.png"></p><h4 id="1、可能是Docker没有启用-运行以下命令来开启Docker"><a href="#1、可能是Docker没有启用-运行以下命令来开启Docker" class="headerlink" title="1、可能是Docker没有启用  运行以下命令来开启Docker"></a>1、可能是Docker没有启用  运行以下命令来开启Docker</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl  start docker</span><br></pre></td></tr></table></figure><h4 id="2、也可以运行以下命令来激活Docker，来运行第一个实例-hollo-word-检验"><a href="#2、也可以运行以下命令来激活Docker，来运行第一个实例-hollo-word-检验" class="headerlink" title="2、也可以运行以下命令来激活Docker，来运行第一个实例 hollo word 检验"></a>2、也可以运行以下命令来激活Docker，来运行第一个实例 <code>hollo word</code> 检验</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">sudo service docker restart</span><br><span class="line">sudo service docker status</span><br><span class="line">sudo docker run hello-world</span><br></pre></td></tr></table></figure><p><img src="https://img.jinjun.top/images/usr/uploads/2019/09/1569083818.png" alt="Dacker hollo.png"></p><h4 id="3、compose以守护进程模式运行"><a href="#3、compose以守护进程模式运行" class="headerlink" title="3、compose以守护进程模式运行"></a>3、compose以守护进程模式运行</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><h4 id="4、检查运行情况"><a href="#4、检查运行情况" class="headerlink" title="4、检查运行情况"></a>4、检查运行情况</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose ps</span><br></pre></td></tr></table></figure><p><img src="https://img.jinjun.top/images/usr/uploads/2019/09/1569083833.png" alt="Dacker.png"></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>腾讯云、阿里云CDN启用防盗链 通过搜索引擎访问站点服务器返回403</title>
      <link href="/posts/97e26627.html"/>
      <url>/posts/97e26627.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->今天有人反馈我的站点，通过360搜索、百度搜索均出现无法访问，服务器都返回HTTP状态“403 Forbidden”，浏览器提示“You don't have permission to access the URL on this server.” 但是通过浏览器打开显示正常。下面分享一下我的解决方法！<p><img src="https://img.jinjun.top/images/usr/uploads/2019/09/1568990217.png" alt="cdn问题.png"></p><p>经过一系列分析发现排除，因为我使用的是阿里CDN设置时启用了防盗链并在Referer白名单只开放了自己的域名。从360、百度、谷歌等这些搜索引擎过来的链接，HTTP head头部的Referer是带着搜索引擎的域名，例如百度过来的链接，Referer携带着baidu.com，但是CDN白名单的Referer里面并没有Baidu.com，导致用户通过搜索引擎点击访问站点返回HTTP状态403。</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p> 1、 在Referer白名单中添加 <code>*.baidu.com</code>  <code>*.so.com</code>以及其他搜索引擎，外链Referer。例如我使用的阿里云CDN防盗链Referer白名单设置：</p><p><img src="https://img.jinjun.top/images/usr/uploads/2019/09/1568991669.png" alt="Referer.png"></p><p> 2、 禁用CDN的防盗链功能。阿里云CDN可以选择Referer黑名单功能，但是要确保自己的域名和外链域名不在Referer黑名单中。腾讯云CDN可以清空Referer白名单设置。</p><p> 3、 如果使用外链做图床和做存储，可以在外链站点设置Referer白名单，添加来源站点域名为本站域名来防御恶意盗链等这些情况。</p><p>因为网站访问可能有各种各样的情况，数不胜数的Referer 你不可能每一个都添加进去，所以个人建议尽量不要启用防盗链，以免导致用户无法正常访问站点。但是可以从图床那些去添加限制，来保证站点的正常访问。</p>]]></content>
      
      
      <categories>
          
          <category> 建站知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 阿里云 </tag>
            
            <tag> CDN </tag>
            
            <tag> 腾讯云 </tag>
            
            <tag> 防盗链 </tag>
            
            <tag> 搜索引擎 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>移动/联通/电信官方防骚扰电话屏蔽功能业务免费开通</title>
      <link href="/posts/2497c4c8.html"/>
      <url>/posts/2497c4c8.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->现在大数据时代，几乎每一个角落都用到手机号码等各类隐私信息。而你自己切不知道从那个源头泄露出去，从而导致接收各种各样的诈骗/骚扰/房地产/中介/拼夕夕等短信甚至是还会电话骚扰！！给生活造成多少的不便，甚至是有人上当受骗。<p><img src="https://img.jinjun.top/images/usr/uploads/2019/09/1568908053.jpg" alt="防骚扰.jpg"></p><p>其实早在很久之前，移动，联通，电信等运营商都推出防骚扰屏蔽功能，开通后就是基于云端“拦截防火墙” ，帮你过滤掉一些非常烦人的短信或者电话。</p><h2 id="中国移动-绿盾防护-骚扰电话拦截功能"><a href="#中国移动-绿盾防护-骚扰电话拦截功能" class="headerlink" title="中国移动 - 绿盾防护 (骚扰电话拦截功能)"></a>中国移动 - 绿盾防护 (骚扰电话拦截功能)</h2><p>可以通过以下三种方式开通或取消“高频骚扰电话拦截业务”</p><p>1、 您可以拨打归属地10086客服电话或通过营业厅进行业务的咨询、开通和注销；</p><p>2、开通需要开通VOLTE功能才能使用，开通 VoLTE 方法：发送短信 <code>KTVOLTE</code> 到 <code>10086</code> 即可</p><p>3、 编辑短信<code>KTFSR、QXFSR</code>发送到<code>10086</code>进行业务的开通和注销；</p><p>4、微信关注<code>中国移动高频骚扰电话防护</code>公众号，绑定对应的手机号进行设置</p><h2 id="中国电信-天翼防骚扰"><a href="#中国电信-天翼防骚扰" class="headerlink" title="中国电信 - 天翼防骚扰"></a>中国电信 - 天翼防骚扰</h2><p>1、关注微信公众号：<code>天翼防骚扰</code></p><p>2、点击登录，需要输入手机号码、图形验证码和短信验证码。但注意这项服务仅向 4G 用户开放，并且使用 VoLTE 功能。</p><p>3、然后，稍等几秒钟收到正式开通短信，就能使用了。</p><h2 id="中国联通-防骚扰提醒服务"><a href="#中国联通-防骚扰提醒服务" class="headerlink" title="中国联通 - 防骚扰提醒服务"></a>中国联通 - 防骚扰提醒服务</h2><p>1、开通：发送短信 <code>KT</code> 到 <code>10655587</code> 即可开通。(需要回复 Y 确认)</p><p>2、取消：发送短信 <code>QX</code> 到 <code>10655587</code> 即可取消。</p><p><strong>PS：</strong> 注意：开通防骚扰提醒服务之前必须要先开通「炫铃功能」，该功能一般是免费的，但部分地区“可能收费”，建议大家先咨询客服确认一下再做决定。</p><p>开通了炫铃的用户则可以直接免费开通防骚扰服务。</p><p>由于中国联通的防骚扰功能上线较早，目前未提供类似移动电信的微信公众号设置等自定义功能，但对于防骚扰拦截广告推广电话的实用程度还是很高的。</p>]]></content>
      
      
      <categories>
          
          <category> 资源分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 中国移动 </tag>
            
            <tag> 中国联通 </tag>
            
            <tag> 中国电信 </tag>
            
            <tag> 防骚扰 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>typecho主题模板制作常用代码汇总</title>
      <link href="/posts/2a50a983.html"/>
      <url>/posts/2a50a983.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->typecho是一款不错的轻量化博客系统，圈子里也拥有众多爱好者。博客除了后台的发布功能之外，最重要的算得上是博客的外观了，别人的制作的主题可能有时候不怎么符合自身需求或者使用习惯。这时候就有必要了解一下主题小修改或者进行一下个性化的改造。以满足自身需求。<blockquote><p>文章title设置</p></blockquote><h3 id="实现方法一"><a href="#实现方法一" class="headerlink" title="实现方法一"></a>实现方法一</h3><p>博客首页 —&gt; 博客名称 - 博客描述<br>归档页面 —&gt; XXXX&#x2F;XX - 博客名称<br>文章页面 —&gt; 文章标题 - 博客名称<br>独立页面 —&gt; 页面标题 - 博客名称<br>分类页面 —&gt; 分类名称 - 博客名称<br>标签页面 —&gt; 标签 - 博客名称</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;title&gt;</span><br><span class="line">&lt;?php if($this-&gt;is(&#x27;index&#x27;)): ?&gt;&lt;?php $this-&gt;options-&gt;title(); ?&gt;-&lt;?php $this-&gt;options-&gt;description(); ?&gt;</span><br><span class="line">&lt;?php elseif($this-&gt;is(&#x27;archive&#x27;)): ?&gt;&lt;?php $this-&gt;archiveTitle(&#x27;/&#x27;,&#x27;&#x27;,&#x27; - &#x27;); ?&gt;&lt;?php $this-&gt;options-&gt;title(); ?&gt;</span><br><span class="line">&lt;?php else: ?&gt;&lt;?php $this-&gt;archiveTitle(&#x27;&#x27;,&#x27;&#x27;,&#x27; - &#x27;); ?&gt;&lt;?php $this-&gt;options-&gt;title(); ?&gt;&lt;?php endif; ?&gt;</span><br><span class="line">&lt;/title&gt;</span><br></pre></td></tr></table></figure><h3 id="实现方法二"><a href="#实现方法二" class="headerlink" title="实现方法二"></a>实现方法二</h3><p>博客首页 —&gt; 博客名称<br>独立页面 —&gt; 页面标题 - 博客名称<br>分类页面 —&gt; 分类名称 - 博客名称<br>标签页面 —&gt; Tag: 标签 - 博客名称<br>存档页面 —&gt; 存档: XXXX年XX月 - 博客名称<br>其它（日志页）—&gt; 页面标题</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;title&gt;</span><br><span class="line">&lt;?php if ($this-&gt;is(&#x27;index&#x27;))&#123;$this-&gt;options-&gt;title();&#125;</span><br><span class="line">elseif($this-&gt;is(&#x27;page&#x27;))&#123;$this-&gt;archiveTitle(&#x27;&#x27;,&#x27;&#x27;,&#x27; - &#x27;);$this-&gt;options-&gt;title();&#125;</span><br><span class="line">elseif($this-&gt;is(&#x27;category&#x27;))&#123;$this-&gt;archiveTitle(&#x27;&#x27;,&#x27;&#x27;,&#x27; - &#x27;);$this-&gt;options-&gt;title();&#125;</span><br><span class="line">elseif($this-&gt;is(&#x27;tag&#x27;))&#123;$this-&gt;archiveTitle(&#x27;&#x27;,&#x27;Tag: &#x27;,&#x27; - &#x27;);$this-&gt;options-&gt;title();&#125;</span><br><span class="line">elseif($this-&gt;is(&#x27;archive&#x27;))&#123;$this-&gt;archiveTitle(&#x27;年&#x27;,&#x27;存档: &#x27;,&#x27;月 - &#x27;);$this-&gt;options-&gt;title();&#125;</span><br><span class="line">else&#123;$this-&gt;archiveTitle(&#x27;&#x27;,&#x27;&#x27;,&#x27;&#x27;);&#125;?&gt;</span><br><span class="line">&lt;/title&gt;</span><br></pre></td></tr></table></figure><h3 id="默认的实例"><a href="#默认的实例" class="headerlink" title="默认的实例"></a>默认的实例</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php $this-&gt;archiveTitle(&#x27;&#x27;,  &#x27;&#x27;,  &#x27; - &#x27;);  ?&gt;&lt;?php $this-&gt;options-&gt;title();  ?&gt;-&lt;?php $this-&gt;options-&gt;description();  ?&gt;</span><br></pre></td></tr></table></figure><blockquote><p>相关文章调用</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php $this-&gt;related(5)-&gt;to($relatedPosts); ?&gt;</span><br><span class="line">&lt;?php if ($relatedPosts-&gt;have()): ?&gt;</span><br><span class="line">&lt;?php while ($relatedPosts-&gt;next()): ?&gt;</span><br><span class="line">&lt;li&gt;</span><br><span class="line">&lt;a href=&quot;&lt;?php $relatedPosts-&gt;permalink(); ?&gt;&quot; title=&quot;&lt;?php $relatedPosts-&gt;title(); ?&gt;&quot;&gt;&lt;?php $relatedPosts-&gt;title(); ?&gt;&lt;/a&gt; &lt;small class=&quot;info&quot;&gt;&lt;strong&gt;&lt;?php $relatedPosts-&gt;author(); ?&gt;&lt;/strong&gt; post in&lt;?php $this-&gt;date(&#x27;Y-m-d H:i:s&#x27;); ?&gt;&lt;/small&gt;</span><br><span class="line">&lt;/li&gt;</span><br><span class="line">&lt;?php endwhile; ?&gt;</span><br><span class="line">&lt;?php else : ?&gt;</span><br><span class="line">&lt;li&gt;No Related Post&lt;/li&gt;</span><br><span class="line">&lt;?php endif; ?&gt;</span><br></pre></td></tr></table></figure><blockquote><p>输出Tags</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php $this-&gt;widget(&#x27;Widget_Metas_Tag_Cloud&#x27;) -&gt;parse(&#x27;&lt;span class=&quot;tagcloud&quot;&gt;&lt;a href=&quot;&#123;permalink&#125;&quot;&gt;&#123;name&#125;&lt;/span&gt;&lt;/a&gt;&#x27;); ?&gt;</span><br></pre></td></tr></table></figure><blockquote><p>分页只显示新文章、旧文章</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php $this-&gt;pageLink(&#x27;? 新文章&#x27;,&#x27;prev&#x27;); ?&gt;</span><br><span class="line">&lt;?php $this-&gt;pageLink(&#x27;旧文章 ?&#x27;,&#x27;next&#x27;); ?&gt;</span><br></pre></td></tr></table></figure><blockquote><p>测边栏每月归档后面显示文章数</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php $this-&gt;widget(&#x27;Widget_Contents_Post_Date&#x27;, &#x27;type=month&amp;format=Y年m月&#x27;)</span><br><span class="line">-&gt;parse(&#x27;&lt;li&gt;&lt;a href=&quot;&#123;permalink&#125;&quot;&gt;&#123;date&#125;&lt;/a&gt; &lt;span id=&quot;ignore&quot;&gt;(&#123;count&#125;)&lt;/span&gt;&lt;/li&gt;&#x27;); ?&gt;</span><br></pre></td></tr></table></figure><blockquote><p>复制文章时带版权</p></blockquote><h3 id="实例一"><a href="#实例一" class="headerlink" title="实例一"></a>实例一</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">    function copy_code(text) &#123;</span><br><span class="line">        if (window.clipboardData) &#123;</span><br><span class="line">        window.clipboardData.setData(&quot;Text&quot;, text)</span><br><span class="line">            alert(&quot;已经成功复制到剪贴板！&quot;);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">        var x=prompt(&#x27;你的浏览器可能不能正常复制\n请你手动进行：&#x27;,text);</span><br><span class="line">        &#125;</span><br><span class="line">        //return false;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="实例二"><a href="#实例二" class="headerlink" title="实例二"></a>实例二</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt; script type = &quot;text/javascript&quot; &gt;</span><br><span class="line">    document.body.oncopy = function () &#123;</span><br><span class="line">        setTimeout(function () &#123;</span><br><span class="line">            var text = clipboardData.getData(&quot;text&quot;);</span><br><span class="line">            if (text) &#123;</span><br><span class="line">                text = text +</span><br><span class="line">                    &quot;\r\n本篇文章来源于&lt;?php $this-&gt;options-&gt;title(); ?&gt;|&lt;?php $this-&gt;options-&gt;siteUrl(); ?&gt;,原文链接：&quot; +</span><br><span class="line">                    location.href;</span><br><span class="line">                clipboardData.setData(&quot;text&quot;, text);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, 100)</span><br><span class="line">    &#125; &lt;</span><br><span class="line">    /script</span><br></pre></td></tr></table></figure><blockquote><p>标签云</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php $this-&gt;widget(&#x27;Widget_Metas_Tag_Cloud&#x27;, &#x27;ignoreZeroCount=1&amp;limit=20′)-&gt;to($tags); ?&gt;</span><br><span class="line">&lt;?php while($tags-&gt;next()): ?&gt;</span><br><span class="line">&lt;a href=”&lt;?php $tags-&gt;permalink(); ?&gt;”&gt;&lt;?php $tags-&gt;name(); ?&gt;&lt;/a&gt;</span><br><span class="line">&lt;?php endwhile; ?&gt;</span><br></pre></td></tr></table></figure><blockquote><p>最新文章</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php $this-&gt;widget(&#x27;Widget_Contents_Post_Recent&#x27;)-&gt;to($post); ?&gt;</span><br><span class="line">&lt;?php while($post-&gt;next()): ?&gt;</span><br><span class="line">&lt;a href=”&lt;?php $post-&gt;permalink(); ?&gt;” title=”&lt;?php $post-&gt;title(); ?&gt;”&gt;</span><br><span class="line">&lt;?php $post-&gt;title(25, &#x27;…&#x27;); ?&gt;&lt;/a&gt;</span><br><span class="line">&lt;?php endwhile; ?&gt;</span><br></pre></td></tr></table></figure><blockquote><p>相关内容</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php $this-&gt;related(5)-&gt;to($relatedPosts); ?&gt;</span><br><span class="line">&lt;?php while ($relatedPosts-&gt;next()): ?&gt;</span><br><span class="line">&lt;a href=”&lt;?php $relatedPosts-&gt;permalink(); ?&gt;” title=”</span><br><span class="line">&lt;?php $relatedPosts-&gt;title(); ?&gt;”&gt;&lt;?php $relatedPosts-&gt;title(); ?&gt;&lt;/a&gt;</span><br><span class="line">&lt;small&gt;&lt;strong&gt;&lt;?php $relatedPosts-&gt;author(); ?&gt;&lt;/strong&gt; post in</span><br><span class="line">&lt;?php $this-&gt;date(&#x27;Y-m-d H:i:s&#x27;); ?&gt;&lt;/small&gt;</span><br><span class="line">&lt;?php endwhile; ?&gt;</span><br></pre></td></tr></table></figure><blockquote><p>日期归档显示统计数量</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php $this-&gt;widget(&#x27;Widget_Contents_Post_Date&#x27;, &#x27;type=month&amp;format=F Y&#x27;)-&gt;parse(&#x27;&lt;li&gt;&lt;a href=”&#123;permalink&#125;”&gt;&#123;date&#125;&lt;/a&gt; (&#123;count&#125;)&lt;/li&gt;&#x27;); ?&gt;</span><br></pre></td></tr></table></figure><blockquote><p>友情链接 要安装插件</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php PageToLinks::output(&#x27;links&#x27;, &#x27;h3&#x27;, &#x27;ul&#x27;); ?&gt;</span><br></pre></td></tr></table></figure><blockquote><p>头部关键信息</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php $this-&gt;keywords(&#x27;_&#x27;); ?&gt; //关键词</span><br><span class="line">&lt;?php $this-&gt;options-&gt;title(); ?&gt; //站点名称</span><br><span class="line">&lt;?php $this-&gt;options-&gt;description(); ?&gt; //站点描述</span><br><span class="line">&lt;?php $this-&gt;archiveTitle(); ?&gt; //标题</span><br><span class="line">&lt;?php $this-&gt;options-&gt;themeUrl(&#x27;ie.css&#x27;); ?&gt; //模板路径</span><br><span class="line">&lt;?php $this-&gt;options-&gt;siteUrl(); ?&gt; //主页网址</span><br><span class="line">&lt;?php $this-&gt;options-&gt;feedUrl(); ?&gt;</span><br><span class="line">&lt;?php $this-&gt;options-&gt;commentsFeedUrl(); ?&gt;</span><br><span class="line">&lt;?php $this-&gt;pageNav(); ?&gt; //分页</span><br><span class="line">&lt;?php $this-&gt;options-&gt;generator(); ?&gt; //版本号</span><br></pre></td></tr></table></figure><blockquote><p>文章页面相关参数调用</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php $this-&gt;title(); ?&gt; //标题</span><br><span class="line">&lt;?php $this-&gt;category(&#x27;,&#x27;); ?&gt; //分类</span><br><span class="line">&lt;?php $this-&gt;tags(&#x27;, &#x27;, true, &#x27;&#x27;); ?&gt; //标签</span><br><span class="line">&lt;?php $this-&gt;date(&#x27;F jS, Y&#x27;) ?&gt; //时间</span><br><span class="line">&lt;?php $this-&gt;content(); ?&gt; //内容</span><br><span class="line">&lt;?php $this-&gt;thePrev(&#x27;&amp;laquo; %s&#x27;, &#x27;&#x27;); ?&gt; //上一篇</span><br><span class="line">&lt;?php $this-&gt;theNext(&#x27;%s &amp;raquo;&#x27;, &#x27;&#x27;); ?&gt; //下一篇</span><br></pre></td></tr></table></figure><blockquote><p>全部文章列表代码</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php $this-&gt;widget(&#x27;Widget_Contents_Post_Recent&#x27;, &#x27;pageSize=10000&#x27;)-&gt;parse(&#x27;&lt;li&gt;&#123;year&#125;-&#123;month&#125;-&#123;day&#125; : &lt;a href=&quot;&#123;permalink&#125;&quot;&gt;&#123;title&#125;&lt;/a&gt;&lt;/li&gt;&#x27;); ?&gt;</span><br></pre></td></tr></table></figure><blockquote><p>全部标签集列表</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php $this-&gt;widget(&#x27;Widget_Metas_Tag_Cloud&#x27;)</span><br><span class="line">     -&gt;to($taglist); ?&gt;&lt;?php while($taglist-&gt;next()): ?&gt;</span><br><span class="line">&lt;li&gt;&lt;a href=&quot;&lt;?php $taglist-&gt;permalink(); ?&gt;&quot; title=&quot;&lt;?php $taglist-&gt;name(); ?&gt;&quot;&gt;&lt;?php $taglist-&gt;name(); ?&gt;&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">&lt;?php endwhile; ?&gt;</span><br></pre></td></tr></table></figure><blockquote><p>全部日志数量</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php $stat = Typecho_Widget::widget(&#x27;Widget_Stat&#x27;) ;echo &quot;.$stat-&gt;PublishedPostsNum.&quot;; ?&gt;</span><br></pre></td></tr></table></figure><blockquote><p>评论输出</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php $comments-&gt;author(true); ?&gt;//输出评论人昵称，参数true为带链接的，false为不带链接的；</span><br><span class="line">//ps.其实还有一个参数，类型也是布尔，作用是是否带noFollow</span><br><span class="line">&lt;?php $comments-&gt;excerpt(18, &#x27;...&#x27;); ?&gt;//输出评论摘要，第一个参数是要截取的长度，第二个是截取后的字符串；</span><br><span class="line">&lt;?php $comments-&gt;permalink(); ?&gt;//获取当前评论链接，木有参数；</span><br><span class="line">&lt;?php $comments-&gt;title(); ?&gt;//获取当前评论标题，同样木有参数；</span><br><span class="line">&lt;?php $comments-&gt;dateWord(); ?&gt;//输出词义化日期，就是输出“3小时前”、“三天前”之内的；</span><br><span class="line">&lt;?php $comments-&gt;gravatar(); ?&gt;//调用gravatar输出用户头像，有两个参数，第一个是头像尺寸，默认是32，第二个是默认输出</span><br></pre></td></tr></table></figure><blockquote><p>Typecho文章标题字数限制</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php $this-&gt;widget(&#x27;Widget_Contents_Post_Recent&#x27;)-&gt;to($post); ?&gt;</span><br><span class="line">&lt;?php while($post-&gt;next()): ?&gt;</span><br><span class="line">&lt;li&gt;&lt;a href=&quot;&lt;?php $post-&gt;permalink(); ?&gt;&quot;&gt;&lt;?php $post-&gt;title(25, &#x27;...&#x27;); ?&gt;&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">&lt;?php endwhile; ?&gt;</span><br></pre></td></tr></table></figure><blockquote><p>侧栏评论忽略博主评论</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php $this-&gt;widget(&#x27;Widget_Comments_Recent&#x27;,&#x27;ignoreAuthor=true&#x27;)-&gt;to($comments); ?&gt;</span><br></pre></td></tr></table></figure><blockquote><p>调用某分类文章，pageSize是数量，mid是分类号</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php $this-&gt;widget(&#x27;Widget_Archive@index&#x27;, &#x27;pageSize=6&amp;type=category&#x27;, &#x27;mid=1&#x27;)</span><br><span class="line">   -&gt;parse(&#x27;&lt;li&gt;&lt;a href=&quot;&#123;permalink&#125;&quot;&gt;&#123;title&#125;&lt;/a&gt;&lt;/li&gt;&#x27;); ?&gt;</span><br></pre></td></tr></table></figure><blockquote><p>typecho自动显示摘要</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php $this-&gt;excerpt(180); ?&gt;</span><br></pre></td></tr></table></figure><blockquote><p>分离文章的评论和引用通告</p></blockquote><p>打开模板的 comments.php 文件，找到通篇的核心语句</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php $this-&gt;comments()-&gt;to($comments); ?&gt;</span><br></pre></td></tr></table></figure><p>这条语句控制着评论的类型，他的参数如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php $this→comments()→to($comments); ?&gt;  显示全部（默认） </span><br><span class="line">&lt;?php $this→comments(&#x27;comment&#x27;)→to($comments); ?&gt;  只显示 comment </span><br><span class="line">&lt;?php $this→comments(&#x27;trackback&#x27;)→to($trackbacks); ?&gt;  只显示 trackback </span><br><span class="line">&lt;?php $this→comments(&#x27;pingback&#x27;)→to($pingbacks); ?&gt;  只显示 pingback </span><br></pre></td></tr></table></figure><p>为了分开，我们开始对 comments.php 做如下修改，首先只显示评论</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php $this-&gt;comments(&#x27;comment&#x27;)-&gt;to($comments); ?&gt;</span><br><span class="line">&lt;?php if ($comments-&gt;have()) : ?&gt;</span><br><span class="line"> &lt;ol&gt;</span><br><span class="line"> &lt;?php while ($comments-&gt;next()) : ?&gt;</span><br><span class="line"> &lt;li id=&quot;&lt;?php $comments-&gt;theId() ?&gt;&quot;&gt;</span><br><span class="line">  &lt;div class=&quot;comment_data&quot;&gt;</span><br><span class="line">   &lt;?php $comments-&gt;gravatar(32, &#x27;&#x27;, &#x27;&#x27;, &#x27;avatar&#x27;); ?&gt;</span><br><span class="line">   &lt;span&gt;&lt;?php $comments-&gt;author() ?&gt;&lt;/span&gt; Says:&lt;br /&gt;</span><br><span class="line">   &lt;?php $comments-&gt;date(&#x27;F jS, Y&#x27;); ?&gt; at &lt;?php $comments-&gt;date(&#x27;h:i a&#x27;); ?&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;div class=&quot;comment_text&quot;&gt;&lt;?php $comments-&gt;content() ?&gt;&lt;/div&gt;</span><br><span class="line"> &lt;/li&gt;</span><br><span class="line"> &lt;?php endwhile; ?&gt;</span><br><span class="line"> &lt;/ol&gt;</span><br><span class="line">&lt;?php endif; ?&gt;</span><br></pre></td></tr></table></figure><p>然后输出 pingback，pingback 并不需要那么多的展示内容，假设只展示标题和日期</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php $this-&gt;comments(&#x27;pingback&#x27;)-&gt;to($pingbacks); ?&gt;&lt;!-- 关键 --&gt;</span><br><span class="line">&lt;?php if ($pingbacks-&gt;have()) : ?&gt;</span><br><span class="line"> &lt;h3&gt;Pingbacks&lt;/h3&gt;</span><br><span class="line"> &lt;ol&gt;</span><br><span class="line"> &lt;?php while ($pingbacks-&gt;next()) : ?&gt;</span><br><span class="line">  &lt;li id=&quot;&lt;?php $pingbacks-&gt;theId() ?&gt;&quot;&gt;</span><br><span class="line">   &lt;?php $pingbacks-&gt;author() ?&gt; &lt;?php $pingbacks-&gt;date(&#x27;F jS, Y&#x27;); ?&gt;</span><br><span class="line">  &lt;/li&gt;</span><br><span class="line"> &lt;?php endwhile; ?&gt;</span><br><span class="line"> &lt;/ol&gt;</span><br><span class="line">&lt;?php endif; ?&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Typecho </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typecho </tag>
            
            <tag> Javascript </tag>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>分享几款常用网页下载利器</title>
      <link href="/posts/ad908b4d.html"/>
      <url>/posts/ad908b4d.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->有时候想要下载一下资源，无奈没有会员账号无法下载资料。可以用下面来解决你的一下难题！<p>需要的朋友们 可以收藏一下 可以选择收藏网址</p><p>也可以选择记住跳转方法 还挺简单的</p><blockquote><p>百度网盘下载利器</p></blockquote><p><img src="https://img.jinjun.top/images/usr/uploads/2019/09/1568822501.png" alt="百度网盘下载.png"></p><h3 id="操作方法："><a href="#操作方法：" class="headerlink" title="操作方法："></a>操作方法：</h3><ul><li>进入链接：<a href="https://www.baiduwp.com/#from_img.jinjun.top/images">https://www.baiduwp.com/</a></li></ul><ol><li><p>将网盘链接黏贴上去即可</p></li><li><p>在百度网盘链接中 在baidu后面加上wp即可跳转 例如<code>https://pan.baidu.com/s/1r0eQVPvJCJHZi92T-UZHUg</code>改成<code>https://pan.baidu.com/s/1r0eQVPvJCJHZi92T-UZHUg</code> 填写提取码即可下载</p></li></ol><blockquote><p>文库VV下载利器</p></blockquote><p><img src="https://img.jinjun.top/images/usr/uploads/2019/09/1568822789.png" alt="文库vv下载.png"></p><p>操作方法：</p><ul><li>进入链接：<a href="http://wenku.baiduvvv.com/doc/#from_img.jinjun.top/images">http://wenku.baiduvvv.com/doc/</a></li></ul><ol><li><p>将需要下载的百度文库链接放入框中 选择导出方式  下载即可</p></li><li><p>在文库链接的baidu后面加上vvv 例如 将<code>https://wenku.baidu.com/view/fead74306f1aff00bfd51eaf.html</code>改成：<code>https://wenku.baiduvv.com/view/fead74306f1aff00bfd51eaf.html</code> 就可跳转了</p></li></ol><blockquote><p>豆丁下载利器</p></blockquote><p><img src="https://img.jinjun.top/images/usr/uploads/2019/09/1568823267.png" alt="豆丁下载.png"></p><h3 id="操作方法：-1"><a href="#操作方法：-1" class="headerlink" title="操作方法："></a>操作方法：</h3><ul><li>进入链接：<a href="https://www.docin365.com/#from_img.jinjun.top/images">https://www.docin365.com/</a></li></ul><ol start="2"><li><p>将想要下载的豆瓣文档链接放入框中 下载即可</p></li><li><p>在docin后面加上365 例如<code>https://www.docin.com/p-94528594.html&amp;free=1</code>改成<code>https://www.docin365.com/p-94528594.html&amp;free=1</code>即可跳转</p></li></ol><blockquote><p>上学吧查答案利器 </p></blockquote><p><img src="https://img.jinjun.top/images/usr/uploads/2019/09/1568823586.png" alt="上学吧答案查询.png"></p><h3 id="操作方法：-2"><a href="#操作方法：-2" class="headerlink" title="操作方法："></a>操作方法：</h3><ul><li>进入链接：<a href="https://www.shangxueba365.com/#from_img.jinjun.top/images">https://www.shangxueba365.com/</a></li></ul><ol><li><p>将问题的链接放入框中 即可查看答案</p></li><li><p>在链接shangxueba后面加上365 例如：<code>https://www.shangxueba.com/ask/14376581.html</code>改成<code>https://www.shangxueba365.com/ask/14376581.html</code>即可跳转</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 资源分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 下载 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>宝塔面板nginx编译云锁防御模块的小坑</title>
      <link href="/posts/cd069d28.html"/>
      <url>/posts/cd069d28.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->今天新安装的宝塔面板，想编译云锁模块。怎么也编译不上，提示这个。原来是pcra在做怪。修改到pcre安装目录就可以了。问题完美解决。记录一下<h3 id="报错信息如下："><a href="#报错信息如下：" class="headerlink" title="报错信息如下："></a>报错信息如下：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">make -f objs/Makefile</span><br><span class="line">make[1]: Entering directory `/work/tengine-2.3.2&#x27;</span><br><span class="line">cd /pcre-8.43 \</span><br><span class="line">&amp;&amp; if [ -f Makefile ]; then make distclean; fi \</span><br><span class="line">&amp;&amp; CC=&quot;cc&quot; CFLAGS=&quot;-O2 -fomit-frame-pointer -pipe &quot; \</span><br><span class="line">./configure --disable-shared </span><br><span class="line">/bin/sh: line 0: cd: /pcre-8.43: No such file or directory</span><br><span class="line">make[1]: *** [/pcre-8.43/Makefile] Error 1</span><br><span class="line">make[1]: Leaving directory `/work/tengine-2.3.2&#x27;</span><br><span class="line">make: *** [build] Error 2</span><br></pre></td></tr></table></figure><h3 id="编译信息参数："><a href="#编译信息参数：" class="headerlink" title="编译信息参数："></a>编译信息参数：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./configure --user=www --group=www --prefix=/www/server/nginx --add-module=/www/server/nginx/src/ngx_devel_kit --add-module=/www/server/nginx/src/lua_nginx_module --add-module=/www/server/nginx/src/ngx_cache_purge --add-module=/www/server/nginx/src/nginx-sticky-module --with-openssl=/www/server/nginx/src/openssl --with-pcre=/pcre-8.43 --with-http_v2_module --with-stream --with-stream_ssl_module --with-http_stub_status_module --with-http_ssl_module --with-http_image_filter_module --with-http_gzip_static_module --with-http_gunzip_module --with-ipv6 --with-http_sub_module --with-http_flv_module --with-http_addition_module --with-http_realip_module --with-http_mp4_module --with-ld-opt=-Wl,-E --with-cc-opt=-Wno-error --with-ld-opt=-ljemalloc --add-module=/work/nginx-plugin-master</span><br></pre></td></tr></table></figure><p>这里看报错信息发现一个参数是pcre的地址，由错误 <code>cd: /pcre-8.43: No such file or directory</code> 可以看出来是，应该是没有找到pcre-8.43的路径，看一下磁盘根目录，没有发现pcre安装的目录，凭我感觉，宝塔nginx已经安装了，应该存在pcre-8.43目录。于是我在宝塔的安装目录下找到了。</p><p><img src="https://img.jinjun.top/images/usr/uploads/2019/09/1568695115.png" alt="宝塔编译.png"></p><p>找到了pcre就不用重新安装一个，直接修改编译参数的 <code>--with-pcre=/pcre-8.43</code> 改为 <code>--with-pcre=/www/server/nginx/src/pcre-8.43</code> 重新 <code>./configure</code> 和 <code>make</code></p><p><img src="https://img.jinjun.top/images/usr/uploads/2019/09/1568695643.png" alt="nginx make.png"></p><p>编译成功，替换掉原来的nginx 重启一下就可以了。</p>]]></content>
      
      
      <categories>
          
          <category> 建站知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Tenginx </tag>
            
            <tag> 宝塔面板 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于宝塔Linux面板的小飞机可视化管理插件</title>
      <link href="/posts/a452a583.html"/>
      <url>/posts/a452a583.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->**前提需要**：宝塔Linux面板、Centos/Ubuntu<p>##安装：</p><p>下载插件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/lizhongnian/btpanel-ss.git</span><br></pre></td></tr></table></figure><p>进入目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd btpanel-ss</span><br></pre></td></tr></table></figure><p>执行安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash install.sh install</span><br></pre></td></tr></table></figure><p>卸载： 先在可视化界面中删除所有用户端口,再执行以下命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash install.sh uninstall</span><br></pre></td></tr></table></figure><p>##使用：</p><p>直接登陆宝塔Linux面板 &gt;&gt; 打开软件列表页面 &gt;&gt; 转到列表第三页即可看到新安装的shadowsocks插件<br>如下图：</p><p><img src="https://img.jinjun.top/images/usr/uploads/2019/09/1568689342.png" alt="小飞机.png"></p><p>点击设置打开下图页面：</p><p><img src="https://img.jinjun.top/images/usr/uploads/2019/09/1568689479.png" alt="小飞机配置.png"></p><p>设置 <strong>端口</strong> 和 <strong>密码</strong></p><p>##常见问题</p><p><strong>无法连接  请检查端口是不是放行 服务器防火墙面板 看是不是放行</strong></p><p><img src="https://img.jinjun.top/images/usr/uploads/2019/09/1568689531.png" alt="小飞机设置.png"></p><h2><div style="color:#F00">请遵守中国乃至其他国家相关法律法规 文明开车 做一个遵纪守法的老司机</div></h2>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 宝塔面板 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux系统创建swap交换分区</title>
      <link href="/posts/714c5d07.html"/>
      <url>/posts/714c5d07.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->> 前言<p>最近购买了好几个小鸡准备拿来做CDN加速使用，但是内存都是512M的。担心在使用Nginx可能会崩溃，所以要适当的调一下SWAP分区，让应用更稳定的运行。其实就是把硬盘上的一部分空间来做swap（windows也有这一项技术：虚拟内存），将系统内的非活跃内存换页到swap，来提高系统的可用内存。</p><h3 id="创建swap分区"><a href="#创建swap分区" class="headerlink" title="创建swap分区"></a>创建swap分区</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#新建一个文件专门用于swap分区</span><br><span class="line">dd if=/dev/zero of=/swapfile bs=1M count=2024</span><br><span class="line">#也可以用fallocate这种方法来创建  </span><br><span class="line">#fallocate -l 2G /swapfile</span><br><span class="line"></span><br><span class="line">#设置swap交换区</span><br><span class="line">mkswap /swapfile</span><br><span class="line"></span><br><span class="line">#更改swap权限</span><br><span class="line">chmod 600 /swapfile</span><br></pre></td></tr></table></figure><h3 id="启用分区"><a href="#启用分区" class="headerlink" title="启用分区"></a>启用分区</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#启用swap交换分区</span><br><span class="line">sawpon /swapfile</span><br><span class="line"></span><br><span class="line">#查看内存状态</span><br><span class="line">free -m</span><br><span class="line"></span><br><span class="line">#设置开机自启</span><br><span class="line">vim /etc/fstab</span><br><span class="line"></span><br><span class="line">#在/etc/fstab添加下面这段内容</span><br><span class="line">/swapfile swap swap defaults 0 0</span><br><span class="line">或者直接输入</span><br><span class="line">echo &quot;/data/swap swap swap defaults    0  0&quot; &gt;&gt; /etc/fstab</span><br></pre></td></tr></table></figure><h3 id="查看内核参数-调vm-swappiness参数"><a href="#查看内核参数-调vm-swappiness参数" class="headerlink" title="查看内核参数 调vm.swappiness参数"></a>查看内核参数 调vm.swappiness参数</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">cat /proc/sys/vm/swappiness</span><br><span class="line">sysctl -a | grep swappiness</span><br><span class="line">#临时修改</span><br><span class="line">sysctl -w vm.swappiness=50</span><br><span class="line"></span><br><span class="line">#永久修改</span><br><span class="line">vi + /etc/sysctl.conf</span><br><span class="line"># 添加</span><br><span class="line">vm.swappiness=50</span><br><span class="line">## 让配置生效 </span><br><span class="line">sysctl -p </span><br></pre></td></tr></table></figure><p>这里需要简单说明下,在Linux系统中,可以通过查看<code>/proc/sys/vm/swappiness</code>内容的值来确定系统对SWAP分区的使用原则。当swappiness内容的值为0时,表示最大限度地使用物理内存,物理内存使用完毕后,才会使用SWAP分区。当swappiness内容的值为100时,表示积极地使用SWAP分区,并且把内存中的数据及时地置换到SWAP分区。注：若想永久修改，则编辑<code>/etc/sysctl.conf</code>文件<br>默认值为 0，表示需要在物理内存使用完毕后才会使用 SWAP 分区。<br>我们这里设置的50,就表示当物理内存少于50%时便使用交换分区。</p><h3 id="关闭或删除swap分区"><a href="#关闭或删除swap分区" class="headerlink" title="关闭或删除swap分区"></a>关闭或删除swap分区</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#关闭swap分区</span><br><span class="line">swapoff /data/swap   </span><br><span class="line"># swapoff -a &gt;/dev/null</span><br><span class="line"></span><br><span class="line">#删除swap分区</span><br><span class="line">rm -f /swapfile</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 建站知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Youtube励志Mv，I Can I Can！</title>
      <link href="/posts/ab79cc1d.html"/>
      <url>/posts/ab79cc1d.html</url>
      
        <content type="html"><![CDATA[<!--markdown--> 为什么要推荐这篇文章<p>前几天逛YouTube 无疑看到这个视频 看到这个视频蛮有感触 就现在缓存下来 分享给你们</p><h4 id="视频简介"><a href="#视频简介" class="headerlink" title="视频简介"></a>视频简介</h4><p>短片是YouTube励志红人账号Mateusz M的作品，《Unbroken》，Mateusz M制作分享一些电影剪辑和励志演讲结合的视频，再给画面配上或激荡人心或柔缓抒情的音乐，视频便具有了鼓舞人心的力量。</p><p><video width="658" height="444" src="https://img.jinjun.top/images/usr/uploads/xiaojun.mp4" controls="controls" poster="https://www.jinjun.top/img/4008215693.jpg" preload="auto"></video></p><p>短片由几位演讲家Les Brown、Eric Thomas、Steve Jobs、 Louis Zamperini的演讲组成，出现的电影画面有《Jobs》《Her》，背景音乐Confidential Music - Archangel, Unashamed。</p><p>我们看不到演讲家的脸，看不到他们的肢体动作和表情，但是他们的声音是饱含激情的。每一句话都掷地有声，每一个词都铿锵有力，每一声呐喊都好像是当头棒喝。也许这正是我们所需要的，我们需要这样不留情面的声音，戳破我们心存的侥幸，唤醒被催眠的信念，重燃自己的意志力！</p>]]></content>
      
      
      <categories>
          
          <category> 资源分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 视频 </tag>
            
            <tag> 演说家 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Typecho利用HTML5代码实现本地视频播放</title>
      <link href="/posts/719cadaa.html"/>
      <url>/posts/719cadaa.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->#### HTML5 Video标签的使用<p>钧言自用Video标签含有src、poster、preload、controls、width、height等几个属性， 以及一个内部使用的标签。</p><ul><li>src属性和poster属性</li></ul><p>你能想象src属性是用来干啥的。跟标签的一样，这个属性用于指定视频的地址。而poster属性用于指定一张图片，在当前视频数据无效时显示（预览图）。视频数据无效可能是视频正在加载，可能是视频地址错误等等。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;video width=<span class="string">&quot;658&quot;</span> height=<span class="string">&quot;444&quot;</span> src=<span class="string">&quot;https://xiaojun.org/usr/xxx.mp4&quot;</span>poster=<span class="string">&quot;https://xiaojun.org/usr/xxx.jpg&quot;</span>&gt;&lt;/video&gt;</span><br></pre></td></tr></table></figure><ul><li>preload属性</li></ul><p>这个属性也能通过名字了解用处，此属性用于定义视频是否预加载。属性有三个可选择的值：none、metadata、auto。如果不使用此属性，默认为auto。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;video width=<span class="string">&quot;658&quot;</span> height=<span class="string">&quot;444&quot;</span> src=<span class="string">&quot;https://xiaojun.org/usr/xxx.mp4&quot;</span> poster=<span class="string">&quot;https://xiaojun.org/usr/xxx.jpg&quot;</span> preload=<span class="string">&quot;auto&quot;</span>&gt;&lt;/video&gt;</span><br></pre></td></tr></table></figure><p>None：不进行预加载。使用此属性值，可能是页面制作者认为用户不期望此视频，或者减少HTTP请求。</p><p>Metadata：部分预加载。使用此属性值，代表页面制作者认为用户不期望此视频，但为用户提供一些元数据。</p><p>Auto：全部预加载。</p><ul><li>controls属性</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;video width=<span class="string">&quot;658&quot;</span> height=<span class="string">&quot;444&quot;</span> poster=<span class="string">&quot;https://xiaojun.org/usr/xxx.jpg&quot;</span> preload=<span class="string">&quot;none&quot;</span> controls=<span class="string">&quot;controls&quot;</span>&gt;&lt;source src=<span class="string">&quot;https://xiaojun.org/usr/xxx.mp4&quot;</span> /&gt;&lt;/video&gt;</span><br></pre></td></tr></table></figure><p>Controls属性用于向浏览器指明页面制作者没有使用脚本生成播放控制器，需要浏览器启用本身的播放控制栏。</p><p>控制栏须包括播放暂停控制，播放进度控制，音量控制等等。</p><ul><li>width属性和height属性</li></ul><p>width属性为视频的宽度，height属性为视频的高度，此标签不做过多讲解。</p><ul><li>source标签</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;video width=<span class="string">&quot;658&quot;</span> height=<span class="string">&quot;444&quot;</span> poster=<span class="string">&quot;https://xiaojun.org/usr/xxx.jpg&quot;</span> preload=<span class="string">&quot;none&quot;</span> controls=<span class="string">&quot;controls&quot;</span>&gt;&lt;source src=<span class="string">&quot;https://xiaojun.org/usr/xxx.mp4&quot;</span> /&gt;&lt;/video&gt;</span><br></pre></td></tr></table></figure><p>Source标签用于给媒体（因为audio标签同样可以包含此标签，所以这儿用媒体，而不是视频）指定多个可选择的（浏览器最终只能选一个）文件地址，且只能在媒体标签没有使用src属性时使用。</p><p>浏览器按source标签的顺序检测标签指定的视频是否能够播放（可能是视频格式不支持，视频不存在等等），如果不能播放，换下一个。此方法多用于兼容不同的浏览器。Source标签本身不代表任何含义，不能单独出现。</p><p>此标签包含src、type、media三个属性。</p><p>src属性：用于指定媒体的地址，和video标签的一样。</p><p>Type属性：用于说明src属性指定媒体的类型，帮助浏览器在获取媒体前判断是否支持此类别的媒体格式。</p><p>Media属性：用于说明媒体在何种媒介中使用，不设置时默认值为all，表示支持所有媒介。</p><table><thead><tr><th>属性</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>autoplay</td><td>autoplay</td><td>如果出现该属性，则视频在就绪后马上播放。</td></tr><tr><td>controls</td><td>controls</td><td>如果出现该属性，则向用户显示控件，比如播放按钮。</td></tr><tr><td>loop</td><td>loop</td><td>如果出现该属性，则当媒介文件完成播放后再次开始播放。</td></tr><tr><td>muted</td><td>muted</td><td>规定视频的音频输出应该被静音。</td></tr><tr><td>poster</td><td>URL</td><td>规定视频下载时显示的图像，或者在用户点击播放按钮前显示的图像。</td></tr><tr><td>preload</td><td>preload</td><td>如果出现该属性，则视频在页面加载时进行加载，并预备播放。如果使用 “autoplay”，则忽略该属性。</td></tr><tr><td>src</td><td>url</td><td>要播放的视频的 URL。</td></tr><tr><td>height</td><td>pixels</td><td>设置视频播放器的高度。</td></tr><tr><td>width</td><td>pixels</td><td>设置视频播放器的宽度。</td></tr></tbody></table><ul><li>一个完整的例子</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;video width=<span class="string">&quot;658&quot;</span> height=<span class="string">&quot;444&quot;</span> poster=<span class="string">&quot;https://xiaojun.org/usr/xxx.jpg&quot;</span> preload=<span class="string">&quot;none&quot;</span> controls=<span class="string">&quot;controls&quot;</span>&gt;&lt;source src=<span class="string">&quot;https://xiaojun.org/usr/xxx.mp4&quot;</span> /&gt;&lt;/video&gt;</span><br></pre></td></tr></table></figure><p>注：自行替换链接为自己的域名链接地址！</p>]]></content>
      
      
      <categories>
          
          <category> Typecho </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typecho </tag>
            
            <tag> HTML </tag>
            
            <tag> 视频 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Typecho的伪静态规则</title>
      <link href="/posts/db6e4fa8.html"/>
      <url>/posts/db6e4fa8.html</url>
      
        <content type="html"><![CDATA[<!--markdown--> <ul><li>Apache&#x2F;kangle (.htaccess)</li></ul><p>这里带着自动转跳到https，如果不需要可以删除。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;IfModule mod_rewrite.c&gt;</span><br><span class="line">RewriteEngine On</span><br><span class="line">RewriteBase /</span><br><span class="line">RewriteCond %&#123;REQUEST_FILENAME&#125; !-f</span><br><span class="line">RewriteCond %&#123;REQUEST_FILENAME&#125; !-d</span><br><span class="line">RewriteRule ^(.*)$ /index.php/$1 [L]</span><br><span class="line">RewriteCond %&#123;SERVER_PORT&#125; !^443$</span><br><span class="line">RewriteRule ^.*$ https://%&#123;SERVER_NAME&#125;%&#123;REQUEST_URI&#125; [L,R]</span><br><span class="line">&lt;/IfModule&gt;</span><br></pre></td></tr></table></figure><p>如果不是开启SSL访问，请删除以下代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">RewriteCond %&#123;SERVER_PORT&#125; !^443$</span><br><span class="line">RewriteRule ^.*$ https://%&#123;SERVER_NAME&#125;%&#123;REQUEST_URI&#125; [L,R]</span><br></pre></td></tr></table></figure><p>如果不带www访问到带www站点</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">RewriteCond %&#123;HTTP_HOST&#125; ^jinjun.top</span><br><span class="line">RewriteRule (.*) https://img.jinjun.top/images/$1 [R=301,L]</span><br></pre></td></tr></table></figure><ul><li>Nginx</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if (!-e $request_filename) &#123;</span><br><span class="line">rewrite ^(.*)$ /index.php$1 last;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>SEA</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">name: taoblogs</span><br><span class="line">version: 1</span><br><span class="line">#cron:</span><br><span class="line"># - description: cron test</span><br><span class="line"># url: index.php</span><br><span class="line"># schedule: every 43 mins</span><br><span class="line"># timezone: Beijing</span><br><span class="line">handle:</span><br><span class="line"> - rewrite: if(!is_dir() &amp;&amp; !is_file()) goto &quot;index.php?%&#123;QUERY_STRING&#125;&quot;</span><br></pre></td></tr></table></figure><ul><li>IIS 下的 httpd.ini</li></ul><p>不完美，自己看着修改</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[ISAPI_Rewrite]</span><br><span class="line"># 3600 = 1 hour</span><br><span class="line">CacheClockRate 3600</span><br><span class="line">RepeatLimit 32</span><br><span class="line"># 中文tag解决</span><br><span class="line">RewriteRule /tag/(.*) /index\.php\?tag=$1</span><br><span class="line"># sitemapxml</span><br><span class="line">RewriteRule /sitemap.xml /sitemap.xml [L]</span><br><span class="line">RewriteRule /favicon.ico /favicon.ico [L]</span><br><span class="line"># 内容页</span><br><span class="line">RewriteRule /(.*).html /index.php/$1.html [L]</span><br><span class="line"># 评论</span><br><span class="line">RewriteRule /(.*)/comment /index.php/$1/comment [L]</span><br><span class="line"># 分类页</span><br><span class="line">RewriteRule /category/(.*) /index.php/category/$1 [L]</span><br><span class="line"># 分页</span><br><span class="line">RewriteRule /page/(.*) /index.php/page/$1 [L]</span><br><span class="line"># 搜索页</span><br><span class="line">RewriteRule /search/(.*) /index.php/search/$1 [L]</span><br><span class="line"># feed</span><br><span class="line">RewriteRule /feed/(.*) /index.php/feed/$1 [L]</span><br><span class="line"># 日期归档</span><br><span class="line">RewriteRule /2(.*) /index.php/2$1 [L]</span><br><span class="line"># 上传图片等</span><br><span class="line">RewriteRule /action(.*) /index.php/action$1 [L]</span><br></pre></td></tr></table></figure><p>##注：记得到后台永久链接设置里，启用地址重写功能</p>]]></content>
      
      
      <categories>
          
          <category> 建站知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typecho </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML在线可视化编辑源码</title>
      <link href="/posts/2a798f5b.html"/>
      <url>/posts/2a798f5b.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->在线可视化编辑支持外链，支持html,php等，扒来的。<p>在线修改代码，源码只有一个html，其它外链都是Bootstrap的。</p><blockquote><p>预览</p></blockquote><p><img src="https://img.jinjun.top/images/usr/uploads/2019/09/1568218379.png" alt="可视化编辑.png"></p><p><strong>新建一个文件，可html,php后缀，复制下面代码放入访问域名+新建文件全称。</strong></p><blockquote><p>源代码</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>在线可视化编辑-钧言<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;//cdn.bootcss.com/bootstrap/3.3.7/css/bootstrap.min.css&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;//cdn.bootcss.com/codemirror/5.2.0/codemirror.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;//cdn.bootcss.com/codemirror/5.2.0/codemirror.min.css&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;//cdn.bootcss.com/codemirror/5.2.0/mode/htmlmixed/htmlmixed.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;//cdn.bootcss.com/codemirror/5.2.0/mode/css/css.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;//cdn.bootcss.com/codemirror/5.2.0/mode/javascript/javascript.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;//cdn.bootcss.com/codemirror/5.2.0/mode/xml/xml.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;//cdn.bootcss.com/codemirror/5.2.0/addon/edit/closetag.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;//cdn.bootcss.com/codemirror/5.2.0/addon/edit/closebrackets.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--[if lt IE 9]&gt;</span></span><br><span class="line"><span class="comment">    &lt;script src=&quot;//cdn.bootcss.com/html5shiv/r29/html5.min.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">    &lt;![endif]--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-tag">body</span>&#123;<span class="attribute">min-height</span>:<span class="number">150px</span>;<span class="attribute">padding-top</span>:<span class="number">90px</span>;<span class="attribute">background</span>: <span class="number">#f6f6f6</span>;&#125;<span class="selector-class">.container</span>&#123;<span class="attribute">width</span>:<span class="number">98%</span>;<span class="attribute">padding-right</span>:<span class="number">15px</span>;<span class="attribute">padding-left</span>:<span class="number">15px</span>;<span class="attribute">margin-right</span>:auto;<span class="attribute">margin-left</span>:auto&#125;<span class="selector-class">.CodeMirror</span>&#123;<span class="attribute">min-height</span>:<span class="number">150px</span>&#125;<span class="selector-id">#textareaCode</span>&#123;<span class="attribute">min-height</span>:<span class="number">150px</span>&#125;<span class="selector-id">#iframeResult</span>&#123;<span class="attribute">border</span>:<span class="number">0</span><span class="meta">!important</span>;<span class="attribute">min-width</span>:<span class="number">100px</span>;<span class="attribute">width</span>:<span class="number">100%</span>;<span class="attribute">min-height</span>:<span class="number">150px</span>;<span class="attribute">background-color</span>:<span class="number">#fff</span>&#125;<span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>:<span class="number">768px</span>)&#123;<span class="selector-id">#textareaCode</span>&#123;<span class="attribute">height</span>:<span class="number">300px</span>&#125;<span class="selector-class">.CodeMirror</span>&#123;<span class="attribute">height</span>:<span class="number">300px</span>&#125;<span class="selector-id">#iframeResult</span>&#123;<span class="attribute">display</span>: block;<span class="attribute">overflow</span>: hidden;<span class="attribute">height</span>:<span class="number">300px</span>&#125;<span class="selector-class">.form-inline</span>&#123;<span class="attribute">padding</span>:<span class="number">6px</span> <span class="number">0</span> <span class="number">2px</span> <span class="number">0</span>&#125;&#125;<span class="selector-class">.logo</span> <span class="selector-tag">h1</span>&#123;<span class="attribute">background-image</span>:<span class="built_in">url</span>(<span class="string">https://img.jinjun.top/images/img/SFGFGD.png</span>);<span class="attribute">background-repeat</span>:no-repeat;<span class="attribute">text-indent</span>:-<span class="number">9999px</span>;<span class="attribute">width</span>:<span class="number">160px</span>;<span class="attribute">height</span>:<span class="number">39px</span>;<span class="attribute">margin-top</span>:<span class="number">10px</span>;<span class="attribute">display</span>:block&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">&quot;navbar navbar-default navbar-fixed-top&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background: #96b97d;&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;navbar-header logo&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;navbar-brand&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color: #fff;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-sm-12&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;panel panel-default&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;panel-heading&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">&quot;form-inline&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-xs-6&quot;</span>&gt;</span></span><br><span class="line">                 <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-default&quot;</span>&gt;</span>源代码：<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-xs-6 text-right&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-success&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;submitTryit()&quot;</span> <span class="attr">id</span>=<span class="string">&quot;submitBTN&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;glyphicon glyphicon-send&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span> 点击运行<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;panel-body&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span>  <span class="attr">id</span>=<span class="string">&quot;textareaCode&quot;</span> <span class="attr">name</span>=<span class="string">&quot;textareaCode&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">title</span>&gt;</span></span><br><span class="line">                    demo</span><br><span class="line">                  <span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">body</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;www.xiaojun.org&quot;</span>&gt;</span>钧言博客<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-sm-12&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;panel panel-default&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;panel-heading&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">&quot;form-inline&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-default&quot;</span>&gt;</span>运行结果<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">form</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;panel-body&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;iframewrapper&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-12&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>Copyright ? 2016-2019<span class="tag">&lt;<span class="name">a</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> <span class="attr">href</span>=<span class="string">&quot;//www.xiaojun.org&quot;</span>&gt;</span>钧言<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> mixedMode = &#123;</span></span><br><span class="line"><span class="language-javascript"><span class="attr">name</span>: <span class="string">&quot;htmlmixed&quot;</span>,</span></span><br><span class="line"><span class="language-javascript"><span class="attr">scriptTypes</span>: [&#123;<span class="attr">matches</span>: <span class="regexp">/\/x-handlebars-template|\/x-mustache/i</span>,</span></span><br><span class="line"><span class="language-javascript">               <span class="attr">mode</span>: <span class="literal">null</span>&#125;,</span></span><br><span class="line"><span class="language-javascript">              &#123;<span class="attr">matches</span>: <span class="regexp">/(text|application)\/(x-)?vb(a|script)/i</span>,</span></span><br><span class="line"><span class="language-javascript">               <span class="attr">mode</span>: <span class="string">&quot;vbscript&quot;</span>&#125;]</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> editor = <span class="title class_">CodeMirror</span>.<span class="title function_">fromTextArea</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;textareaCode&quot;</span>), &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">mode</span>: mixedMode,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">selectionPointer</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">lineNumbers</span>: <span class="literal">false</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">matchBrackets</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">indentUnit</span>: <span class="number">4</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">indentWithTabs</span>: <span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript">&#125;);</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;resize&quot;</span>, autodivheight);</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> x = <span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">autodivheight</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> winHeight=<span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span> (<span class="variable language_">window</span>.<span class="property">innerHeight</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        winHeight = <span class="variable language_">window</span>.<span class="property">innerHeight</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> ((<span class="variable language_">document</span>.<span class="property">body</span>) &amp;&amp; (<span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">clientHeight</span>)) &#123;</span></span><br><span class="line"><span class="language-javascript">        winHeight = <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">clientHeight</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//通过深入Document内部对body进行检测，获取浏览器窗口高度</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span> (<span class="variable language_">document</span>.<span class="property">documentElement</span> &amp;&amp; <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">clientHeight</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        winHeight = <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">clientHeight</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    height = winHeight*<span class="number">0.3</span></span></span><br><span class="line"><span class="language-javascript">    editor.<span class="title function_">setSize</span>(<span class="string">&#x27;100%&#x27;</span>, height);</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;iframeResult&quot;</span>).<span class="property">style</span>.<span class="property">height</span>= height + <span class="string">&quot;px&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">submitTryit</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> text = editor.<span class="title function_">getValue</span>();</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> patternHtml = <span class="regexp">/&lt;html[^&gt;]*&gt;((.|[\n\r])*)&lt;\/html&gt;/im</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> patternHead = <span class="regexp">/&lt;head[^&gt;]*&gt;((.|[\n\r])*)&lt;\/head&gt;/im</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> array_matches_head = patternHead.<span class="title function_">exec</span>(text);</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> patternBody = <span class="regexp">/&lt;body[^&gt;]*&gt;((.|[\n\r])*)&lt;\/body&gt;/im</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> array_matches_body = patternBody.<span class="title function_">exec</span>(text);</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> basepath_flag = <span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> basepath = <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">if</span>(basepath_flag) &#123;</span></span><br><span class="line"><span class="language-javascript">    basepath = <span class="string">&#x27;&lt;base href=&quot;//www.runoob.com/try/demo_source/&quot; target=&quot;_blank&quot;&gt;&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">if</span>(array_matches_head) &#123;</span></span><br><span class="line"><span class="language-javascript">    texttext = text.<span class="title function_">replace</span>(<span class="string">&#x27;&lt;head&gt;&#x27;</span>, <span class="string">&#x27;&lt;head&gt;&#x27;</span> + basepath );</span></span><br><span class="line"><span class="language-javascript">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (patternHtml) &#123;</span></span><br><span class="line"><span class="language-javascript">    texttext = text.<span class="title function_">replace</span>(<span class="string">&#x27;&lt;html&gt;&#x27;</span>, <span class="string">&#x27;&lt;head&gt;&#x27;</span> + basepath + <span class="string">&#x27;&lt;/head&gt;&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (array_matches_body) &#123;</span></span><br><span class="line"><span class="language-javascript">    texttext = text.<span class="title function_">replace</span>(<span class="string">&#x27;&lt;body&gt;&#x27;</span>, <span class="string">&#x27;&lt;body&gt;&#x27;</span> + basepath );</span></span><br><span class="line"><span class="language-javascript">  &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    text = basepath + text;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> ifr = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;iframe&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">  ifr.<span class="title function_">setAttribute</span>(<span class="string">&quot;frameborder&quot;</span>, <span class="string">&quot;0&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">  ifr.<span class="title function_">setAttribute</span>(<span class="string">&quot;id&quot;</span>, <span class="string">&quot;iframeResult&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;iframewrapper&quot;</span>).<span class="property">innerHTML</span> = <span class="string">&quot;&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;iframewrapper&quot;</span>).<span class="title function_">appendChild</span>(ifr);</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> ifrw = (ifr.<span class="property">contentWindow</span>) ? ifr.<span class="property">contentWindow</span> : (ifr.<span class="property">contentDocument</span>.<span class="property">document</span>) ? ifr.<span class="property">contentDocument</span>.<span class="property">document</span> : ifr.<span class="property">contentDocument</span>;</span></span><br><span class="line"><span class="language-javascript">  ifrw.<span class="property">document</span>.<span class="title function_">open</span>();</span></span><br><span class="line"><span class="language-javascript">  ifrw.<span class="property">document</span>.<span class="title function_">write</span>(text);</span></span><br><span class="line"><span class="language-javascript">  ifrw.<span class="property">document</span>.<span class="title function_">close</span>();</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">autodivheight</span>();</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="title function_">submitTryit</span>();</span></span><br><span class="line"><span class="language-javascript"><span class="title function_">autodivheight</span>();</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 资源分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript </tag>
            
            <tag> HTML </tag>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>给h5ai增加安全认证查看需要输入用户名和密码</title>
      <link href="/posts/8fdf9357.html"/>
      <url>/posts/8fdf9357.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->> 一般`h5ai`安装后都是不需要用户名和密码就可以直接查看目录的，这样很不好，所以我们需要手动添加些代码，使其需要输入用户名和密码才能查看。<p>使用<code>WinSCP</code>软件或者<code>宝塔面板</code>登录<code>vps</code>或者<code>管理面板</code>进入<code>h5ai</code>目录找到<code>_h5ai/public/index.php</code>并编辑</p><p>1、在头部<code>&lt;?php</code>的下一行，增加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auth();</span><br></pre></td></tr></table></figure><p>2、在底部增加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">function auth ()</span><br><span class="line">&#123;</span><br><span class="line">        $valid_passwords = array (&quot;账号&quot; =&gt; &quot;密码&quot;);</span><br><span class="line">        $valid_users = array_keys($valid_passwords);</span><br><span class="line"></span><br><span class="line">        $user = $_SERVER[&#x27;PHP_AUTH_USER&#x27;];</span><br><span class="line">        $pass = $_SERVER[&#x27;PHP_AUTH_PW&#x27;];</span><br><span class="line"></span><br><span class="line">        $validated = (in_array($user, $valid_users)) &amp;&amp; ($pass == $valid_passwords[$user]);</span><br><span class="line"></span><br><span class="line">        if (!$validated) &#123;</span><br><span class="line">          header(&#x27;WWW-Authenticate: Basic realm=&quot;My Realm&quot;&#x27;);</span><br><span class="line">          header(&#x27;HTTP/1.0 401 Unauthorized&#x27;);</span><br><span class="line">          die (&quot;Not authorized&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：账号和密码可以随便填。</p>]]></content>
      
      
      <categories>
          
          <category> 建站知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> h5ai </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux如何正确启动、停止、重启MySQL服务</title>
      <link href="/posts/a364417d.html"/>
      <url>/posts/a364417d.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->-  MySQL 服务启动方式<ol><li><p>使用 service 启动：<code>service mysqld start</code></p></li><li><p>使用 mysqld 脚本启动：<code>/etc/inint.d/mysqld start</code></p></li><li><p>使用 safe_mysqld 启动：<code>safe_mysqld&amp;</code></p></li></ol><ul><li>停止 MySQL 服务</li></ul><ol><li><p>使用 service 启动：<code>service mysqld stop</code></p></li><li><p>使用 mysqld 脚本启动：<code>/etc/inint.d/mysqld stop</code></p></li><li><p><code>mysqladmin shutdown</code></p></li></ol><ul><li>重启 MySQL 服务</li></ul><ol><li><p>使用 service 启动：<code>service mysqld restart</code></p></li><li><p>使用 mysqld 脚本启动：<code>/etc/inint.d/mysqld restart</code></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Liunx 宝塔6.x解锁nginx隐藏的waf防火墙插件</title>
      <link href="/posts/afef60b8.html"/>
      <url>/posts/afef60b8.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->宝塔面板在5.9版本，自带Nginx防火墙过滤功能。可以对url post get等参数进行安全过滤，可以挡住大量的日常漏洞扫描，比如针对织梦的SQL注入漏洞扫描，非法写入漏洞扫描、屏蔽常见的扫描黑客工具等。这对初级用户来说，这非常重要，可以简单防御一些扫描和攻击等操作！<p>但是到了6.x版本后，宝塔可能为了推广自家的收费版增强版防火墙，取消了免费版的过滤器的设置入口！不过不用太担心，宝塔官方尚没有完全删除该功能，这是隐藏了开启入口。</p><blockquote><p>宝塔6.x开启waf防火墙方法</p></blockquote><ul><li><p>进入宝塔面板，打开软件管理 &gt; Nginx &gt; 设置 &gt; 配置修改</p></li><li><p>找到 <code>#include.luawaf.conf;</code> ,大概在17行 去掉前面的 <code>#</code> ，保存</p></li></ul><p><img src="https://img.jinjun.top/images/usr/uploads/2019/08/1567180580.png" alt="Waf.png"> </p><ul><li>修改防火墙配置：<code>/www/server/nginx/waf/config.lua</code></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">postMatch=&quot;off&quot; 中的 off 改为 on</span><br><span class="line">CookieMatch=&quot;off&quot; 中的 off 改为 on</span><br></pre></td></tr></table></figure><ul><li>重启Nginx，使配置生效</li></ul><p><img src="https://img.jinjun.top/images/usr/uploads/2019/08/1567180716.png" alt="Nginx.png"></p><ul><li>测试是否生效，可以试着访问 <code>http://你的网址/?id=../etc/passwd</code> 页面弹出截拦页面</li></ul><p><img src="https://img.jinjun.top/images/usr/uploads/2019/08/1567182439.png" alt="截拦页面.png"></p><blockquote><p>WAF配置文件说明</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">RulePath = &quot;/www/server/panel/vhost/wafconf/&quot;   --waf 详细规则存放目录（一般无需修改）</span><br><span class="line">attacklog = &quot;on&quot;                                --是否开启攻击日志记录(on 代表开启，off 代表关闭。下同)</span><br><span class="line">logdir = &quot;/www/wwwlogs/waf/&quot;                    --攻击日志文件存放目录（一般无需修改）</span><br><span class="line">UrlDeny=&quot;on&quot;                                    --是否开启恶意 url 拦截</span><br><span class="line">Redirect=&quot;on&quot;                                   --拦截后是否重定向</span><br><span class="line">CookieMatch=&quot;off&quot;                               --是否开启恶意 Cookie 拦截</span><br><span class="line">postMatch=&quot;off&quot;                                 --是否开启 POST 攻击拦截</span><br><span class="line">whiteModule=&quot;on&quot;                                --是否开启 url 白名单</span><br><span class="line">black_fileExt=&#123;&quot;php&quot;,&quot;jsp&quot;&#125;                     --文件后缀名上传黑名单，如有多个则用英文逗号分隔。如：&#123;&quot;后缀名1&quot;,&quot;后缀名2&quot;,&quot;后缀名3&quot;……&#125;</span><br><span class="line">ipWhitelist=&#123;&quot;127.0.0.1&quot;&#125;                       --白名单 IP，如有多个则用英文逗号分隔。如：&#123;&quot;127.0.0.1&quot;,&quot;127.0.0.2&quot;,&quot;127.0.0.3&quot;……&#125; 下同</span><br><span class="line">ipBlocklist=&#123;&quot;1.0.0.1&quot;&#125;                         --黑名单 IP</span><br><span class="line">CCDeny=&quot;off&quot;                                    --是否开启 CC 攻击拦截</span><br><span class="line">CCrate=&quot;300/60&quot;                                 --CC 攻击拦截阈值，单位为秒。&quot;300/60&quot; 代表 60 秒内如果同一个 IP 访问了 300 次则拉黑</span><br></pre></td></tr></table></figure><p>配置文件中，<code>RulePath</code>?项对应的文件夹里存放的是具体的拦截规则。打开这个文件夹，可以看到里面有一些无后缀名的规则文件。其中每一个文件的作用如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">args        --GET 参数拦截规则</span><br><span class="line">blockip     --无作用</span><br><span class="line">cookie      --Cookie 拦截规则</span><br><span class="line">denycc      --无作用</span><br><span class="line">post        --POST 参数拦截规则</span><br><span class="line">returnhtml  --被拦截后的提示页面（HTML）</span><br><span class="line">url         --url 拦截规则</span><br><span class="line">user-agent  --UA 拦截规则</span><br><span class="line">whiteip     --无作用</span><br><span class="line">whiteurl    --白名单网址</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 建站知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Tenginx </tag>
            
            <tag> Nginx </tag>
            
            <tag> 宝塔面板 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VMware Workstation Pro 最新版下载及永久激活 KEY 激活码序列号长期更新</title>
      <link href="/posts/ccb88e3a.html"/>
      <url>/posts/ccb88e3a.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->![VMware.jpg][1]<p>日前戴尔旗下知名虚拟化软件 VMWARE 已发布新版本，本次发布的新版不管是功能还是界面都有很大改进。按惯例每次新版本发布都会有批量授权的密钥流出，使用这种密钥激活后的版本不是评估而是永不过期。因此使用这种永不过期的永久密钥激活是最好的方式，相比网上流传的注册机和破解补丁密钥当然更可靠些。</p><p>以下密钥都是亲测可用的，本文会保持更新，喜欢可以收藏一下。</p><p>默认获取下载最新版本：<a href="https://www.vmware.com/go/getworkstation-win">win版本</a></p><h2 id="VMware-Workstation-17-Pro"><a href="#VMware-Workstation-17-Pro" class="headerlink" title="VMware? Workstation 17 Pro"></a>VMware? Workstation 17 Pro</h2><p>许可证密匙：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">JU090-6039P-08409-8J0QH-2YR7F</span><br><span class="line"></span><br><span class="line">MC60H-DWHD5-H80U9-6V85M-8280D</span><br><span class="line"></span><br><span class="line">NZ4RR-FTK5H-H81C1-Q30QH-1V2LA</span><br></pre></td></tr></table></figure><h2 id="VMware-Workstation-16-Pro"><a href="#VMware-Workstation-16-Pro" class="headerlink" title="VMware? Workstation 16 Pro"></a>VMware? Workstation 16 Pro</h2><p>许可证密匙：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ZF3R0-FHED2-M80TY-8QYGC-NPKYF</span><br><span class="line">YF390-0HF8P-M81RQ-2DXQE-M2UT6</span><br><span class="line">ZF71R-DMX85-08DQY-8YMNC-PPHV8</span><br></pre></td></tr></table></figure><p>最新16版本下载地址：<a href="https://download3.vmware.com/software/wkst/file/VMware-workstation-full-16.0.0-16894299.exe">官方</a></p><p>##VMware? Workstation 15 Pro</p><p>许可证密钥：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">YZ718-4REEQ-08DHQ-JNYQC-ZQRD0</span><br></pre></td></tr></table></figure><p>软件下载地址：<a href="http://download3.vmware.com/software/wkst/file/VMware-workstation-full-15.0.0-10134415.exe">官方</a></p><p>##VMware? Workstation 14 Pro</p><p>许可证密钥：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">FF31K-AHZD1-H8ETZ-8WWEZ-WUUVA</span><br><span class="line">CV7T2-6WY5Q-48EWP-ZXY7X-QGUWD</span><br><span class="line">CG54H-D8D0H-H8DHY-C6X7X-N2KG6</span><br><span class="line">ZC3WK-AFXEK-488JP-A7MQX-XL8YF</span><br><span class="line">AC5XK-0ZD4H-088HP-9NQZV-ZG2R4</span><br><span class="line">ZC5XK-A6E0M-080XQ-04ZZG-YF08D</span><br><span class="line">ZY5H0-D3Y8K-M89EZ-AYPEG-MYUA8</span><br></pre></td></tr></table></figure><p>软件下载地址：<a href="http://download3.vmware.com/software/wkst/file/VMware-workstation-full-14.1.3-9474260.exe">官方</a></p><p>##VMware? Workstation 12 Pro</p><p>许可证密钥：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">5A02H-AU243-TZJ49-GTC7K-3C61N</span><br><span class="line">VF5XA-FNDDJ-085GZ-4NXZ9-N20E6</span><br><span class="line">UC5MR-8NE16-H81WY-R7QGV-QG2D8</span><br><span class="line">ZG1WH-ATY96-H80QP-X7PEX-Y30V4</span><br><span class="line">AA3E0-0VDE1-0893Z-KGZ59-QGAVF</span><br></pre></td></tr></table></figure><p>软件下载地址：<a href="http://download3.vmware.com/software/wkst/file/VMware-workstation-full-12.5.7-5813279.exe">官方</a></p><p>##VMware? Workstation 11 Pro</p><p>许可证密钥：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1F04Z-6D111-7Z029-AV0Q4-3AEH8</span><br></pre></td></tr></table></figure><p>##VMware? Workstation 10 Pro</p><p>许可证密钥：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1Z0G9-67285-FZG78-ZL3Q2-234JG</span><br><span class="line">4C4EK-89KDL-5ZFP9-1LA5P-2A0J0</span><br><span class="line">HY086-4T01N-CZ3U0-CV0QM-13DNU</span><br></pre></td></tr></table></figure><p>##VMware? Workstation 9 Pro</p><p>许可证密钥：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">4U434-FD00N-5ZCN0-4L0NH-820HJ</span><br><span class="line">4V0CP-82153-9Z1D0-AVCX4-1AZLV</span><br><span class="line">0A089-2Z00L-AZU40-3KCQ2-2CJ2T</span><br></pre></td></tr></table></figure><p>##VMware? Workstation 8 Pro</p><p>许可证密钥：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">A61D-8Y0E4-QZTU0-ZR8XP-CC71Z</span><br><span class="line">MY0E0-D2L43-6ZDZ8-HA8EH-CAR30</span><br><span class="line">MA4XL-FZ116-NZ1C9-T2C5K-AAZNR</span><br></pre></td></tr></table></figure><p>##VMware? Workstation 7 Pro</p><p>许可证密钥：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">VZ3X0-AAZ81-48D4Z-0YPGV-M3UC4</span><br><span class="line">VU10H-4HY97-488FZ-GPNQ9-MU8GA</span><br><span class="line">ZZ5NU-4LD45-48DZY-0FNGE-X6U86</span><br></pre></td></tr></table></figure><p>##VMware? Workstation 6 Pro</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">UV16D-UUC6A-49H6E-4E8DY</span><br><span class="line">C3J4N-3R22V-J0H5R-4NWPQ</span><br><span class="line">A15YE-5250L-LD24E-47E7C</span><br></pre></td></tr></table></figure><h2 id="VMWare-vSphere6"><a href="#VMWare-vSphere6" class="headerlink" title="VMWare:vSphere6"></a>VMWare:vSphere6</h2><p>许可证密匙：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">HV4WC-01087-1ZJ48-031XP-9A843</span><br><span class="line">NF0F3-402E3-MZR80-083QP-3CKM2</span><br><span class="line">4F6FX-2W197-8ZKZ9-Y31ZM-1C3LZ</span><br><span class="line">JZ2E9-6D2DK-XZQD0-632E4-33E7Z</span><br><span class="line">MZ48M-DNK56-ZZJD0-RTCE2-9321X</span><br><span class="line">0Y0AJ-4P29H-LZV81-59AQ2-C291V</span><br><span class="line">0A4GL-D7JD7-LZR10-M30G0-A36JF</span><br><span class="line">4C02A-DP2E2-AZ041-FH9X6-922J6</span><br><span class="line">1G297-6W01H-TZAR1-7TAE6-1AY24</span><br><span class="line">1C6N9-A4L01-MZ6R8-QA174-0CANZ</span><br><span class="line">HG6QA-FU340-LZMV8-Y33Q2-0A4K2</span><br><span class="line">0Y2FJ-02K1H-RZ2V0-723E2-13QNX</span><br><span class="line">MY61G-8H11N-XZU40-M205P-33XJE</span><br><span class="line">1F0QH-883E5-7Z5W8-HV9N6-03FKC</span><br><span class="line">JZ486-4020J-AZUQ9-7T05P-92VQ8</span><br><span class="line">4C6XC-0WH46-HZ4Q9-UV0N2-2AAJ6</span><br><span class="line">MZ08J-DKH07-VZ2U0-Y83NM-9CVPU</span><br><span class="line">NV227-44K56-MZ9P9-2H8ZP-A38PA</span><br><span class="line">HF0HX-FRJ90-JZ5E1-M8952-3CF1Z</span><br><span class="line">0Y6G3-8R151-DZPT8-4UA56-13PNX</span><br><span class="line">NY4PP-8J38P-1Z8Z0-X03N6-031LD</span><br><span class="line">5F6N0-FR35Q-XZ6U0-4V25P-93G2K</span><br><span class="line">MA2XX-04J16-1ZX80-68052-32YHY</span><br><span class="line">4G6CN-D920L-CZ7W9-CHC5P-02ANM</span><br><span class="line">0A65P-00HD0-3Z5M1-M097M-22P7H</span><br><span class="line">MA241-0KLEP-4Z718-LR2Q6-A2474</span><br><span class="line">NA6FU-4J39N-AZDK0-A82G6-33E6R</span><br><span class="line">1Z06V-22JE5-0ZW10-G91EH-02A7D</span><br><span class="line">HA6VG-683DQ-YZUV0-2925K-ACW06</span><br><span class="line">JA4A7-48H84-QZYP9-QK0N4-1A0JU</span><br><span class="line">MZ0TJ-8V307-GZ919-QT876-13YPV</span><br><span class="line">0V0VU-06KD6-CZU48-Q2150-03WLU</span><br><span class="line">MY0R3-2W04J-9Z340-8CAQP-1AJ56</span><br><span class="line">MU4T8-AW09M-LZPZ9-18CGP-9CM0K</span><br><span class="line">HA08T-6H30P-DZKM0-8H0QP-92U6R</span><br><span class="line">0G6JR-8Y084-TZA71-HT374-C3ZHX</span><br><span class="line">1C0KQ-2KH0H-8ZQR1-P8356-0CK2G</span><br><span class="line">5A68Y-8GKDK-WZLG9-XVAX6-3CM2W</span><br><span class="line">4A6RF-A5L0M-CZ4V8-RT9Q4-13P04</span><br><span class="line">HF2CN-6WH9M-KZAA1-UK8QM-0CX42</span><br><span class="line">4G4KX-680EP-2ZZC1-WT2N6-0AL3U</span><br><span class="line">1F6Z7-82K8M-XZ669-3T17M-AAWJ0</span><br><span class="line">0Z25R-6F24J-0Z2L1-WC356-AA84Z</span><br><span class="line">MY00L-2YH9K-9ZA98-MR270-3AXKN</span><br><span class="line">JU6YR-8E09H-1ZCT9-PL3Z0-1AUKX</span><br><span class="line">MF0GM-8839J-7ZLV0-7V1EK-3CMQJ</span><br><span class="line">JY6Z7-0P1E5-9ZHR0-PRANP-0296D</span><br><span class="line">0Z4F9-6U315-6ZMR0-RAAN6-3AFMC</span><br><span class="line">5A6WG-AWJEH-TZUL9-AH950-CADNH</span><br><span class="line">NY61U-AKK9M-CZNJ9-WA354-AAP76</span><br><span class="line">JF4Y7-26J0P-TZZ49-NK9ZH-0CPJJ</span><br><span class="line">MV62H-AT20K-9Z280-DK2N0-9AVKZ</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 资源分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 虚拟机 </tag>
            
            <tag> VMware </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tengine与云锁防护编译安装笔记</title>
      <link href="/posts/a1f86296.html"/>
      <url>/posts/a1f86296.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->##操作步骤：<p>1、配置编译环境：(如果已经存在，可以略过)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y gcc gcc-c++ pcre-devel openssl openssl-devel</span><br></pre></td></tr></table></figure><p>2、建立工作目录&#x2F;work，下载并解压云锁Nginx防护模块：(记住防护模块解压后的目录&#x2F;data&#x2F;nginx-plugin-master)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /work</span><br><span class="line">cd /work</span><br><span class="line">wget https://codeload.github.com/yunsuo-open/nginx-plugin/zip/master -O nginx-plugin-master.zip</span><br><span class="line">unzip nginx-plugin-master.zip</span><br></pre></td></tr></table></figure><p>3、下载并解压tengine：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /work   如果你在work目录下，此命令省略</span><br><span class="line">wget http://tengine.taobao.org/download/tengine-2.2.2.tar.gz</span><br><span class="line">tar -xzvf tengine-2.2.2.tar.gz</span><br></pre></td></tr></table></figure><p>4、查看宝塔Linux面板原先Tengine的编译参数：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -V</span><br></pre></td></tr></table></figure><p>将查询到的编译参数复制下来。如截图中红框部分</p><p><img src="https://img.jinjun.top/images/usr/uploads/2019/08/1567093131.png" alt="Tenginx.png"></p><p>5、进入tengine解压目录，重新编译tengine：(–add-module&#x3D;&#x2F;work&#x2F;nginx-plugin-master是加在参数最后)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /work/tengine-2.2.2</span><br><span class="line">./configure 粘贴上一步复制的参数 --add-module=/work/nginx-plugin-master</span><br><span class="line">make</span><br></pre></td></tr></table></figure><p>6、备份原Tengine文件，把编译后的新tengine文件替换旧的Tengine：</p><p>温馨提示：宝塔面板Tengine所在目录&#x2F;www&#x2F;server&#x2F;nginx&#x2F;sbin&#x2F;nginx</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cd /www/server/nginx/sbin</span><br><span class="line">cp nginx nginx.bak</span><br><span class="line">service nginx stop</span><br><span class="line">rm -rf /www/server/nginx/sbin/nginx</span><br><span class="line">cd /work/tengine-2.2.2</span><br><span class="line">cp objs/nginx /www/server/nginx/sbin</span><br><span class="line">service nginx start</span><br></pre></td></tr></table></figure><p>7、登陆云锁，PC管理端即可看到自编译模块已经正常了。</p><p><img src="https://img.jinjun.top/images/usr/uploads/2019/08/1567093156.png" alt="YunSuo.png"></p>]]></content>
      
      
      <categories>
          
          <category> 建站知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tenginx </tag>
            
            <tag> 云锁 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Typecho添加页面加载耗时时间显示</title>
      <link href="/posts/1edf6c16.html"/>
      <url>/posts/1edf6c16.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->### 第一步<p>编辑functions.php 添加函数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">function runTime()&#123;</span><br><span class="line"></span><br><span class="line">$timer = explode(&#x27; &#x27;, microtime());</span><br><span class="line"></span><br><span class="line">return $timer[0] + $timer[1];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h3><p>编辑<code>header.php</code>在<code>&lt;!DOCTYPE html&gt;</code>上面添加函数<code>&lt;?php define(&#39;START_TIME&#39;,runTime()); ?&gt;&lt;!--开始计算--&gt;</code></p><h3 id="第三步"><a href="#第三步" class="headerlink" title="第三步"></a>第三步</h3><p>编辑<code>footer.php</code>在要显示的地方添加<code>耗时:&lt;?php echo round(runTime()-START_TIME,5); ?&gt;&lt;!--计算结束显示--&gt;</code>这样就搞定了</p><blockquote><p>第二种方法  推荐使用</p></blockquote><ul><li>在当前主题的functions.php文件添加下面的代码：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">function timer_start() &#123;</span><br><span class="line">global $timestart;</span><br><span class="line">$mtime     = explode( &#x27; &#x27;, microtime() );</span><br><span class="line">$timestart = $mtime[1] + $mtime[0];</span><br><span class="line">return true;</span><br><span class="line">&#125;</span><br><span class="line">timer_start();</span><br><span class="line">function timer_stop( $display = 0, $precision = 3 ) &#123;</span><br><span class="line">global $timestart, $timeend;</span><br><span class="line">$mtime     = explode( &#x27; &#x27;, microtime() );</span><br><span class="line">$timeend   = $mtime[1] + $mtime[0];</span><br><span class="line">$timetotal = number_format( $timeend - $timestart, $precision );</span><br><span class="line">$r         = $timetotal &lt; 1 ? $timetotal * 1000 . &quot; ms&quot; : $timetotal . &quot; s&quot;;</span><br><span class="line">if ( $display ) &#123;</span><br><span class="line">echo $r;</span><br><span class="line">&#125;</span><br><span class="line">return $r;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>在要显示加载时间的位置添加调用代码 一般都是<code>footed</code>和<code>post</code>页面</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">页面耗时：&lt;?php echo timer_stop();?&gt;</span><br></pre></td></tr></table></figure><ul><li>保存后，到前台刷新页面即可显示加载时间。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Typecho </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typecho </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用JS给图片添加fancybox灯箱效果</title>
      <link href="/posts/79050062.html"/>
      <url>/posts/79050062.html</url>
      
        <content type="html"><![CDATA[<!--markdown--> ![Fancybox.png][1]<p>之前我都是用 <a href="https://www.jinjun.top/7.html">Typecho文章图片添加灯箱效果</a> 这个教程。发现渐渐不能满足我DIY的需要。</p><h3 id="FancyBox是一款优秀的弹出框Jquery插件"><a href="#FancyBox是一款优秀的弹出框Jquery插件" class="headerlink" title="FancyBox是一款优秀的弹出框Jquery插件"></a>FancyBox是一款优秀的弹出框Jquery插件</h3><ol><li>允许我们用鼠标和键盘上的四个方向键切换图片</li><li>可以根据当前窗口大小自动调整弹出框的大小，当我们改变浏览器窗口大小时，将会看到弹出框自动缩放</li><li>支持缩略图列表、放大、全屏等功能</li><li>弹出框支持显示多种类型的内容：图片、html、视频…</li><li>支持触控、缩放手势操作图片</li></ol><h3 id="实现FancyBox效果"><a href="#实现FancyBox效果" class="headerlink" title="实现FancyBox效果"></a>实现FancyBox效果</h3><ul><li>先引入相关的文件</li></ul><p>建议放在 <code>fooder.php</code> 底部 <code>&lt;/baby&gt;</code> 之前添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;http://ajax.googleapis.com/ajax/libs/jquery/1.7/jquery.min.js&quot;&gt;&lt;/script&gt; &lt;!--如果主题已经引用了jQuery库，可以忽略这条--&gt;</span><br><span class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.staticfile.org/fancybox/3.5.2/jquery.fancybox.min.css&quot;&gt;</span><br><span class="line">&lt;script src=&quot;https://cdn.staticfile.org/fancybox/3.5.2/jquery.fancybox.min.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><ul><li>添加一段JS 让他输出<code>&lt;a&gt;</code> 标签</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">$(function() &#123;</span><br><span class="line">   $(&quot;.article-content p img&quot;).each(function(i) &#123;</span><br><span class="line">      if (!this.parentNode.href) &#123;</span><br><span class="line">         $(this).wrap(&quot;&lt;a href=&#x27;&quot; + this.src + &quot;&#x27; data-fancybox=&#x27;fancybox&#x27; data-caption=&#x27;&quot; + this.alt + &quot;&#x27;&gt;&lt;/a&gt;&quot;)</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;)</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>PS:   <code>.article-content p img</code>需要修改为自己文章页面的正文CSS类，把下面代码添加到<code>header</code>或者<code>fooded</code>的文件中</p><p><img src="https://img.jinjun.top/images/usr/uploads/2019/08/1566928420.png" alt="Fancybox1.png"></p><h3 id="初始化FancyBox"><a href="#初始化FancyBox" class="headerlink" title="初始化FancyBox"></a>初始化FancyBox</h3><p>把下面js添加到 footer.php 文件的</body>前</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(document).ready(function() &#123;</span><br><span class="line">   $(&quot;[data-fancybox]&quot;).fancybox()</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>保存一下源代码，清理浏览器的缓存。重新打开网站。一切加载完成后，点击图片应该可以看到灯箱效果。</p><h3 id="自定义配置文件"><a href="#自定义配置文件" class="headerlink" title="自定义配置文件"></a>自定义配置文件</h3><p>官方也支持自定义配置文件！<a href="http://fancyapps.com/fancybox/3/docs/#initialize-with-javascript">FancyBox官方文档</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$(document).ready(function() &#123;</span><br><span class="line">   $(&quot;[data-fancybox]&quot;).fancybox(&#123;</span><br><span class="line">      protect:true, // 禁用右键保存</span><br><span class="line">   &#125;)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Typecho </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typecho </tag>
            
            <tag> Javascript </tag>
            
            <tag> 灯箱效果 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>认识Linux系统中unzip/zip/tar常用压缩和解压命令</title>
      <link href="/posts/21da0bef.html"/>
      <url>/posts/21da0bef.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->宝塔面板，简单到敲命令行都可以省了。不过太安逸，不习惯 还是比较喜欢折腾?<p>下面我们来认识一下nzip、zip、tar常用的在服务器中压缩和解压的命令。这样我们可以提高文件管理的效率。</p><h3 id="unzip-x2F-zip命令"><a href="#unzip-x2F-zip命令" class="headerlink" title="unzip&#x2F;zip命令"></a>unzip&#x2F;zip命令</h3><p>?&gt; 先安装一下 常见的安装方法有以下几种</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#CentOS</span><br><span class="line">yum install -y unzip zip</span><br><span class="line"></span><br><span class="line">#ubuntu</span><br><span class="line">apt-get install zip</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="使用命令"><a href="#使用命令" class="headerlink" title="使用命令"></a>使用命令</h4><blockquote><p>压缩</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zip -r junyan.zip /www/junyan</span><br></pre></td></tr></table></figure><p>压缩<code>/www/junyan</code>目录下的文件，压缩文件为<code>junyan.zip</code></p><blockquote><p>解压</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip junyan.zip -d /www/junyan</span><br></pre></td></tr></table></figure><p>将<code>junyan.zip</code>压缩包，解压到<code>/www/junyan</code>目录。</p><h3 id="tar命令"><a href="#tar命令" class="headerlink" title="tar命令"></a>tar命令</h3><blockquote><p>tar安装方法</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install -y tar</span><br><span class="line"></span><br><span class="line">apt install tar</span><br></pre></td></tr></table></figure><h4 id="tar使用命令"><a href="#tar使用命令" class="headerlink" title="tar使用命令"></a>tar使用命令</h4><blockquote><p>压缩</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -czvf junyan.tar.gz /www/junyan</span><br></pre></td></tr></table></figure><p>将<code>/www/junyan</code>目录打包压缩成<code>junyan.tar.gz</code>。</p><blockquote><p>? 解压</p></blockquote><p>这里介绍两种方法 比较常用的</p><p>&#96;&#96;&#96;&#96;<br>tar -zxvf junyan.tar.gz</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">将压缩包解压</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>tar -zxvf junyan.tar.gz -C &#x2F;wwww&#x2F;junyan</p><p>&#96;&#96;&#96;</p><p>解压到指定目录下面，前提是要存在<code>/www/junyan</code>这个目录? 这个一定要注意</p><p>注意用这个和<code>cp</code>命令有点不同，cp命令如果不存在这个目录就会自动创建这个目录！ </p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实现网站页面秒开-预加载JS脚本instant.page</title>
      <link href="/posts/b3927b0b.html"/>
      <url>/posts/b3927b0b.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->`instant.page` 原理的话我们不必深层了解，只需知道：<p>在用户点击网站链接之前，他们将鼠标悬停在该链接上。当用户徘徊<code>65</code>毫秒时，他们将点击该链接有两个机会，因此 <code>instant.page</code> 此时开始预加载，平均超过 300 毫秒，以便页面预加载。</p><p><code>instant.page</code> 是渐进式增强 - 对不支持它的浏览器没有影响。</p><p>instant.page使用</p><p><code>instant.page</code>的使用非常简单，首先打开官网：<a href="https://instant.page/">https://instant.page</a>，会看到一个非常简洁的页面，并得到一行代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=&quot;//instant.page/1.2.0&quot; type=&quot;module&quot; integrity=&quot;sha384-0xWpXpkOUkAVETH+RMYJlSFIDNGlnPHgmqv2rP3uZS1BM48EMcxAZGW09n4pTGV4&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>咱们只要把这行代码添加到网站的<code>&lt;/body&gt;</code>之前即可。</p><p>不过，由于官方的脚本是存储在国外的，所以建议各位直接将脚本保存到本地进行加载，缩短脚本载入的时间。</p><p>可以下载Js脚本到本地，再进行主题调用。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=&quot;module&quot; src=&quot;存放路径&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>可以下载到本地，再进行调用。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=&quot;module&quot; src=&quot;存放路径&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="定义加载属性"><a href="#定义加载属性" class="headerlink" title="定义加载属性"></a>定义加载属性</h3><p>白名单标签属性：?data-instant?，例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;https://www.baidu.com&quot; data-instant&gt;百度&lt;/a&gt;</span><br></pre></td></tr></table></figure><p>黑名单标签属性：?data-no-instant?，例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;https://www.baidu.com&quot; data-no-instant&gt;百度&lt;/a&gt;</span><br></pre></td></tr></table></figure><p>全局允许：在?<body>?中添加?data-instant-allow-query-string?属性</p><p>局部允许：在使用的标签中添加?data-instant?属性（和白名单属性一样）</p>]]></content>
      
      
      <categories>
          
          <category> 建站知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS 下 Docker 的安装及使用</title>
      <link href="/posts/687bc5f3.html"/>
      <url>/posts/687bc5f3.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->最近在VPS搭建了很多基于Docker的项目，都是随便玩玩。不过说实话，Docker很适合我这种懒人使用，特别简单粗暴。特别是快速部署方面，很节省时间。<p><img src="https://img.jinjun.top/images/usr/uploads/2019/08/1566480796.png" alt="Docker"></p><p>分享一下安装的心得</p><h5 id="卸载旧版本"><a href="#卸载旧版本" class="headerlink" title="卸载旧版本"></a>卸载旧版本</h5><p>防止之前服务器已经安装docker旧的版本，所以先卸载一下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum remove docker docker-common docker-selinux docker-engine</span><br></pre></td></tr></table></figure><h3 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y yum-utils device-mapper-persistent-data lvm2</span><br></pre></td></tr></table></figure><h3 id="添加安装源"><a href="#添加安装源" class="headerlink" title="添加安装源"></a>添加安装源</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 阿里云Docker源</span><br><span class="line">sudo yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line"></span><br><span class="line">#官方源</span><br><span class="line">sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br><span class="line"></span><br><span class="line">#关闭测试版本list（只显示稳定版）如果安装旧版就不用运行这段代码</span><br><span class="line">sudo yum-config-manager --enable docker-ce-edge</span><br><span class="line">sudo yum-config-manager --enable docker-ce-test</span><br></pre></td></tr></table></figure><h4 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h4><p>安装新版本的docker</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo yum makecache fast</span><br><span class="line">sudo yum install docker-ce</span><br></pre></td></tr></table></figure><p>如果想指定版本安装，方法如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#搜索可用的版本</span><br><span class="line">yum list docker-ce.x86_64  --showduplicates | sort -r</span><br><span class="line">#安装指定版本</span><br><span class="line">sudo yum install &lt;NAME&gt;</span><br><span class="line">#注：&lt;name&gt;写的是版本。比如说   17.03.0.ce.1-1.el7.centos  这种</span><br><span class="line"></span><br><span class="line">#比如我想安装的是17.03.0.ce.1-1.el7.centos  那就运行</span><br><span class="line"></span><br><span class="line">sudo yum install 17.03.0.ce.1-1.el7.centos</span><br></pre></td></tr></table></figure><h4 id="启动Docker和相关的服务"><a href="#启动Docker和相关的服务" class="headerlink" title="启动Docker和相关的服务"></a>启动Docker和相关的服务</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl enable docker</span><br><span class="line">sudo systemctl start docker</span><br></pre></td></tr></table></figure><h4 id="运行测试程序"><a href="#运行测试程序" class="headerlink" title="运行测试程序"></a>运行测试程序</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">docker run hello-world</span><br><span class="line"></span><br><span class="line">＃出现如下及安装成功 </span><br><span class="line"></span><br><span class="line">Hello from Docker!</span><br><span class="line"></span><br><span class="line">This message shows that your installation appears to be working correctly.</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="简单的Docker运维"><a href="#简单的Docker运维" class="headerlink" title="简单的Docker运维"></a>简单的Docker运维</h3><p>官网文档上面也有很完善的解答和方法，下面介绍几种常用的命令。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">#查看正在运行的容器</span><br><span class="line">docker ps</span><br><span class="line"></span><br><span class="line">#查看所有容器，包括停止的</span><br><span class="line">docker ps -a</span><br><span class="line"></span><br><span class="line">#启动容器</span><br><span class="line">docker start &lt;容器名&gt;</span><br><span class="line"></span><br><span class="line">#停止容器</span><br><span class="line">docker stop &lt;容器名&gt;</span><br><span class="line"></span><br><span class="line"># 拉取imges镜像</span><br><span class="line">docker pull &lt;镜像名称&gt;</span><br><span class="line"></span><br><span class="line">#重启容器</span><br><span class="line">docker restart &lt;容器名&gt;</span><br><span class="line"></span><br><span class="line">#删除容器</span><br><span class="line">docker rm &lt;容器名&gt;</span><br><span class="line"></span><br><span class="line">#进入 Docker 的 Shell</span><br><span class="line">docker exec -it &lt;容器名&gt; sh</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CentOS </tag>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>给网页添加一个测速小插件</title>
      <link href="/posts/bbe6e6f3.html"/>
      <url>/posts/bbe6e6f3.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->感谢来自SPEEDTEST测速网的插件，可以随时在页面测速，而不用去下载一个客户端。<p><img src="https://img.jinjun.top/images/usr/uploads/2019/08/1566403948.png" alt="测速"></p><p>进入：<a href="http://www.speedtest.cn/plugin">SPEEDTEST</a> ，选择免费计划，里面可以选择你需要的颜色。目前免费版只支持三款配色。</p><p><img src="https://img.jinjun.top/images/usr/uploads/2019/08/1566403173.png" alt="speedtest"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe src=<span class="string">&quot;https://plugin.speedtest.cn/&quot;</span>? frameborder=<span class="string">&quot;no&quot;</span> scrolling=<span class="string">&quot;no&quot;</span> style=<span class="string">&quot;width: 550px; height: 610px;&quot;</span>&gt;&lt;/iframe&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 资源分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 测速 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网址导航</title>
      <link href="/posts/306ed9d4.html"/>
      <url>/posts/306ed9d4.html</url>
      
        <content type="html"><![CDATA[<!--markdown--><div class="item"><pre><code>&lt;h3&gt;常逛网站&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://www.jinjun.top/&quot; ref=&quot;nofollow&quot;&gt;&lt;i class=&quot;iconfont icon-xiangyou1&quot;&gt;&lt;/i&gt;钧言极客&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://www.hostloc.com&quot;　 ref=&quot;nofollow&quot;&gt;&lt;i class=&quot;iconfont icon-xiangyou1&quot;&gt;&lt;/i&gt;loc主机论坛&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://bbs.sn/&quot; ref=&quot;nofollow&quot;&gt;&lt;i class=&quot;iconfont icon-xiangyou1&quot;&gt;&lt;/i&gt;十年之约论坛&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://www.bilibili.com&quot;　 ref=&quot;nofollow&quot;&gt;&lt;i class=&quot;iconfont icon-xiangyou1&quot;&gt;&lt;/i&gt;哔哩哔哩&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://bbs.itzmx.com/&quot; ref=&quot;nofollow&quot;&gt;&lt;i class=&quot;iconfont icon-xiangyou1&quot;&gt;&lt;/i&gt;小樱论坛&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://www.smzdm.com/&quot; ref=&quot;nofollow&quot;&gt;&lt;i class=&quot;iconfont icon-xiangyou1&quot;&gt;&lt;/i&gt;什么值得买&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</code></pre></div><div class="item">    <h3>海外网站推荐</h3>    <ul>    <li><a target="_blank" href="https://www.google.com/" ref="nofollow"><i class="iconfont icon-xiangyou1"></i>Google搜索</a></li>    <li><a target="_blank" href="https://www.youtube.com/" ref="nofollow"><i class="iconfont icon-xiangyou1"></i>YouTube</a></li>    <li><a target="_blank" href="https://zh.wikipedia.org/" ref="nofollow"><i class="iconfont icon-xiangyou1"></i>维基百科</a></li>    <li><a target="_blank" href="https://yandex.com/" ref="nofollow"><i class="iconfont icon-xiangyou1"></i>Yandex</a></li>    <li><a target="_blank" href="https://vimeo.com/" ref="nofollow"><i class="iconfont icon-xiangyou1"></i>VIMEO</a></li>    <li><a target="_blank" href="hhttps://github.com/" ref="nofollow"><i class="iconfont icon-xiangyou1"></i>GitHub</a></li>    <li><a target="_blank" href="https://apps.evozi.com/apk-downloader/" ref="nofollow"><i class="iconfont icon-xiangyou1"></i>APK 下载</a></li>    <li><a target="_blank" href="https://www.facebook.com/" ref="nofollow"><i class="iconfont icon-xiangyou1"></i>Facebook</a></li>    <li><a target="_blank" href="https://www.epicgames.com/store/zh-CN/free-games">Epic每周限免</a></li>    </ul></div><div class="item">    <h3>国家权威网站</h3>    <ul>    <li><a target="_blank"  href="https://www.gsxt.gov.cn/" ref="nofollow"><i class="iconfont icon-xiangyou1"></i><strong>国家企业信用信息公示系统</strong><p>可以在这里查询到企业的各种信息，权威。</p></a></li>    <li><a target="_blank"  href="https://cont.12315.cn/" ref="nofollow"><i class="iconfont icon-xiangyou1"></i><strong>合同示范文本库</strong><p>国家市场监督管理总局出品</p></a></li>    <li><a target="_blank"  href="http://bzdt.ch.mnr.gov.cn/" ref="nofollow"><i class="iconfont icon-xiangyou1"></i><strong>标准地图服务系统</strong><p>标准地图依据中国和世界各国国界线画法标准编制而成，可用于新闻宣传用图、书刊报纸插图、广告展示背景图、工艺品设计底图等，也可作为编制公开版地图的参考底图。</p></a></li>    <li><a target="_blank"  href="https://le.ouchn.cn/" ref="nofollow"><i class="iconfont icon-xiangyou1"></i><strong>终身教育平台</strong><p>据说在这不仅可以学习九年义务教育的内容，很多大学的课程也可以学习。</p></a></li>    <li><a target="_blank"  href="http://pmtkcde.org.cn/" ref="nofollow"><i class="iconfont icon-xiangyou1"></i><strong>重要概念范畴表述外译发布平台</strong><p>主要负责将中文翻译成不同语言，供世界范围查询参考使用。</p></a></li>    <li><a target="_blank"  href="http://www.docuchina.cn/" ref="nofollow"><i class="iconfont icon-xiangyou1"></i><strong>中国纪录片网</strong><p>中国纪录片网是集纪录片创作生产、推介展示、传播推广、融资交易等为一体的国家级纪录片新媒体综合性产业运营平台。</p></a></li>    <li><a target="_blank"  href="https://wenshu.court.gov.cn/" ref="nofollow"><i class="iconfont icon-xiangyou1"></i><strong>中国裁判文书网</strong><p>支持查询和下载各种案件的裁判文书。</p></a></li>    <li><a target="_blank"  href="https://www.nmpa.gov.cn/datasearch/home-index.html" ref="nofollow"><i class="iconfont icon-xiangyou1"></i><strong>国家药品监督管理局数据查询</strong><p>药品、医疗器械、化妆品等各种相关查询，以及国家各种公告、备案、专利等信息公示。</p></a></li>    <li><a target="_blank"  href="https://www.chncpa.org/" ref="nofollow"><i class="iconfont icon-xiangyou1"></i><strong>国家大剧院</strong><p>除了演出信息、直播录播外，还提供了线上导览服务，在线就能参观国家大剧院。</p></a></li>    <li><a target="_blank"  href="https://news.ceic.ac.cn/" ref="nofollow"><i class="iconfont icon-xiangyou1"></i><strong>中国地震台网</strong><p>地震相关的信息在这个网站都能查询看到！支持查看全球各地最近发生的地震，还有详细数据。</p></a></li>    <li><a target="_blank"  href="http://www.nlc.cn/" ref="nofollow"><i class="iconfont icon-xiangyou1"></i><strong>中国国家图书馆</strong><p>国家总书库，国家书目中心，国家古籍保护中心，国家典籍博物馆。</p></a></li>    <li><a target="_blank"  href="https://sswz.spb.gov.cn/" ref="nofollow"><i class="iconfont icon-xiangyou1"></i><strong>邮政业申诉服务平台</strong><p>快递行业的主管部门，各大快递公司的问题都可以在这里投诉！</p></a></li>    <li><a target="_blank"  href="https://yhssglxt.miit.gov.cn/web/" ref="nofollow"><i class="iconfont icon-xiangyou1"></i><strong>工信部申述受理中心</strong><p>网络问题投诉、手机问题投诉、宽带问题投诉都可以在这进去。</p></a></li>    <li><a target="_blank"  href="http://www.stats.gov.cn/" ref="nofollow"><i class="iconfont icon-xiangyou1"></i><strong>国家统计局</strong><p>中国统计信息网</p></a></li>    <li><a target="_blank"  href="http://sbj.cnipa.gov.cn/" ref="nofollow"><i class="iconfont icon-xiangyou1"></i><strong>中国商标网</strong><p>国家知识产权局商标局</p></a></li>    <li><a target="_blank"  href="http://www.cpta.com.cn/" ref="nofollow"><i class="iconfont icon-xiangyou1"></i><strong>中国人事考试网</strong><p>各种考证都在这里报名</p></a></li>    <li><a target="_blank"  href="https://ai.12348.gov.cn/" ref="nofollow"><i class="iconfont icon-xiangyou1"></i><strong>中国法律服务网</strong><p>12348 中国法网</p></a></li>    <li><a target="_blank"  href="https://www.12377.cn/" ref="nofollow"><i class="iconfont icon-xiangyou1"></i><strong>违法和不良信息举报中心</strong><p>中央网信办（国家互联网信息办公室）违法和不良信息举报中心</p></a></li>    </ul></div><div class="item">    <h3>素材库</h3>    <ul>    <li><a target="_blank" href="https://www.logosc.cn/so/" ref="nofollow"><i class="iconfont icon-xiangyou1"></i>免费版权图片</a></li>    <li><a target="_blank" href="https://huaban.com/" ref="nofollow"><i class="iconfont icon-xiangyou1"></i>花瓣</a></li>    <li><a target="_blank" href="https://www.pexels.com/zh-cn/" ref="nofollow"><i class="iconfont icon-xiangyou1"></i>pexels</a></li>    <li><a target="_blank" href="https://pixabay.com/" ref="nofollow"><i class="iconfont icon-xiangyou1"></i>pixabay</a></li>    <li><a target="_blank" href="https://unsplash.com/" ref="nofollow"><i class="iconfont icon-xiangyou1"></i>Unsplash</a></li>    <li><a target="_blank" href="https://pixabay.com/" ref="nofollow"><i class="iconfont icon-xiangyou1"></i>pixabay</a></li>    <li><a target="_blank" href="https://wedistill.io/" ref="nofollow"><i class="iconfont icon-xiangyou1"></i>Distill素材</a></li>    <li><a target="_blank" href="https://colorhub.me/" ref="nofollow"><i class="iconfont icon-xiangyou1"></i>colorhub</a></li>    <li><a target="_blank" href="https://wallhaven.cc/" ref="nofollow"><i class="iconfont icon-xiangyou1"></i>Wallhaven壁纸</a></li>    <li><a target="_blank" href="https://en.freejpg.com.ar/" ref="nofollow"><i class="iconfont icon-xiangyou1"></i>FreeJPG</a></li>    </ul></div><div class="item">    <h3>在线翻译</h3>    <ul>    <li><a target="_blank" href="https://fanyi.baidu.com/" ref="nofollow"><i class="iconfont icon-xiangyou1"></i>百度翻译</a></li>    <li><a target="_blank" href="https://fanyi.youdao.com/" ref="nofollow"><i class="iconfont icon-xiangyou1"></i>有道翻译</a></li>    <li><a target="_blank" href="https://translate.google.cn/" ref="nofollow"><i class="iconfont icon-xiangyou1"></i>Google翻译</a></li>    <li><a target="_blank" href="https://fanyi.qq.com/" ref="nofollow"><i class="iconfont icon-xiangyou1"></i>腾讯翻译君</a></li>    <li><a target="_blank" href="https://fanyi.so.com/" ref="nofollow"><i class="iconfont icon-xiangyou1"></i>360翻译</a></li>    <li><a target="_blank" href="https://fanyi.sogou.com/text">搜狗翻译</a></li>    <li><a target="_blank" href="https://cn.bing.com/translator">必应翻译</a></li>    </ul></div><div class="item">    <h3>云服务厂商</h3>    <ul>    <li><a target="_blank" href="https://www.huaweicloud.com/" ref="nofollow"><i class="iconfont icon-xiangyou1"></i>华为云</a></li>    <li><a target="_blank" href="https://www.aliyun.com/" ref="nofollow"><i class="iconfont icon-xiangyou1"></i>阿里云</a></li>    <li><a target="_blank" href="https://cloud.tencent.com/" ref="nofollow"><i class="iconfont icon-xiangyou1"></i>腾讯云</a></li>    <li><a target="_blank" href="https://justhost.ru/" ref="nofollow"><i class="iconfont icon-xiangyou1"></i>justhost</a></li>    <li><a target="_blank" href="https://www.alibabacloud.com/" ref="nofollow"><i class="iconfont icon-xiangyou1"></i>阿里云国际</a></li>    <li><a target="_blank" href="https://www.vultr.com/" ref="nofollow"><i class="iconfont icon-xiangyou1"></i>VULTR</a></li>    <li><a target="_blank" href="https://azure.microsoft.com/" ref="nofollow"><i class="iconfont icon-xiangyou1"></i>微软Azure</a></li>    <li><a target="_blank" href="https://aws.amazon.com/" ref="nofollow"><i class="iconfont icon-xiangyou1"></i>AWS云</a></li>    <li><a target="_blank" href="https://www.oracle.com/cn/cloud/free/" ref="nofollow"><i class="iconfont icon-xiangyou1"></i>Oracle</a></li>    </ul></div><div class="item">    <h3>管理工具</h3>    <ul>    <li><a target="_blank" href="https://zijian.aliyun.com">阿里云自检平台</a></li>    <li><a target="_blank" href="https://ping.pe">ping.pe</a></li>    <li><a target="_blank" href="https://wangzhan.qianxin.com/" ref="nofollow"><i class="iconfont icon-xiangyou1"></i>奇安信CDN</a></li>    <li><a target="_blank" href="http://seo.chinaz.com/" ref="nofollow"><i class="iconfont icon-xiangyou1"></i>SEO查询</a></li>    <li><a target="_blank" href="https://tool.lu/" ref="nofollow"><i class="iconfont icon-xiangyou1"></i>在线工具</a></li>    <li><a target="_blank" href="https://www.whois.com/whois/" ref="nofollow"><i class="iconfont icon-xiangyou1"></i>whois查询</a></li>    <li><a target="_blank" href="https://tinypng.com//" ref="nofollow"><i class="iconfont icon-xiangyou1"></i>TinyPNG</a></li>    <li><a target="_blank" href="https://tinyjpg.com//" ref="nofollow"><i class="iconfont icon-xiangyou1"></i>TinyJPG</a></li>    <li><a target="_blank" href="https://www.speedtest.cn/" ref="nofollow"><i class="iconfont icon-xiangyou1"></i>Speedtest测速</a></li>    <li><a target="_blank" href="https://fonts.safe.360.cn/" ref="nofollow"><i class="iconfont icon-xiangyou1"></i>360查字体</a></li>    <li><a target="_blank" href="https://www.testufo.com/" ref="nofollow"><i class="iconfont icon-xiangyou1"></i>TestUfo性能测试</a></li>    <li><a target="_blank" href="https://www.iconfont.cn/" ref="nofollow"><i class="iconfont icon-xiangyou1"></i>阿里巴巴图标库</a></li>    <li><a target="_blank" href="https://ip.sb/" ref="nofollow"><i class="iconfont icon-xiangyou1"></i>IP查询</a></li>    <li><a target="_blank" href="https://greasyfork.org/zh-CN" ref="nofollow"><i class="iconfont icon-xiangyou1"></i>Greasy Fork脚本</a></li>    <li><a target="_blank" href="http://zhongguose.com/" ref="nofollow"><i class="iconfont icon-xiangyou1"></i>中国色</a></li>    <li><a target="_blank" href="https://www.itdog.cn/" ref="nofollow"><i class="iconfont icon-xiangyou1"></i>IT狗</a></li>    <li><a target="_blank" href="https://speed-2sq.pages.dev/" ref="nofollow"><i class="iconfont icon-xiangyou1"></i>流量消失器</a></li>    </ul></div>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>解决Chrome带来software_reporter_tool 长时间占用CPU问题</title>
      <link href="/posts/4d58e281.html"/>
      <url>/posts/4d58e281.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->今天开机，一打开Chrome浏览器，再打开其他应用的时候感觉机器反应有点慢，日常操作，查看任务管理器 CPU占用80-99% ，仔细查找发现一个叫`software_reporter_tool.exe` 的程序占用了一半CPU使用率，转到文件所在文件夹查看，发现是`Google Chrome`使用一个文件。<p>仔细查找网上资料发现 <code>Software_reporter_tool.exe</code>是谷歌浏览器的一个用于清理恶意的扩展、应用程序、劫持页面等的一个工具，在安装并使用谷歌浏览器的时候，Software_reporter_tool.exe也会自动下载在安装文件当中。</p><p><img src="https://img.jinjun.top/images/usr/uploads/2019/08/1566223210.png" alt="Chrome.png"></p><p>可能还会偷偷向Google打小报告，也不用用户同意。但是秉持着 “自己的电脑自己做主” 的原则，还是把他禁用了。<del>受不了风扇的巨大噪音</del></p><h3 id="禁用-Software-Reporter-Tool"><a href="#禁用-Software-Reporter-Tool" class="headerlink" title="禁用 Software Reporter Tool"></a>禁用 Software Reporter Tool</h3><p>先找到文件的所在的位置，默认的位置在以下目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\[YourName]\AppData\Local\Google\Chrome\User Data\SwReporter\[版本]\software_reporter_tool.exe</span><br></pre></td></tr></table></figure><p>还可以通过 <code>Win+R</code> 打开运行命令窗口并输入命令快速查找</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%localappdata%\Google\Chrome\User Data\SwReporter</span><br></pre></td></tr></table></figure><p><img src="https://img.jinjun.top/images/usr/uploads/2019/08/1566224056.png" alt="20190819221359.png"></p><ul><li>右键单击software_reporter_tool.exe选择属性</li><li>转到“安全”选项卡</li></ul><p><img src="https://img.jinjun.top/images/usr/uploads/2019/08/1566224604.png" alt="20190819221950.png"></p><ul><li><p>点击 “高级”</p></li><li><p>点击“禁用继承”</p></li><li><p>选择“从此对象中删除所有继承的权限” ，之后一路点击“确认”</p></li></ul><p><img src="https://img.jinjun.top/images/usr/uploads/2019/08/1566224691.png" alt="20190819222059.png"></p><p>这样就没有其他用户可以访问 <code>SwReporter</code>文件夹并启动<code>Software Reporter Tool</code></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Chrome </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用Darkmode.js添加一键黑暗模式</title>
      <link href="/posts/73c190a6.html"/>
      <url>/posts/73c190a6.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->-   Darkmode.js 这个东西还是挺好玩的，非常易于使用，只需一段代码就可以让你的网站支持暗黑模式，安装好之后，在网页的下方有一个圆形按钮，点击即可切换白天/夜晚模式。Darkmode.js 是开源的项目，所以可以免费玩耍 ，不过如果想玩的好，还是需要点技术的。这篇文章就来看看如何安装这个 Darkmode.js。<p>官网：<a href="https://darkmodejs.learn.uno/">https://darkmodejs.learn.uno/</a></p><blockquote><p>官方给出的快速开箱代码</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 在 body 结束前引入<span class="variable constant_">JS</span>　推荐放在 fooder 下</span><br><span class="line">&lt;script src=<span class="string">&quot;https://cdn.jsdelivr.net/npm/darkmode-js@1.4.0/lib/darkmode-js.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="keyword">new</span> <span class="title class_">Darkmode</span>().<span class="title function_">showWidget</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>再添加下面这段JS，当然你也适当修改一下，适配自己的网站。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">      <span class="keyword">var</span> options = &#123;</span><br><span class="line">        <span class="attr">bottom</span>: <span class="string">&#x27;32px&#x27;</span>, <span class="comment">// default: &#x27;32px&#x27;</span></span><br><span class="line">        <span class="attr">right</span>: <span class="string">&#x27;unset&#x27;</span>, <span class="comment">// default: &#x27;32px&#x27;</span></span><br><span class="line">        <span class="attr">left</span>: <span class="string">&#x27;32px&#x27;</span>, <span class="comment">// default: &#x27;unset&#x27;</span></span><br><span class="line">        <span class="attr">time</span>: <span class="string">&#x27;0.3s&#x27;</span>, <span class="comment">// default: &#x27;0.3s&#x27;</span></span><br><span class="line">        <span class="attr">mixColor</span>: <span class="string">&#x27;#fff&#x27;</span>, <span class="comment">// default: &#x27;#fff&#x27;</span></span><br><span class="line">        <span class="attr">backgroundColor</span>: <span class="string">&#x27;#fff&#x27;</span>,  <span class="comment">// default: &#x27;#fff&#x27;</span></span><br><span class="line">        <span class="attr">buttonColorDark</span>: <span class="string">&#x27;#100f2c&#x27;</span>,  <span class="comment">// default: &#x27;#100f2c&#x27;</span></span><br><span class="line">        <span class="attr">buttonColorLight</span>: <span class="string">&#x27;#fff&#x27;</span>, <span class="comment">// default: &#x27;#fff&#x27;</span></span><br><span class="line">        <span class="attr">saveInCookies</span>: <span class="literal">true</span>, <span class="comment">// default: true,</span></span><br><span class="line">        <span class="attr">label</span>: <span class="string">&#x27;?&#x27;</span>, <span class="comment">// default: &#x27;&#x27;</span></span><br><span class="line">        <span class="attr">autoMatchOsTheme</span>: <span class="literal">true</span> <span class="comment">// default: true</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">const</span> darkmode = <span class="keyword">new</span> <span class="title class_">Darkmode</span>(options);</span><br><span class="line">      darkmode.<span class="title function_">showWidget</span>();</span><br><span class="line">    &lt;/script&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 资源分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typecho </tag>
            
            <tag> Javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决deepin系统进入不了系统 开机转圈圈的解决方法</title>
      <link href="/posts/d7ae2b8f.html"/>
      <url>/posts/d7ae2b8f.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->![deepin.jpg][1]<blockquote><p>很多人安装deepin大部分可能会遇到因为显卡的原因或者双显卡的原因无法进入系统页面一直在转圈。</p></blockquote><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><ul><li><p>开机进入grub的引导页面，选择deepin的启动项。先不要按回车进入系统。而是按?<code>e</code>?键 进入gurb引导编辑页面。</p></li><li><p>找到?<code>splash quiet</code>?这个关键词 后面可能带有?<code>DEEPIN_GFXMODE=$DEEPIN_GFXMODE</code>?如果你的显卡是?<code>nvidia</code>?系列 (例如我的笔记本就是HD610+GTX950m ) 双显卡</p><p>不过?<code>liunx</code>?对独显貌似很感冒，一直不冷不热。关键是部分显卡厂商没有提供liunx的驱动服务。</p></li><li><p>在grub的编辑项中，如果?<code>DEEPIN_GFXMODE=$DEEPIN_GFXMODE</code>?不能进入系统，那只能替换以下这两条?<code>acpi_osi=! acpi=&quot;windows 2009&quot;</code>?或者是?<code>nouveau.modeset=0</code>?然后按?<code>F10</code>?应用重新进入系统，如果不行一条试。</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#尝试替换以下代码</span><br><span class="line">DEEPIN_GFXMODE=$DEEPIN_GFXMODE</span><br><span class="line">nouveau.modeset=0</span><br><span class="line">acpi_osi=! acpi=&quot;windows 2009&quot;</span><br></pre></td></tr></table></figure><ul><li>成功进入系统后，利用deepin系统自带的显卡驱动管理，下载对应的显卡驱动就可以了。</li></ul><p>注：显卡驱动自带4个模式，核显、独显、大黄蜂、双显卡 ，这里推荐安装双显卡模式 就是一个字?<code>稳</code></p><ul><li>如果暂时没有你的驱动，可以有以下方法尝试。</li></ul><p>如果没有对应驱动，可以按Ctrl+Alt+T进入打开终端，在终端中输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit /boot/grub/grub.cfg</span><br><span class="line">#安装sudo</span><br><span class="line">sudo apt-get -y install gedit</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>很多人没有安装到 <code>gedit</code>命令，可以尝试用 <code>sudo</code>命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /boot/grub/grub.cfg</span><br></pre></td></tr></table></figure><p>打开后需要在第一个quiet后添加之前的代码，重启后生效。</p><p>解决问题大概就是这样。详细教程迟点在写。。。。</p>]]></content>
      
      
      <categories>
          
          <category> 资源分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Deepin </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos的yum源更换为国内的阿里云/网易源</title>
      <link href="/posts/2724ee29.html"/>
      <url>/posts/2724ee29.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->![centos.jpg][1]<p>Yum(全称为 Yellow dog Updater, Modified)是一个在Fedora和RedHat以及CentOS中的Shell前端软件包管理器。基于RPM包管理，能够从指定的服务器自动下载RPM包并且安装，可以自动处理依赖性关系，并且一次安装所有依赖的软件包，无须繁琐地一次次下载、安装。</p><p>使用centos系统最熟悉的莫过于yum命令，yum命令可以让安装软件变得那么简单，编译安装的依赖关系大部分都会解决。国内的服务器换yum源后，速度会大大提高。</p><ul><li>备份</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup</span><br></pre></td></tr></table></figure><ul><li>下载新的<code>CentOS-Base.repo</code>到<code>/etc/yum.repos.d/</code></li></ul><blockquote><p>CentOS 5</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 阿里源</span><br><span class="line">wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-5.repo</span><br><span class="line">curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-5.repo</span><br><span class="line"># 网易源</span><br><span class="line">wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.163.com/.help/CentOS5-Base-163.repo</span><br><span class="line">curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.163.com/.help/CentOS5-Base-163.repo</span><br></pre></td></tr></table></figure><blockquote><p>CentOS 6</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 阿里源</span><br><span class="line">wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-6.repo</span><br><span class="line">curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-6.repo</span><br><span class="line"># 网易源</span><br><span class="line">wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.163.com/.help/CentOS6-Base-163.repo</span><br><span class="line">curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.163.com/.help/CentOS6-Base-163.repo</span><br></pre></td></tr></table></figure><blockquote><p>CentOS 7</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 阿里源</span><br><span class="line">wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line">curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line"># 网易源</span><br><span class="line">wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.163.com/.help/CentOS7-Base-163.repo</span><br><span class="line">curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.163.com/.help/CentOS7-Base-163.repo</span><br></pre></td></tr></table></figure><ul><li>之后运行以下生成缓存</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum clean all</span><br><span class="line">yum makecache</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 资源分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CentOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Visual Studio Code - 微软良心出品跨平台的免费代码编辑器</title>
      <link href="/posts/ab8a8664.html"/>
      <url>/posts/ab8a8664.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->Visual Studio Code，是微软推出的一款免费的、开源的、高性能的、跨平台的、轻量级的代码编辑器，号称微软最好的开源软件作品。<p>VS Code 有一个扩展和主题市场，包含了数以千计质量不同的插件，它提供了 Windows、macOS 和 Linux版本，内置支持JavaScript、TypeScript 和 Node.js，通过丰富的扩展和插件生态，你可以使用 VS Code 高效的编写 C++、C#、Java、Python、PHP、Go 等主流编程语言。</p><p><img src="https://img.jinjun.top/images/usr/uploads/2019/08/1565702937.png" alt="VS Code.png"></p><h3 id="下载链接"><a href="#下载链接" class="headerlink" title="下载链接"></a>下载链接</h3><p>官网：<a href="https://code.visualstudio.com/">Visual Studio Code</a></p>]]></content>
      
      
      <categories>
          
          <category> 资源分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VS Code </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Typecho文章图片添加灯箱效果</title>
      <link href="/posts/d177ca4.html"/>
      <url>/posts/d177ca4.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->FancyBox是一款优秀的弹出框Jquery插件，FancyBox提供了一种简洁优雅的方式去为图片、网页和多媒体添加灯箱功能。此教程为大家介绍 FancyBox在Typecho主题上的应用。<h2 id="先来看看效果"><a href="#先来看看效果" class="headerlink" title="先来看看效果"></a>先来看看效果</h2><p><img src="https://img.jinjun.top/images/usr/uploads/2019/08/1565457199.png" alt="206360083.png"></p><p>下面开始教程~</p><h2 id="引用-FancyBox插件"><a href="#引用-FancyBox插件" class="headerlink" title="引用 FancyBox插件"></a>引用 FancyBox插件</h2><p>把下面内容添加到?<code>header.php</code>?中?<code>&lt;/head&gt;</code>?前面</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;http://ajax.googleapis.com/ajax/libs/jquery/1.7/jquery.min.js&quot;&gt;&lt;/script&gt; &lt;!--如果主题已经引用了jQuery库，可以忽略这条--&gt;</span><br><span class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.staticfile.org/fancybox/3.5.2/jquery.fancybox.min.css&quot;&gt;</span><br><span class="line">&lt;script src=&quot;https://cdn.staticfile.org/fancybox/3.5.2/jquery.fancybox.min.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="修改post-php"><a href="#修改post-php" class="headerlink" title="修改post.php"></a>修改post.php</h2><p>打开post.php，将</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php $this-&gt;content(); ?&gt;</span><br></pre></td></tr></table></figure><p>修改成</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    $pattern = &#x27;/\&lt;img.*?src\=\&quot;(.*?)\&quot;[^&gt;]*&gt;/i&#x27;;</span><br><span class="line">    $replacement = &#x27;&lt;a href=&quot;$1&quot; data-fancybox=&quot;gallery&quot; /&gt;&lt;img src=&quot;$1&quot; alt=&quot;&#x27;.$this-&gt;title.&#x27;&quot; title=&quot;点击放大图片&quot;&gt;&lt;/a&gt;&#x27;;</span><br><span class="line">    $content = preg_replace($pattern, $replacement, $this-&gt;content);</span><br><span class="line">    echo $content;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h2 id="初始化FancyBox"><a href="#初始化FancyBox" class="headerlink" title="初始化FancyBox"></a>初始化FancyBox</h2><p>把下面js添加到?<code>footer.php</code>?文件的</body>前</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">    $(document).ready(function () &#123;</span><br><span class="line">        $( &quot;.fancybox&quot;).fancybox();</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>完成。</p><hr><p>来自：<a href="https://www.seogo.me/typecho/598.html">运营狗</a></p>]]></content>
      
      
      <categories>
          
          <category> Typecho </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typecho </tag>
            
            <tag> Javascript </tag>
            
            <tag> 灯箱效果 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Liunx系统创建swap交换分区</title>
      <link href="/posts/f71ea8f7.html"/>
      <url>/posts/f71ea8f7.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->> 前言<p>最近购买了好几个小鸡准备拿来做CDN加速使用，但是内存都是512M的。担心在使用Nginx可能会崩溃，所以要适当的调一下SWAP分区，让应用更稳定的运行。其实就是把硬盘上的一部分空间来做swap（windows也有这一项技术：虚拟内存），将系统内的非活跃内存换页到swap，来提高系统的可用内存。</p><h3 id="创建swap分区"><a href="#创建swap分区" class="headerlink" title="创建swap分区"></a>创建swap分区</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#新建一个文件专门用于swap分区</span><br><span class="line">dd if=/dev/zero of=/swapfile bs=1M count=2024</span><br><span class="line">#也可以用fallocate这种方法来创建  </span><br><span class="line">#fallocate -l 2G /swapfile</span><br><span class="line"></span><br><span class="line">#设置swap交换区</span><br><span class="line">mkswap /swapfile</span><br><span class="line"></span><br><span class="line">#更改swap权限</span><br><span class="line">chmod 600 /swapfile</span><br></pre></td></tr></table></figure><h3 id="启用分区"><a href="#启用分区" class="headerlink" title="启用分区"></a>启用分区</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#启用swap交换分区</span><br><span class="line">sawpon /swapfile</span><br><span class="line"></span><br><span class="line">#查看内存状态</span><br><span class="line">free -m</span><br><span class="line"></span><br><span class="line">#设置开机自启</span><br><span class="line">vim /etc/fstab</span><br><span class="line"></span><br><span class="line">#在/etc/fstab添加下面这段内容</span><br><span class="line">/swapfile swap swap defaults 0 0</span><br><span class="line">或者直接输入</span><br><span class="line">echo &quot;/data/swap swap swap defaults    0  0&quot; &gt;&gt; /etc/fstab</span><br></pre></td></tr></table></figure><h3 id="查看内核参数-调vm-swappiness参数"><a href="#查看内核参数-调vm-swappiness参数" class="headerlink" title="查看内核参数 调vm.swappiness参数"></a>查看内核参数 调vm.swappiness参数</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">cat /proc/sys/vm/swappiness</span><br><span class="line">sysctl -a | grep swappiness</span><br><span class="line">#临时修改</span><br><span class="line">sysctl -w vm.swappiness=50</span><br><span class="line"></span><br><span class="line">#永久修改</span><br><span class="line">vi + /etc/sysctl.conf</span><br><span class="line"># 添加</span><br><span class="line">vm.swappiness=50</span><br><span class="line">## 让配置生效 </span><br><span class="line">sysctl -p </span><br></pre></td></tr></table></figure><p>这里需要简单说明下,在Linux系统中,可以通过查看&#x2F;proc&#x2F;sys&#x2F;vm&#x2F;swappiness内容的值来确定系统对SWAP分区的使用原则。当swappiness内容的值为0时,表示最大限度地使用物理内存,物理内存使用完毕后,才会使用SWAP分区。当swappiness内容的值为100时,表示积极地使用SWAP分区,并且把内存中的数据及时地置换到SWAP分区。注：若想永久修改，则编辑&#x2F;etc&#x2F;sysctl.conf文件<br>默认值为 0，表示需要在物理内存使用完毕后才会使用 SWAP 分区。<br>我们这里设置的50,就表示当物理内存少于50%时便使用交换分区。</p><h3 id="关闭或删除swap分区"><a href="#关闭或删除swap分区" class="headerlink" title="关闭或删除swap分区"></a>关闭或删除swap分区</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#关闭swap分区</span><br><span class="line">swapoff /data/swap   </span><br><span class="line"># swapoff -a &gt;/dev/null</span><br><span class="line"></span><br><span class="line">#删除swap分区</span><br><span class="line">rm -f /swapfile</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于博主</title>
      <link href="/posts/3317594d.html"/>
      <url>/posts/3317594d.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->## 关于博主<p>目前是一个智能高端载人载货维修师（简称：汽车维修工）这样显得高大上一点。其实怎么称呼也无所谓啦！不怎么喜欢和别人交流，语言表达能力不咋地，大概是不善言辞吧。喜欢新事物，追求现实和真正有的东西，喜欢折腾，也喜欢自己上手操作，但是常会因为拖延症落得难以实现（主要还是懒）。</p><h2 id="关于博客"><a href="#关于博客" class="headerlink" title="关于博客"></a>关于博客</h2><ul><li>博客多次就不提了(删库跑路)，新博客于<code>2019年1月</code>购买域名重新开站。</li><li>一个记录生活、折腾的博客，主打原创的博客。力求原创真实。遇到好多东西也会转载分享给你们。</li><li>博客运行环境<code>MariaDB</code>、<code>PHP 7.4</code>、<code>Kangle</code>、<code>Redis</code>。</li><li>博客托管于<code>阿里云/华为云</code>，并使用<code>腾讯云</code>、<code>cloudflare</code>、<code>阿里云</code>、<code>硅云</code>等服务厂商提供云存储&#x2F;内容分发等服务， 请各位Dalao手下留情。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 钧言钧语 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>typecho非插件实现文章阅读次数统计(cookie版)</title>
      <link href="/posts/f169d44f.html"/>
      <url>/posts/f169d44f.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->在 functions.php 中加入下面代码<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">function get_post_view($archive)</span><br><span class="line">&#123;</span><br><span class="line">    $cid    = $archive-&gt;cid;</span><br><span class="line">    $db     = Typecho_Db::get();</span><br><span class="line">    $prefix = $db-&gt;getPrefix();</span><br><span class="line">    if (!array_key_exists(&#x27;views&#x27;, $db-&gt;fetchRow($db-&gt;select()-&gt;from(&#x27;table.contents&#x27;)))) &#123;</span><br><span class="line">        $db-&gt;query(&#x27;ALTER TABLE `&#x27; . $prefix . &#x27;contents` ADD `views` INT(10) DEFAULT 0;&#x27;);</span><br><span class="line">        echo 0;</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    $row = $db-&gt;fetchRow($db-&gt;select(&#x27;views&#x27;)-&gt;from(&#x27;table.contents&#x27;)-&gt;where(&#x27;cid = ?&#x27;, $cid));</span><br><span class="line">    if ($archive-&gt;is(&#x27;single&#x27;)) &#123;</span><br><span class="line"> $views = Typecho_Cookie::get(&#x27;extend_contents_views&#x27;);</span><br><span class="line">        if(empty($views))&#123;</span><br><span class="line">            $views = array();</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            $views = explode(&#x27;,&#x27;, $views);</span><br><span class="line">        &#125;</span><br><span class="line">if(!in_array($cid,$views))&#123;</span><br><span class="line">       $db-&gt;query($db-&gt;update(&#x27;table.contents&#x27;)-&gt;rows(array(&#x27;views&#x27; =&gt; (int) $row[&#x27;views&#x27;] + 1))-&gt;where(&#x27;cid = ?&#x27;, $cid));</span><br><span class="line">array_push($views, $cid);</span><br><span class="line">            $views = implode(&#x27;,&#x27;, $views);</span><br><span class="line">            Typecho_Cookie::set(&#x27;extend_contents_views&#x27;, $views); //记录查看cookie</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    echo $row[&#x27;views&#x27;];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在需要显示次数的地方 (如 index.php，post.php,page.php) 加下边的代码<code>&lt;?php get_post_view($this) ?&gt;</code></p>]]></content>
      
      
      <categories>
          
          <category> 折腾笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typecho </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Typecho非插件实现文章阅读次数统计</title>
      <link href="/posts/4a72d90f.html"/>
      <url>/posts/4a72d90f.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->在functions.php中加入下面代码<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//get_post_view($this)</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_post_view</span>(<span class="params"><span class="variable">$archive</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$cid</span>    = <span class="variable">$archive</span>-&gt;cid;</span><br><span class="line">    <span class="variable">$db</span>     = <span class="title class_">Typecho_Db</span>::<span class="title function_ invoke__">get</span>();</span><br><span class="line">    <span class="variable">$prefix</span> = <span class="variable">$db</span>-&gt;<span class="title function_ invoke__">getPrefix</span>();</span><br><span class="line">    <span class="keyword">if</span> (!<span class="title function_ invoke__">array_key_exists</span>(<span class="string">&#x27;views&#x27;</span>, <span class="variable">$db</span>-&gt;<span class="title function_ invoke__">fetchRow</span>(<span class="variable">$db</span>-&gt;<span class="title function_ invoke__">select</span>()-&gt;<span class="keyword">from</span>(<span class="string">&#x27;table.contents&#x27;</span>)))) &#123;</span><br><span class="line">        <span class="variable">$db</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="string">&#x27;ALTER TABLE `&#x27;</span> . <span class="variable">$prefix</span> . <span class="string">&#x27;contents` ADD `views` INT(10) DEFAULT 0;&#x27;</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$row</span> = <span class="variable">$db</span>-&gt;<span class="title function_ invoke__">fetchRow</span>(<span class="variable">$db</span>-&gt;<span class="title function_ invoke__">select</span>(<span class="string">&#x27;views&#x27;</span>)-&gt;<span class="keyword">from</span>(<span class="string">&#x27;table.contents&#x27;</span>)-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;cid = ?&#x27;</span>, <span class="variable">$cid</span>));</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$archive</span>-&gt;<span class="title function_ invoke__">is</span>(<span class="string">&#x27;single&#x27;</span>)) &#123;</span><br><span class="line">       <span class="variable">$db</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="variable">$db</span>-&gt;<span class="title function_ invoke__">update</span>(<span class="string">&#x27;table.contents&#x27;</span>)-&gt;<span class="title function_ invoke__">rows</span>(<span class="keyword">array</span>(<span class="string">&#x27;views&#x27;</span> =&gt; (<span class="keyword">int</span>) <span class="variable">$row</span>[<span class="string">&#x27;views&#x27;</span>] + <span class="number">1</span>))-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;cid = ?&#x27;</span>, <span class="variable">$cid</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$row</span>[<span class="string">&#x27;views&#x27;</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在需要显示次数的地方(如index.php，post.php,page.php)加下边的代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php get_post_view($this) ?&gt;</span><br></pre></td></tr></table></figure><p>这个方法使用的数据和Hanny的Stat插件使用是同一个，可以方便替换掉Star插件，当然你也可以自行修改代码中所引用的数据列。</p>]]></content>
      
      
      <categories>
          
          <category> 折腾笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typecho </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux SSH远程传输命令 scp</title>
      <link href="/posts/74dacf21.html"/>
      <url>/posts/74dacf21.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->如果你有几台云主机，而腾讯，阿里等等是支持内网传输的，并且不限制带宽，正常传输文件的速度能达到35m~50m/s，这个时候我们就可以使用内网，在几台云主机之间传输命令，只要把域名处，换成内网IP即可。使用的命令是scp，这个命令linux内置，本机和目标机，只要支持ssh，无须安装设置任何软件。<span id="more"></span><p>###情形一：迁移网站数量较少。</p><p>较少的迁移量的话，技术员可以按照老方法，将网站打包下载，上传新服务器。</p><p>###情形二：迁移内容较多。</p><p>迁移内容较多的话，那么下载上传绝对是个很耗费人心神的活。尤其是遇到小服务器带宽又不高的情况，基本上1G内容都能下载近半个小时。所以这个时候服务器对拷绝对是个最佳的选择</p><p>##1、获取远程服务器上的文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">scp -P 2222 root@192.161.1.1:/root/test.tar.gz /home/test.tar.gz</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>上端口大写P 为参数，2222 表示更改SSH端口后的端口，如果没有更改SSH端口可以不用添加该参数。 root@www 表示使用root用户登录远程服务器192.168.1.1，:&#x2F;root&#x2F;test.tar.gz 表示远程服务器上的文件，最后面的&#x2F;home&#x2F;test.tar.gz表示保存在本地上的路径和文件名。</p><p>##2、获取远程服务器上的目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">scp -P 2222 -r root@192.168.1.1:/root/dirname/ /home/dirname/</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>##3、将本地文件上传到服务器上</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">scp -P 2222 /home/test.tar.gz root@192.168.1.1:/root/test.tar.gz</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>##4、将本地目录上传到服务器上</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">scp -P 2222 -r /home/dirname/ root@192.168.1.1:/root/dirname/</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h1><p>?- 将远程服务器内容下载到新服务器上。用SSH客户端登录新服务器的情况，执行下面一行命令。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">scp -r &quot;老服务器SSH账号&quot;@&quot;老服务器IP&quot;:老服务器文件夹或文件 新服务器文件夹</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">scp -r root@192.168.1.1:/home/root/others/ /data/</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>如果老服务器的SSH登录端口不是默认的”22”，需要在-r参数后面加上”-P : 端口号”。回车后输入老服务的root密码就可以了。</p><p>?- SSH客户端登录老服务器，将老服务器文件放到新服务器的情况，执行下面一行命令。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">scp &quot;本地文件或文件夹&quot; &quot;新服务器账号&quot;@&quot;新服务器IP&quot;:&quot;新服务器文件夹&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">scp /home/space/music/1.mp3 root@192.168.1.1:/home/root/others/music</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>##使用scp命令要确保使用的用户具有可读取远程服务器相应文件的权限，否则scp命令是无法起作用的。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello Typecho、Hello Word！</title>
      <link href="/posts/95dbb25.html"/>
      <url>/posts/95dbb25.html</url>
      
        <content type="html"><![CDATA[<!--markdown-->Hello Word！<p>新的网站，全新的启航！</p><p>我来过，就像我没有来过一样！</p><p>2019 加油</p>]]></content>
      
      
      <categories>
          
          <category> 钧言钧语 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
